{"version":3,"sources":["assets\\scripts\\Yu\\MoleGame\\GameScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameScene extends cc.Component {\r\n\r\n    // 구멍 노드 설정 \r\n    @property(cc.Node) moleHole1: cc.Node = null;\r\n    @property(cc.Node) moleHole2: cc.Node = null;\r\n    @property(cc.Node) moleHole3: cc.Node = null;\r\n    @property(cc.Node) moleHole4: cc.Node = null;\r\n    @property(cc.Node) moleHole5: cc.Node = null;\r\n    @property(cc.Node) moleHole6: cc.Node = null;\r\n\r\n    // 두더지 프리팹 설정정\r\n    @property(cc.Prefab) molePrefab: cc.Prefab = null;\r\n\r\n    // 점수 및 타이머 \r\n    @property(cc.Label) scoreLabel: cc.Label = null;\r\n    @property(cc.Label) timerLabel: cc.Label = null;\r\n\r\n    private moleHoles: cc.Node[] = [];  // 구멍을 저장할 배열\r\n    private score: number = 0;  // 점수\r\n    private timer: number = 30;  // 타이머 30초\r\n\r\n    // 게임 시작\r\n    start() {\r\n        // 구멍 노드 배열에 추가\r\n        this.moleHoles = [\r\n            this.moleHole1, this.moleHole2, this.moleHole3, \r\n            this.moleHole4, this.moleHole5, this.moleHole6\r\n        ];\r\n\r\n        // 게임 시작 시, 타이머와 점수 초기화\r\n        this.score = 0;\r\n        this.timer = 30;\r\n        this.updateScoreLabel();\r\n        this.updateTimerLabel();\r\n\r\n        // 타이머 감소 (1초씩)\r\n        this.schedule(this.decreaseTimer, 1);\r\n\r\n        // 첫 번째 두더지 젠 \r\n        this.spawnMoles();\r\n    }\r\n\r\n    // 타이머 감소\r\n    decreaseTimer() {\r\n        this.timer--;\r\n        this.updateTimerLabel();\r\n\r\n        if (this.timer <= 0) {\r\n            this.gameOver();\r\n        }\r\n    }\r\n\r\n    // 타이머  업데이트\r\n    updateTimerLabel() {\r\n        this.timerLabel.string = `Time: ${this.timer}`;\r\n    }\r\n\r\n    // 점수 업데이트\r\n    updateScoreLabel() {\r\n        this.scoreLabel.string = `Score: ${this.score}`;\r\n    }\r\n\r\n    // 두더지 랜덤 젠 \r\n    spawnMoles() {\r\n        // 일정 시간마다 두더지 생성 \r\n        this.schedule(() => {\r\n            const randomHoleIndex = Math.floor(Math.random() * this.moleHoles.length);  // 랜덤 인덱스\r\n            const selectedHole = this.moleHoles[randomHoleIndex];  // 랜덤으로 선택된 구멍\r\n\r\n            // 두더지 생성\r\n            const mole = cc.instantiate(this.molePrefab);\r\n            mole.name = \"Mole\";  \r\n            mole.active = true;  // 두더지 활성화\r\n            selectedHole.addChild(mole);  // 구멍에 두더지 추가\r\n\r\n            // 두더지 잡기 클릭 이벤트 처리\r\n            mole.on(cc.Node.EventType.TOUCH_END, this.onMoleClick, this);\r\n\r\n            // 두더지 숨기기 (1초 후)\r\n            this.scheduleOnce(() => {\r\n                mole.active = false;\r\n            }, 1);  // 1초 후 두더지 숨기기\r\n        }, 0.5, cc.macro.REPEAT_FOREVER);  // 0.5초마다 두더지 하나씩 추가\r\n    }\r\n\r\n    // 두더지 잡기 클릭 이벤트 정의\r\n    onMoleClick(event: cc.Event.EventTouch) {\r\n        const mole = event.target;  // 클릭된 두더지\r\n\r\n        // 이미 클릭된 두더지는 다시 클릭할 수 없도록 처리\r\n        if (!mole.active) return;\r\n\r\n        // 두더지 클릭 시 점수 증가\r\n        this.score += 1;\r\n        this.updateScoreLabel();\r\n\r\n        // 두더지 활성화 끄기(숨기기)\r\n        mole.active = false;\r\n    }\r\n\r\n    // 게임 종료\r\n    gameOver() {\r\n        cc.director.loadScene(\"GameOverScene\");  // 게임 오버 후 게임 오버 씬으로 전환\r\n    }\r\n}\r\n"]}