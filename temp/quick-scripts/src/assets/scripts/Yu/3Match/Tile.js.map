{"version":3,"sources":["assets\\scripts\\Yu\\3Match\\Tile.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\nimport ThreeMatchBoard from \"./3MatchBoard\";\n@ccclass\nexport default class Tile extends cc.Component {\n    @property(cc.Sprite) // 스프라이트 컴포넌트 연결\n    sprite: cc.Sprite = null;  // 기존 sprite 속성 복구\n\n    @property([cc.Prefab])\n    explosionPrefabs: cc.Prefab[] = [];\n\n\n    @property([cc.SpriteFrame])\n    fruitSprites: cc.SpriteFrame[] = [];\n\n    public row: number = 0;\n    public col: number = 0;\n\n    private touchStartPos: cc.Vec2 = null;\n    private static selectedTile: Tile = null;\n\n    // 노드가 씬에 생성되면서 초기화 단계.\n    // 이 시점에 컴포넌트, 스프라이트, 이벤트 리스너 등을 등록\n    onLoad() {\n        // 스프라이트 컴포넌트가 없으면 추가\n        if (!this.sprite) {\n            this.sprite = this.node.addComponent(cc.Sprite);\n        }\n\n        // this.node.on(cc.Node.EventType.TOUCH_END, this.onTileClicked, this);\n        // 드래그 감지용 이벤트 등록\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n\n    }\n\n    private fruitIndex: number = 0; // 현재 과일 인덱스\n\n    setRandomFruit() {\n        const randomIndex = Math.floor(Math.random() * this.fruitSprites.length);\n        this.fruitIndex = randomIndex;\n        this.sprite.spriteFrame = this.fruitSprites[randomIndex];\n    }\n    \n\n    setRandomFruitExcluding(excludeIndices: number[]) {\n        let availableIndices = this.fruitSprites\n            .map((_, index) => index)\n            .filter(index => !excludeIndices.includes(index));\n    \n        if (availableIndices.length === 0) {\n            availableIndices = this.fruitSprites.map((_, index) => index);\n        }\n    \n        const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n        this.fruitIndex = randomIndex;\n        this.sprite.spriteFrame = this.fruitSprites[randomIndex];\n    }\n    \n    \n\n    addOutline() {\n        // 기존에 있던 Graphics가 있으면 제거\n        let existingGraphics = this.node.getComponent(cc.Graphics);\n        if (existingGraphics) {\n            this.node.removeComponent(existingGraphics);\n        }\n    \n        // 새 Graphics 노드 생성\n        let graphicsNode = new cc.Node();\n        graphicsNode.parent = this.node;\n        graphicsNode.setPosition(0, 0);\n    \n        let graphics = graphicsNode.addComponent(cc.Graphics);\n        graphics.lineWidth = 5; // 테두리 두께\n        graphics.strokeColor = cc.Color.BLACK; // 테두리 색상\n    \n        let size = this.node.getContentSize();\n        console.log(\"Tile Size:\", size); // 디버깅 로그\n    \n        // 테두리 그리기\n        graphics.rect(-size.width / 2, -size.height / 2, size.width, size.height);\n        graphics.stroke();\n    }\n\n    onTouchStart(event: cc.Event.EventTouch) {\n        this.touchStartPos = event.getLocation();\n        // 또는 this.touchStartPos = this.node.convertToNodeSpaceAR(event.getLocation());\n        console.log(\"드래그 시작 위치:\", this.touchStartPos);\n    }\n    \n    onTouchEnd(event: cc.Event.EventTouch) {\n        const endPos = event.getLocation();\n        const delta = endPos.sub(this.touchStartPos);\n\n        console.log(\"드래그 끝 위치:\", endPos);\n        console.log(\"드래그 거리:\", delta);\n\n        // 최소 거리 체크 (조금 더 유연하게, 예: 3픽셀 이상이면 처리)\n        if (delta.len() < 3) {\n            console.log(\"드래그 너무 짧아서 무시됨\");\n            return;\n        }\n\n        let absX = Math.abs(delta.x);\n        let absY = Math.abs(delta.y);\n\n        // 아주 작은 delta.x나 delta.y일 경우, 방향 보정\n        if (absX < 1 && absY < 1) {\n            console.log(\"움직임이 너무 작아서 무시됨\");\n            return;\n        }\n\n        let direction: string = \"\";\n\n        if (absX > absY) {\n            direction = delta.x > 0 ? \"right\" : \"left\";\n        } else {\n            direction = delta.y > 0 ? \"up\" : \"down\";\n        }\n\n        console.log(\"드래그 방향:\", direction);\n        \n        const board = this.node.parent.getComponent(ThreeMatchBoard);\n        if (!board || !board[\"board\"]) {\n            console.warn(\"ThreeMatchBoard를 찾을 수 없음\");\n            return;\n        }\n\n        let targetTile: Tile = null;\n        const row = this.row;\n        const col = this.col;\n\n        switch (direction) {\n            case \"up\":\n                if (row > 0) targetTile = board[\"board\"][row - 1][col];\n                break;\n            case \"down\":\n                if (row < board[\"boardSize\"] - 1) targetTile = board[\"board\"][row + 1][col];\n                break;\n            case \"left\":\n                if (col > 0) targetTile = board[\"board\"][row][col - 1];\n                break;\n            case \"right\":\n                if (col < board[\"boardSize\"] - 1) targetTile = board[\"board\"][row][col + 1];\n                break;\n        }\n\n        if (targetTile) {\n            console.log(`타일 교환: (${row}, ${col}) <-> (${targetTile.row}, ${targetTile.col})`);\n            board.swapTiles(this, targetTile);\n        }\n    }\n\n    explode() {\n        console.log(`explode() 실행: (${this.row}, ${this.col})`);\n\n        const prefab = this.explosionPrefabs[this.fruitIndex];\n        if (prefab) {\n            console.log(`폭발 이펙트 생성 (fruitIndex ${this.fruitIndex}): (${this.row}, ${this.col})`);\n            const effect = cc.instantiate(prefab);\n            effect.parent = this.node.parent;\n            effect.setPosition(this.node.getPosition());\n\n            effect.setScale(1.2);\n            effect.angle = Math.random() * 360;\n\n            const ps = effect.getComponent(cc.ParticleSystem);\n            if (ps) {\n                ps.startSize = 160;       // 파티클 자체 크기 키움\n                ps.startSizeVar = 80;     // 다양한 크기 조합\n                ps.life = 0.25;\n                ps.lifeVar = 0.05;\n                ps.resetSystem();\n            }\n\n            this.scheduleOnce(() => {\n                effect.destroy();\n            }, 1);\n        }\n\n        this.node.runAction(\n            cc.sequence(\n                cc.spawn(\n                    cc.scaleTo(0.1, 1.8).easing(cc.easeCubicActionOut()),\n                    cc.fadeOut(0.15)\n                ),\n                cc.callFunc(() => {\n                    if (Tile.selectedTile === this) {\n                        Tile.selectedTile = null;\n                    }\n                    this.node.destroy();\n                })\n            )\n        );\n    }\n\n\n\n    \n\n    \n}\n"]}