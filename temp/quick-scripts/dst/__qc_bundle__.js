
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/scenes/Yu/3Match/3MExplain');
require('./assets/scenes/Yu/3Match/3MatchBoard');
require('./assets/scenes/Yu/3Match/3MatchManager');
require('./assets/scenes/Yu/3Match/Tile');
require('./assets/scenes/Yu/MoleGame/MoleExplain');
require('./assets/scenes/Yu/MoleGame/MoleGameScene');
require('./assets/scenes/Yu/MultiMoleGame/MultiGuestViewer');
require('./assets/scenes/Yu/MultiMoleGame/MultiplayerGameScene');
require('./assets/scenes/Yu/MultiMoleGame/MultiplayerMoleGameController');
require('./assets/scripts/Controller/CommonUI/GameStartOverlay');
require('./assets/scripts/Controller/CommonUI/GameState');
require('./assets/scripts/Controller/CommonUI/LoginManager');
require('./assets/scripts/Controller/CommonUI/MainMenuScene');
require('./assets/scripts/Controller/CommonUI/SplashMain');
require('./assets/scripts/Controller/CommonUI/StoryScene_Controller');
require('./assets/scripts/Controller/Multi/MultiFlowController');
require('./assets/scripts/Controller/Multi/MultiGameList');
require('./assets/scripts/Controller/Multi/MultiGameResult');
require('./assets/scripts/Controller/Multi/MultiGameWait');
require('./assets/scripts/Controller/Multi/MultiPlayConnect');
require('./assets/scripts/Controller/MyPage/MyInfoController');
require('./assets/scripts/Controller/MyPage/MyRecordController');
require('./assets/scripts/Controller/Single/SingleGameList');
require('./assets/scripts/Controller/Single/SingleGameOver');
require('./assets/scripts/Jang/MazeGameData');
require('./assets/scripts/Jang/MazeGameOverManager');
require('./assets/scripts/Jang/MazeGenerator');
require('./assets/scripts/Jang/MazeLogic');
require('./assets/scripts/Jang/MazePlayerController');
require('./assets/scripts/Jang/MazeRenderer');
require('./assets/scripts/Jang/MazeSingleGameManager');
require('./assets/scripts/Jang/MazeUIManager');
require('./assets/scripts/Jang/Maze_explainSceneManager');
require('./assets/scripts/Sim/BlockCountGame/BlockCountExplain');
require('./assets/scripts/Sim/BlockCountGame/BlockCountGameManager');
require('./assets/scripts/Sim/MultiRememberGame/MultiGuestViewerRemember');
require('./assets/scripts/Sim/MultiRememberGame/MultiPlayerRememberGame');
require('./assets/scripts/Sim/MultiRememberGame/MultiplayerMemoryGameController');
require('./assets/scripts/Sim/RememberGame/RememberGameController');
require('./assets/scripts/Sim/RememberGame/RememberGameExplain');
require('./assets/scripts/Song/MultiReversecorrect/MultiOpponent');
require('./assets/scripts/Song/MultiReversecorrect/MultiReversecorrectGameController');
require('./assets/scripts/Song/MultiReversecorrect/Multiplayer');
require('./assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Button');
require('./assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_init');
require('./assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_logic');
require('./assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Load_Scene');
require('./assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Show_QnA');
require('./assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_Load_Scene');
require('./assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn');
require('./assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn_manager');
require('./assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_game_init');
require('./assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_game_logic');
require('./assets/scripts/Yu/3Match/3MExplain');
require('./assets/scripts/Yu/3Match/3MatchBoard');
require('./assets/scripts/Yu/3Match/3MatchManager');
require('./assets/scripts/Yu/3Match/Tile');
require('./assets/scripts/Yu/MoleGame/MoleExplain');
require('./assets/scripts/Yu/MoleGame/MoleGameScene');
require('./assets/scripts/Yu/MultiMoleGame/MultiGuestViewer');
require('./assets/scripts/Yu/MultiMoleGame/MultiplayerGameScene');
require('./assets/scripts/Yu/MultiMoleGame/MultiplayerMoleGameController');
require('./assets/sockets/socket');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/sockets/socket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3af23xLkelE/Ls3CilqTMF1', 'socket');
// sockets/socket.js

"use strict";

if (!cc.sys.isNative) {
  window.io = window.io || require("socket.io-client");
  window.socket = io("http://43.201.75.158:3000"); // 서버 주소에 맞게 수정
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc29ja2V0c1xcc29ja2V0LmpzIl0sIm5hbWVzIjpbImNjIiwic3lzIiwiaXNOYXRpdmUiLCJ3aW5kb3ciLCJpbyIsInJlcXVpcmUiLCJzb2NrZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSSxDQUFDQSxFQUFFLENBQUNDLEdBQUgsQ0FBT0MsUUFBWixFQUFzQjtFQUNsQkMsTUFBTSxDQUFDQyxFQUFQLEdBQVlELE1BQU0sQ0FBQ0MsRUFBUCxJQUFhQyxPQUFPLENBQUMsa0JBQUQsQ0FBaEM7RUFDQUYsTUFBTSxDQUFDRyxNQUFQLEdBQWdCRixFQUFFLENBQUMsMkJBQUQsQ0FBbEIsQ0FGa0IsQ0FFK0I7QUFDcEQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImlmICghY2Muc3lzLmlzTmF0aXZlKSB7XHJcbiAgICB3aW5kb3cuaW8gPSB3aW5kb3cuaW8gfHwgcmVxdWlyZShcInNvY2tldC5pby1jbGllbnRcIik7XHJcbiAgICB3aW5kb3cuc29ja2V0ID0gaW8oXCJodHRwOi8vNDMuMjAxLjc1LjE1ODozMDAwXCIpOyAvLyDshJzrsoQg7KO87IaM7JeQIOunnuqyjCDsiJjsoJVcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/LoginManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '724b4McXHlDyZSM2r3LX3+s', 'LoginManager');
// scripts/Controller/CommonUI/LoginManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("./GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LoginManager = /** @class */ (function (_super) {
    __extends(LoginManager, _super);
    function LoginManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.nicknameInput = null;
        _this.startButton = null;
        _this.dogPrefab = null;
        _this.rabbitPrefab = null;
        _this.tigerPrefab = null;
        _this.dogCharacter = null;
        _this.rabbitCharacter = null;
        _this.tigerCharacter = null;
        _this.dogSlot = null;
        _this.rabbitSlot = null;
        _this.tigerSlot = null;
        _this.currentSelectedContainer = null;
        _this.selectedCharacter = '';
        return _this;
    }
    LoginManager.prototype.onLoad = function () {
        this.startButton.interactable = false;
        this.tryAutoLogin();
        this.clearSlots();
        this.instantiateCharacter('dog');
        this.instantiateCharacter('rabbit');
        this.instantiateCharacter('tiger');
        // 모바일 & 데스크탑 모두 버튼 작동하도록 이벤트 등록
        this.registerButtonEvents(this.startButton.node, this.onClickStart.bind(this));
        // 마우스 커서 변경은 데스크탑에서만
        if (!cc.sys.isMobile) {
            this.startButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
                cc.game.canvas.style.cursor = "pointer";
            });
            this.startButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
                cc.game.canvas.style.cursor = "default";
            });
        }
    };
    LoginManager.prototype.registerButtonEvents = function (node, callback) {
        node.on(cc.Node.EventType.TOUCH_END, callback);
        node.on(cc.Node.EventType.MOUSE_DOWN, callback);
    };
    LoginManager.prototype.clearSlots = function () {
        this.dogSlot.removeAllChildren();
        this.rabbitSlot.removeAllChildren();
        this.tigerSlot.removeAllChildren();
    };
    LoginManager.prototype.instantiateCharacter = function (type) {
        var _this = this;
        var prefab;
        var slot;
        var container;
        switch (type) {
            case 'dog':
                prefab = this.dogPrefab;
                slot = this.dogSlot;
                container = this.dogCharacter;
                break;
            case 'rabbit':
                prefab = this.rabbitPrefab;
                slot = this.rabbitSlot;
                container = this.rabbitCharacter;
                break;
            case 'tiger':
                prefab = this.tigerPrefab;
                slot = this.tigerSlot;
                container = this.tigerCharacter;
                break;
        }
        if (prefab && slot && container) {
            var instance = cc.instantiate(prefab);
            slot.removeAllChildren();
            slot.addChild(instance);
            // 모바일 터치와 데스크탑 마우스 모두 대응
            container.on(cc.Node.EventType.MOUSE_DOWN, function () {
                _this.selectCharacter(type, container);
            });
            container.on(cc.Node.EventType.TOUCH_START, function () {
                _this.selectCharacter(type, container);
            });
            if (!cc.sys.isMobile) {
                container.on(cc.Node.EventType.MOUSE_ENTER, function () {
                    cc.game.canvas.style.cursor = "pointer";
                });
                container.on(cc.Node.EventType.MOUSE_LEAVE, function () {
                    cc.game.canvas.style.cursor = "default";
                });
            }
        }
    };
    LoginManager.prototype.selectCharacter = function (type, container) {
        this.selectedCharacter = type;
        if (this.currentSelectedContainer && this.currentSelectedContainer !== container) {
            this.setCharacterEffect(this.currentSelectedContainer, false);
        }
        this.setCharacterEffect(container, true);
        this.currentSelectedContainer = container;
        this.checkFormValid();
    };
    LoginManager.prototype.setCharacterEffect = function (node, selected) {
        node.setScale(selected ? 1.2 : 1);
        node.opacity = selected ? 255 : 200;
    };
    LoginManager.prototype.onSelectCharacter = function (_, character) {
        if (typeof character === 'string') {
            this.selectedCharacter = character;
            cc.log("캐릭터 선택됨:", character);
        }
        else {
            cc.warn("잘못된 캐릭터 선택값:", character);
            this.selectedCharacter = '';
        }
        this.checkFormValid();
    };
    LoginManager.prototype.onNicknameChanged = function () {
        cc.log("닉네임 입력 중:", this.nicknameInput.string);
        this.checkFormValid();
    };
    LoginManager.prototype.checkFormValid = function () {
        var isFilled = this.nicknameInput.string.trim() !== '' && this.selectedCharacter !== '';
        this.startButton.interactable = isFilled;
        cc.log("폼 유효성:", isFilled);
    };
    LoginManager.prototype.onClickStart = function () {
        return __awaiter(this, void 0, void 0, function () {
            var nickname, character, browserId, loginRes, loginData, jwtToken, profileRes, pendingRoomId, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        nickname = this.nicknameInput.string.trim();
                        character = this.selectedCharacter;
                        cc.log("Start 버튼 클릭됨 - 닉네임:", nickname, "캐릭터:", character);
                        if (!nickname || !character)
                            return [2 /*return*/];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        browserId = localStorage.getItem('browserId');
                        if (!browserId) {
                            browserId = this.generateBrowserId();
                            localStorage.setItem('browserId', browserId);
                        }
                        GameState_1.default.browserId = browserId;
                        return [4 /*yield*/, fetch('https://smartzoo.shop/auth/login', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ browserId: browserId })
                            })];
                    case 2:
                        loginRes = _a.sent();
                        if (!loginRes.ok)
                            return [2 /*return*/];
                        return [4 /*yield*/, loginRes.json()];
                    case 3:
                        loginData = _a.sent();
                        jwtToken = loginData.token;
                        localStorage.setItem('jwtToken', jwtToken);
                        return [4 /*yield*/, fetch('https://smartzoo.shop/auth/set-profile', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': "Bearer " + jwtToken
                                },
                                body: JSON.stringify({ nickname: nickname, character: character })
                            })];
                    case 4:
                        profileRes = _a.sent();
                        if (!profileRes.ok)
                            return [2 /*return*/];
                        GameState_1.default.nickname = nickname;
                        GameState_1.default.character = character;
                        cc.log("GameState 저장됨:", GameState_1.default.nickname, GameState_1.default.character);
                        pendingRoomId = localStorage.getItem("pendingRoomId");
                        if (pendingRoomId) {
                            cc.log("로그인 후 초대 방으로 이동:", pendingRoomId);
                            GameState_1.default.incomingRoomId = pendingRoomId;
                            GameState_1.default.isHost = false;
                            localStorage.removeItem("pendingRoomId");
                            cc.director.loadScene("PlayerConnect");
                        }
                        else {
                            cc.director.loadScene("MainScene");
                        }
                        return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        cc.error("에러 발생:", error_1);
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    LoginManager.prototype.generateBrowserId = function () {
        var array = new Uint8Array(16);
        window.crypto.getRandomValues(array);
        return Array.from(array).map(function (b) { return b.toString(16).padStart(2, '0'); }).join('');
    };
    LoginManager.prototype.tryAutoLogin = function () {
        return __awaiter(this, void 0, void 0, function () {
            var jwtToken, browserId, verify, verifyResult, res, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        jwtToken = localStorage.getItem('jwtToken');
                        browserId = localStorage.getItem('browserId');
                        if (!jwtToken || !browserId)
                            return [2 /*return*/];
                        GameState_1.default.browserId = browserId; // 자동 로그인에서도 할당
                        return [4 /*yield*/, fetch('https://smartzoo.shop/auth/verify-token', {
                                method: 'POST',
                                headers: { 'Authorization': "Bearer " + jwtToken }
                            })];
                    case 1:
                        verify = _a.sent();
                        return [4 /*yield*/, verify.json()];
                    case 2:
                        verifyResult = _a.sent();
                        if (!verify.ok || !verifyResult.success)
                            return [2 /*return*/];
                        return [4 /*yield*/, fetch('https://smartzoo.shop/auth/user-info', {
                                method: 'GET',
                                headers: { 'Authorization': "Bearer " + jwtToken }
                            })];
                    case 3:
                        res = _a.sent();
                        return [4 /*yield*/, res.json()];
                    case 4:
                        result = _a.sent();
                        if (result.success) {
                            GameState_1.default.nickname = result.nickname;
                            GameState_1.default.character = result.character;
                            GameState_1.default.recentSingleScores = result.recentSingleScores;
                            cc.log("자동 로그인 GameState 채움:", GameState_1.default);
                            cc.director.loadScene("MainScene");
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        property(cc.EditBox)
    ], LoginManager.prototype, "nicknameInput", void 0);
    __decorate([
        property(cc.Button)
    ], LoginManager.prototype, "startButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], LoginManager.prototype, "dogPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], LoginManager.prototype, "rabbitPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], LoginManager.prototype, "tigerPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "dogCharacter", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "rabbitCharacter", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "tigerCharacter", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "dogSlot", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "rabbitSlot", void 0);
    __decorate([
        property(cc.Node)
    ], LoginManager.prototype, "tigerSlot", void 0);
    LoginManager = __decorate([
        ccclass
    ], LoginManager);
    return LoginManager;
}(cc.Component));
exports.default = LoginManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/MoleGame/MoleGameScene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '91bdevLJ/ZGZJl7sY0rhKiI', 'MoleGameScene');
// scenes/Yu/MoleGame/MoleGameScene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameScene = /** @class */ (function (_super) {
    __extends(GameScene, _super);
    function GameScene() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.exitButton = null;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null; // 순한 두더지
        _this.hammerSprite = null;
        // @property(cc.Prefab) hitParticlePrefab: cc.Prefab = null; 
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        // 게임 종료 오버레이 
        _this.gameOverUIPrefab = null;
        // 게임 시작 오버레이
        _this.gameStartOverlayPrefab = null;
        _this.hammerNode = null;
        _this.moleHoles = [];
        _this.holeStates = [];
        _this.score = 0;
        _this.timer = 30;
        _this.timerNode = null;
        _this.timerLabel = null;
        _this.scoreNode = null;
        _this.scoreLabel = null;
        _this.isGameOver = false;
        _this.moleSpawnCallback = null;
        return _this;
    }
    GameScene.prototype.start = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        //  Game Start 오버레이 띄우기
        if (this.gameStartOverlayPrefab) {
            var startOverlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay);
            startOverlay.setPosition(0, 0);
            // 오버레이가 자동 제거되도록 설정돼 있으므로 약간 대기 후 게임 로직 실행
            this.scheduleOnce(function () {
                _this.startGameLogic();
            }, 1); // 총 애니메이션 길이에 따라 조정 
        }
        else {
            this.startGameLogic(); // 프리팹이 없을 경우 바로 시작
        }
    };
    GameScene.prototype.startGameLogic = function () {
        this.moleHoles = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.holeStates = new Array(this.moleHoles.length).fill(false);
        this.createHammer();
        this.score = 0;
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
        this.schedule(this.decreaseTimer, 1);
        this.spawnMoles();
    };
    GameScene.prototype.createHammer = function () {
        this.hammerNode = new cc.Node("Hammer");
        var sprite = this.hammerNode.addComponent(cc.Sprite);
        sprite.spriteFrame = this.hammerSprite;
        this.hammerNode.parent = this.node;
        this.hammerNode.zIndex = 999;
        this.hammerNode.setContentSize(200, 200);
        this.hammerNode.anchorX = 0.2;
        this.hammerNode.anchorY = 0.2;
        this.hammerNode.active = false;
    };
    GameScene.prototype.decreaseTimer = function () {
        if (this.isGameOver)
            return;
        this.timer--;
        this.updateTimerLabel();
        if (this.timer <= 0)
            this.gameOver();
    };
    GameScene.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    GameScene.prototype.updateTimerLabel = function () {
        this.timerLabel.string = "" + this.timer;
    };
    GameScene.prototype.spawnMoles = function () {
        var _this = this;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.moleSpawnCallback = function () {
            if (_this.isGameOver)
                return;
            var available = _this.holeStates
                .map(function (v, i) { return (!v ? i : -1); })
                .filter(function (i) { return i !== -1; });
            if (available.length === 0)
                return;
            var idx = available[Math.floor(Math.random() * available.length)];
            var hole = _this.moleHoles[idx];
            var isGoodMole = Math.random() < 0.3;
            var mole = cc.instantiate(isGoodMole ? _this.molePrefabGood : _this.molePrefab);
            mole.name = "Mole";
            hole.addChild(mole);
            mole.setPosition(0, -130);
            mole.active = true;
            _this.holeStates[idx] = true;
            var onHit = function (e) {
                e.stopPropagation();
                if (!mole.active || _this.isGameOver)
                    return;
                var worldPos = mole.convertToWorldSpaceAR(cc.v2(0, 0));
                var localPos = _this.node.convertToNodeSpaceAR(worldPos);
                _this.showHammerEffect(localPos);
                var sprite = mole.getComponent(cc.Sprite);
                if (sprite) {
                    sprite.spriteFrame = isGoodMole ? _this.goodMoleHitSprite : _this.moleHitSprite;
                }
                _this.score += isGoodMole ? -10 : 10;
                _this.updateScoreLabel();
                mole.off(cc.Node.EventType.TOUCH_END, onHit, _this);
                // 흔들리는 애니메이션
                cc.tween(mole)
                    .repeat(3, cc.tween()
                    .by(0.05, { angle: 15 })
                    .by(0.05, { angle: -30 })
                    .by(0.05, { angle: 15 }))
                    .delay(0.8) // 애니메이션 후 표정 유지 시간
                    .call(function () {
                    if (mole && mole.isValid) {
                        mole.destroy();
                        _this.holeStates[idx] = false;
                    }
                })
                    .start();
                // 파티클 효과 주석 처리
                // const hit = cc.instantiate(this.hitParticlePrefab);
                // hit.setPosition(mole.getPosition());
                // hole.addChild(hit);
            };
            mole.on(cc.Node.EventType.TOUCH_END, onHit, _this);
            cc.tween(mole)
                .to(0.2, { position: cc.v3(0, -20) }, { easing: 'sineOut' })
                .delay(1.0)
                .call(function () {
                if (mole.isValid) {
                    mole.off(cc.Node.EventType.TOUCH_END, onHit, _this);
                    mole.destroy();
                    _this.holeStates[idx] = false;
                }
            })
                .start();
        };
        this.schedule(this.moleSpawnCallback, 0.5, cc.macro.REPEAT_FOREVER);
    };
    GameScene.prototype.showHammerEffect = function (pos) {
        var _this = this;
        this.hammerNode.setPosition(pos);
        this.hammerNode.active = true;
        cc.tween(this.hammerNode)
            .set({ scale: 1.0 })
            .parallel(cc.tween().to(0.05, { scale: 1.2 }, { easing: 'cubicOut' }), cc.tween().by(0.05, { position: cc.v3(0, -30) }))
            .parallel(cc.tween().to(0.1, { scale: 1.0 }, { easing: 'bounceOut' }), cc.tween().by(0.1, { position: cc.v3(0, 30) }))
            .call(function () {
            _this.hammerNode.active = false;
        })
            .start();
    };
    GameScene.prototype.gameOver = function () {
        if (this.isGameOver)
            return;
        this.isGameOver = true;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.unscheduleAllCallbacks();
        this.timer = 0;
        this.updateTimerLabel();
        this.moleHoles.forEach(function (hole) {
            var mole = hole.getChildByName("Mole");
            if (mole)
                mole.active = false;
        });
        this.hammerNode.active = false;
        console.log("게임 종료!");
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "Molegame";
        // 게임종료 Prefab 생성
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI); // 또는 Canvas에 직접 붙여도 됨
        // 정중앙 배치
        gameOverUI.setPosition(0, 0);
    };
    GameScene.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        var canvas = document.getElementById('GameCanvas');
        if (canvas)
            canvas.style.cursor = 'default';
        cc.director.loadScene('SingleGameList');
    };
    __decorate([
        property(cc.Button)
    ], GameScene.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "hammerSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "gameStartOverlayPrefab", void 0);
    GameScene = __decorate([
        ccclass
    ], GameScene);
    return GameScene;
}(cc.Component));
exports.default = GameScene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/MultiReversecorrect/MultiOpponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0b9dc7VdBVPZ7loMPli6jdj', 'MultiOpponent');
// scripts/Song/MultiReversecorrect/MultiOpponent.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
function delay(ms) {
    return new Promise(function (resolve) { return setTimeout(resolve, ms); });
}
var MultiOpponent = /** @class */ (function (_super) {
    __extends(MultiOpponent, _super);
    function MultiOpponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.questionLabel = null;
        _this.scoreDisplayPrefab = null;
        _this.correctSign = null;
        _this.wrongSign = null;
        _this.reverseLabel = null;
        _this.verseLabel = null;
        _this.scoreLabel = null;
        _this.lastQuestionNumbers = [];
        return _this;
    }
    MultiOpponent.prototype.onLoad = function () {
        var _this = this;
        this.initScoreUI();
        window.socket.on("game-event", function (data) {
            if (!data || !data.type)
                return;
            switch (data.type) {
                case "spawn-question":
                    _this.showQuestion(data.payload.numbers, data.payload.direction);
                    break;
                case "answer-result":
                    _this.showResult(data.payload.input, data.payload.isCorrect);
                    break;
            }
        });
        cc.director.on("score-update", function (payload) {
            console.log("[MultiOpponent] score-update 수신:", payload);
            _this.updateScore(payload.score);
        });
    };
    MultiOpponent.prototype.initScoreUI = function () {
        var scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(scoreNode);
        this.scoreLabel = scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScore(0);
    };
    MultiOpponent.prototype.showQuestion = function (numbers, direction) {
        var _this = this;
        this.questionLabel.string = numbers.join("");
        this.questionLabel.node.active = true;
        // 방향 이미지 초기화
        this.reverseLabel.node.active = false;
        this.verseLabel.node.active = false;
        this.scheduleOnce(function () {
            _this.questionLabel.node.active = false;
            if (direction === "reverse") {
                _this.reverseLabel.node.active = true;
            }
            else {
                _this.verseLabel.node.active = true;
            }
        }, 1.5);
    };
    MultiOpponent.prototype.showResult = function (input, isCorrect) {
        return __awaiter(this, void 0, void 0, function () {
            var signNode;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        signNode = isCorrect ? this.correctSign : this.wrongSign;
                        this.questionLabel.node.active = false;
                        this.questionLabel.string = input.join(" ");
                        this.questionLabel.node.active = true;
                        signNode.active = true;
                        return [4 /*yield*/, delay(1500)];
                    case 1:
                        _a.sent();
                        signNode.active = false;
                        if (this.questionLabel.string === input.join(" ")) {
                            this.questionLabel.node.active = false;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    MultiOpponent.prototype.updateScore = function (score) {
        if (this.scoreLabel)
            this.scoreLabel.string = "" + score;
    };
    __decorate([
        property(cc.Label)
    ], MultiOpponent.prototype, "questionLabel", void 0);
    __decorate([
        property(cc.Prefab)
    ], MultiOpponent.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], MultiOpponent.prototype, "correctSign", void 0);
    __decorate([
        property(cc.Node)
    ], MultiOpponent.prototype, "wrongSign", void 0);
    __decorate([
        property(cc.Sprite)
    ], MultiOpponent.prototype, "reverseLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], MultiOpponent.prototype, "verseLabel", void 0);
    MultiOpponent = __decorate([
        ccclass
    ], MultiOpponent);
    return MultiOpponent;
}(cc.Component));
exports.default = MultiOpponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcTXVsdGlSZXZlcnNlY29ycmVjdFxcTXVsdGlPcHBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUU1QyxTQUFTLEtBQUssQ0FBQyxFQUFVO0lBQ3JCLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxVQUFVLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUF2QixDQUF1QixDQUFDLENBQUM7QUFDM0QsQ0FBQztBQUdEO0lBQTJDLGlDQUFZO0lBQXZEO1FBQUEscUVBZ0ZDO1FBL0V1QixtQkFBYSxHQUFhLElBQUksQ0FBQztRQUM5Qix3QkFBa0IsR0FBYyxJQUFJLENBQUM7UUFDdkMsaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFDNUIsZUFBUyxHQUFZLElBQUksQ0FBQztRQUN4QixrQkFBWSxHQUFjLElBQUksQ0FBQztRQUMvQixnQkFBVSxHQUFjLElBQUksQ0FBQztRQUcxQyxnQkFBVSxHQUFhLElBQUksQ0FBQztRQUM1Qix5QkFBbUIsR0FBYSxFQUFFLENBQUM7O0lBc0UvQyxDQUFDO0lBcEVHLDhCQUFNLEdBQU47UUFBQSxpQkFvQkM7UUFuQkcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRW5CLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLElBQUk7WUFDaEMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO2dCQUFFLE9BQU87WUFFaEMsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNmLEtBQUssZ0JBQWdCO29CQUNqQixLQUFJLENBQUMsWUFBWSxDQUFD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QUFFOzRCQUMvQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO3lCQUMxQzs7Ozs7S0FDSjtJQUVELG1DQUFXLEdBQVgsVUFBWSxLQUFhO1FBQ3JCLElBQUksSUFBSSxDQUFDLFVBQVU7WUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxLQUFHLEtBQU8sQ0FBQztJQUM3RCxDQUFDO0lBOUVtQjtRQUFuQixRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt3REFBZ0M7SUFDOUI7UUFBcEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkRBQXNDO0lBQ3ZDO1FBQWxCLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUE2QjtJQUM1QjtRQUFsQixRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztvREFBMkI7SUFDeEI7UUFBcEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7dURBQWdDO0lBQy9CO1FBQXBCLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3FEQUE4QjtJQU5qQyxhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBZ0ZqQztJQUFELG9CQUFDO0NBaEZELEFBZ0ZDLENBaEYwQyxFQUFFLENBQUMsU0FBUyxHQWdGdEQ7a0JBaEZvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuZnVuY3Rpb24gZGVsYXkobXM6IG51bWJlcikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbn1cblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE11bHRpT3Bwb25lbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIEBwcm9wZXJ0eShjYy5MYWJlbCkgcXVlc3Rpb25MYWJlbDogY2MuTGFiZWwgPSBudWxsO1xuICAgIEBwcm9wZXJ0eShjYy5QcmVmYWIpIHNjb3JlRGlzcGxheVByZWZhYjogY2MuUHJlZmFiID0gbnVsbDtcbiAgICBAcHJvcGVydHkoY2MuTm9kZSkgY29ycmVjdFNpZ246IGNjLk5vZGUgPSBudWxsO1xuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKSB3cm9uZ1NpZ246IGNjLk5vZGUgPSBudWxsO1xuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpIHJldmVyc2VMYWJlbDogY2MuU3ByaXRlID0gbnVsbDtcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKSB2ZXJzZUxhYmVsOiBjYy5TcHJpdGUgPSBudWxsO1xuXG5cbiAgICBwcml2YXRlIHNjb3JlTGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcbiAgICBwcml2YXRlIGxhc3RRdWVzdGlvbk51bWJlcnM6IG51bWJlcltdID0gW107XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIHRoaXMuaW5pdFNjb3JlVUkoKTtcblxuICAgICAgICB3aW5kb3cuc29ja2V0Lm9uKFwiZ2FtZS1ldmVudFwiLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhLnR5cGUpIHJldHVybjtcblxuICAgICAgICAgICAgc3dpdGNoIChkYXRhLnR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwic3Bhd24tcXVlc3Rpb25cIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93UXVlc3Rpb24oZGF0YS5wYXlsb2FkLm51bWJlcnMsIGRhdGEucGF5bG9hZC5kaXJlY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiYW5zd2VyLXJlc3VsdFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dSZXN1bHQoZGF0YS5wYXlsb2FkLmlucHV0LCBkYXRhLnBheWxvYWQuaXNDb3JyZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNjLmRpcmVjdG9yLm9uKFwic2NvcmUtdXBkYXRlXCIsIChwYXlsb2FkOiB7IHBsYXllcjogXCJob3N0XCIgfCBcImd1ZXN0XCI7IHNjb3JlOiBudW1iZXIgfSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbTXVsdGlPcHBvbmVudF0gc2NvcmUtdXBkYXRlIOyImOyLoDpcIiwgcGF5bG9hZCk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVNjb3JlKHBheWxvYWQuc2NvcmUpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpbml0U2NvcmVVSSgpIHtcbiAgICAgICAgY29uc3Qgc2NvcmVOb2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5zY29yZURpc3BsYXlQcmVmYWIpO1xuICAgICAgICB0aGlzLm5vZGUuYWRkQ2hpbGQoc2NvcmVOb2RlKTtcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gc2NvcmVOb2RlLmdldENoaWxkQnlOYW1lKFwiU2NvcmVMYWJlbFwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpO1xuICAgICAgICB0aGlzLnVwZGF0ZVNjb3JlKDApO1xuICAgIH1cblxuICAgIHNob3dRdWVzdGlvbihudW1iZXJzOiBudW1iZXJbXSwgZGlyZWN0aW9uOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5xdWVzdGlvbkxhYmVsLnN0cmluZyA9IG51bWJlcnMuam9pbihcIlwiKTtcbiAgICAgICAgdGhpcy5xdWVzdGlvbkxhYmVsLm5vZGUuYWN0aXZlID0gdHJ1ZTtcblxuICAgICAgICAvLyDrsKntlqUg7J2066+47KeAIOy0iOq4sO2ZlFxuICAgICAgICB0aGlzLnJldmVyc2VMYWJlbC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnZlcnNlTGFiZWwubm9kZS5hY3RpdmUgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnF1ZXN0aW9uTGFiZWwubm9kZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT09IFwicmV2ZXJzZVwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXZlcnNlTGFiZWwubm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy52ZXJzZUxhYmVsLm5vZGUuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgMS41KTtcbiAgICB9XG5cbiAgICBhc3luYyBzaG93UmVzdWx0KGlucHV0OiBudW1iZXJbXSwgaXNDb3JyZWN0OiBib29sZWFuKSB7XG4gICAgICAgIGNvbnN0IHNpZ25Ob2RlID0gaXNDb3JyZWN0ID8gdGhpcy5jb3JyZWN0U2lnbiA6IHRoaXMud3JvbmdTaWduO1xuICAgICAgICB0aGlzLnF1ZXN0aW9uTGFiZWwubm9kZS5hY3RpdmUgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLnF1ZXN0aW9uTGFiZWwuc3RyaW5nID0gaW5wdXQuam9pbihcIiBcIik7XG4gICAgICAgIHRoaXMucXVlc3Rpb25MYWJlbC5ub2RlLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIHNpZ25Ob2RlLmFjdGl2ZSA9IHRydWU7XG5cbiAgICAgICAgYXdhaXQgZGVsYXkoMTUwMCk7XG5cbiAgICAgICAgc2lnbk5vZGUuYWN0aXZlID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb25MYWJlbC5zdHJpbmcgPT09IGlucHV0LmpvaW4oXCIgXCIpKSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXN0aW9uTGFiZWwubm9kZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZVNjb3JlKHNjb3JlOiBudW1iZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuc2NvcmVMYWJlbCkgdGhpcy5zY29yZUxhYmVsLnN0cmluZyA9IGAke3Njb3JlfWA7XG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/MultiRememberGame/MultiGuestViewerRemember.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a1cb9kLTRJIoL95r2uVcYec', 'MultiGuestViewerRemember');
// scripts/Sim/MultiRememberGame/MultiGuestViewerRemember.ts

"use strict";
// File: MultiGuestViewerRemember.ts
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OpponentMemoryViewer = /** @class */ (function (_super) {
    __extends(OpponentMemoryViewer, _super);
    function OpponentMemoryViewer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 색상 버튼 노드 참조
        _this.redButton = null;
        _this.yellowButton = null;
        _this.greenButton = null;
        _this.blueButton = null;
        // 개구리 스프라이트(상대방 개구리 상태 표시용)
        _this.frogSprite = null;
        // 점수 표시용 프리팹
        _this.scoreDisplayPrefab = null;
        _this.buttonMap = {};
        _this.score = 0;
        _this.scoreLabel = null;
        return _this;
    }
    OpponentMemoryViewer.prototype.onLoad = function () {
        var _this = this;
        // 버튼 노드를 색상별로 맵에 저장
        this.buttonMap = {
            red: this.redButton.node,
            yellow: this.yellowButton.node,
            green: this.greenButton.node,
            blue: this.blueButton.node,
        };
        // 점수 초기화
        this.initScoreDisplay();
        // (1) 호스트가 generateColorSequence() 직후 emit한 “sequence-generated” 수신
        cc.director.on("sequence-generated", function (data) {
            _this.showBlinkSequence(data.sequence);
        });
        // (2) 호스트가 onColorButtonClick() 할 때마다 emit한 “user-input” 수신
        cc.director.on("user-input", function (data) {
            _this.showClickFeedback(data.color);
        });
        // (3) 호스트가 checkUserInput() 판정 후 emit한 “input-result” 수신
        cc.director.on("input-result", function (data) {
            _this.updateFrogState(data.correct ? "smile" : "cry");
        });
        // (4) 호스트가 score 변경 시 emit한 “score-update” 수신
        cc.director.on("score-update", function (data) {
            _this.setScore(data.score);
        });
    };
    // 점수 표시 초기화
    OpponentMemoryViewer.prototype.initScoreDisplay = function () {
        if (!this.scoreDisplayPrefab)
            return;
        var scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(scoreNode);
        this.scoreLabel = scoreNode
            .getChildByName("ScoreLabel")
            .getComponent(cc.Label);
        this.updateScoreLabel();
    };
    OpponentMemoryViewer.prototype.updateScoreLabel = function () {
        if (this.scoreLabel) {
            this.scoreLabel.string = "" + this.score;
        }
    };
    OpponentMemoryViewer.prototype.setScore = function (value) {
        this.score = value;
        this.updateScoreLabel();
    };
    /**
     * 시퀀스 배열을 받아 상대방 화면에 블록(버튼)이 깜빡이는 효과를 재생합니다.
     * → 모든 버튼을 우선 어두운 상태(opacity=100)로 세팅한 뒤,
     *    sequence 순서대로 blinkButton()을 실행하고,
     *    마지막에 모든 버튼을 밝은 상태(opacity=255)로 복귀합니다.
     */
    OpponentMemoryViewer.prototype.showBlinkSequence = function (sequence) {
        var _this = this;
        // 1) 깜빡임을 시작하기 전에 모든 버튼을 어두운 상태로 설정
        Object.values(this.buttonMap).forEach(function (btnNode) {
            btnNode.opacity = 100;
        });
        // 2) 각 컬러별로 순차적으로 깜빡임 실행
        var delay = 0;
        sequence.forEach(function (color) {
            var btnNode = _this.buttonMap[color];
            if (!btnNode)
                return;
            _this.scheduleOnce(function () {
                _this.blinkButton(btnNode);
            }, delay);
            delay += 1.0; // 1초 간격
        });
        // 3) 전체 깜빡임이 끝난 뒤, 모든 버튼을 밝은 상태(255)로 복귀
        this.scheduleOnce(function () {
            Object.values(_this.buttonMap).forEach(function (btnNode) {
                btnNode.opacity = 255;
            });
        }, delay);
    };
    /**
     * 특정 버튼 노드를 깜빡이게 하는 Tween
     * → “어두운(100) → 밝은(255) → 어두운(100)” 순으로 바뀝니다.
     */
    OpponentMemoryViewer.prototype.blinkButton = function (buttonNode) {
        var originalScale = buttonNode.scale;
        var darkOpacity = 100;
        // 항상 “어두운(darkOpacity)” 상태에서 출발하도록 세팅
        buttonNode.opacity = darkOpacity;
        cc.tween(buttonNode)
            .to(0.15, { scale: originalScale * 1.05, opacity: 255 }, { easing: "quadOut" })
            .to(0.15, { scale: originalScale, opacity: darkOpacity }, { easing: "quadIn" })
            .start();
    };
    // 상대가 클릭한 컬러 버튼에 대한 피드백(잠깐 밝게 → 다시 어둡게)
    OpponentMemoryViewer.prototype.showClickFeedback = function (color) {
        var btnNode = this.buttonMap[color];
        if (!btnNode)
            return;
        var originalScale = btnNode.scale;
        var originalOpacity = btnNode.opacity || 100;
        // 1) 밝게(180) → 2) 원래 어두운 값(originalOpacity)
        cc.tween(btnNode)
            .to(0.1, { scale: originalScale * 0.9, opacity: 180 }, { easing: "quadIn" })
            .to(0.1, { scale: originalScale, opacity: originalOpacity }, { easing: "quadOut" })
            .start();
    };
    // 개구리 상태를 “neutral” | “smile” | “cry”로 변경
    OpponentMemoryViewer.prototype.updateFrogState = function (state) {
        var _this = this;
        var spriteMap = {
            neutral: "무표정개굴",
            smile: "웃는개굴",
            cry: "우는개굴",
        };
        var sizeMap = {
            neutral: { width: 200, height: 200 },
            smile: { width: 200, height: 250 },
            cry: { width: 300, height: 300 },
        };
        var spriteName = spriteMap[state];
        var size = sizeMap[state];
        cc.resources.load("Images/Sim/" + spriteName, cc.SpriteFrame, function (err, spriteFrame) {
            if (err) {
                console.error("\uAC1C\uAD6C\uB9AC \uC774\uBBF8\uC9C0 \uB85C\uB4DC \uC2E4\uD328: " + spriteName, err);
                return;
            }
            _this.frogSprite.spriteFrame = spriteFrame;
            _this.frogSprite.type = cc.Sprite.Type.SIMPLE;
            _this.frogSprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
            _this.frogSprite.node.setContentSize(size.width, size.height);
        });
    };
    __decorate([
        property(cc.Button)
    ], OpponentMemoryViewer.prototype, "redButton", void 0);
    __decorate([
        property(cc.Button)
    ], OpponentMemoryViewer.prototype, "yellowButton", void 0);
    __decorate([
        property(cc.Button)
    ], OpponentMemoryViewer.prototype, "greenButton", void 0);
    __decorate([
        property(cc.Button)
    ], OpponentMemoryViewer.prototype, "blueButton", void 0);
    __decorate([
        property(cc.Sprite)
    ], OpponentMemoryViewer.prototype, "frogSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMemoryViewer.prototype, "scoreDisplayPrefab", void 0);
    OpponentMemoryViewer = __decorate([
        ccclass
    ], OpponentMemoryViewer);
    return OpponentMemoryViewer;
}(cc.Component));
exports.default = OpponentMemoryViewer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/MoleGame/MoleGameScene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2c8408Q30pPepr7+BQhQYq9', 'MoleGameScene');
// scripts/Yu/MoleGame/MoleGameScene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameScene = /** @class */ (function (_super) {
    __extends(GameScene, _super);
    function GameScene() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.exitButton = null;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null; // 순한 두더지
        _this.hammerSprite = null;
        // @property(cc.Prefab) hitParticlePrefab: cc.Prefab = null; 
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        // 게임 종료 오버레이 
        _this.gameOverUIPrefab = null;
        // 게임 시작 오버레이
        _this.gameStartOverlayPrefab = null;
        _this.hammerNode = null;
        _this.moleHoles = [];
        _this.holeStates = [];
        _this.score = 0;
        _this.timer = 30;
        _this.timerNode = null;
        _this.timerLabel = null;
        _this.scoreNode = null;
        _this.scoreLabel = null;
        _this.isGameOver = false;
        _this.moleSpawnCallback = null;
        return _this;
    }
    GameScene.prototype.start = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        //  Game Start 오버레이 띄우기
        if (this.gameStartOverlayPrefab) {
            var startOverlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay);
            startOverlay.setPosition(0, 0);
            // 오버레이가 자동 제거되도록 설정돼 있으므로 약간 대기 후 게임 로직 실행
            this.scheduleOnce(function () {
                _this.startGameLogic();
            }, 1); // 총 애니메이션 길이에 따라 조정 
        }
        else {
            this.startGameLogic(); // 프리팹이 없을 경우 바로 시작
        }
    };
    GameScene.prototype.startGameLogic = function () {
        this.moleHoles = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.holeStates = new Array(this.moleHoles.length).fill(false);
        this.createHammer();
        this.score = 0;
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
        this.schedule(this.decreaseTimer, 1);
        this.spawnMoles();
    };
    GameScene.prototype.createHammer = function () {
        this.hammerNode = new cc.Node("Hammer");
        var sprite = this.hammerNode.addComponent(cc.Sprite);
        sprite.spriteFrame = this.hammerSprite;
        this.hammerNode.parent = this.node;
        this.hammerNode.zIndex = 999;
        this.hammerNode.setContentSize(200, 200);
        this.hammerNode.anchorX = 0.2;
        this.hammerNode.anchorY = 0.2;
        this.hammerNode.active = false;
    };
    GameScene.prototype.decreaseTimer = function () {
        if (this.isGameOver)
            return;
        this.timer--;
        this.updateTimerLabel();
        if (this.timer <= 0)
            this.gameOver();
    };
    GameScene.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    GameScene.prototype.updateTimerLabel = function () {
        this.timerLabel.string = "" + this.timer;
    };
    GameScene.prototype.spawnMoles = function () {
        var _this = this;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.moleSpawnCallback = function () {
            if (_this.isGameOver)
                return;
            var available = _this.holeStates
                .map(function (v, i) { return (!v ? i : -1); })
                .filter(function (i) { return i !== -1; });
            if (available.length === 0)
                return;
            var idx = available[Math.floor(Math.random() * available.length)];
            var hole = _this.moleHoles[idx];
            var isGoodMole = Math.random() < 0.3;
            var mole = cc.instantiate(isGoodMole ? _this.molePrefabGood : _this.molePrefab);
            mole.name = "Mole";
            hole.addChild(mole);
            mole.setPosition(0, -130);
            mole.active = true;
            _this.holeStates[idx] = true;
            var onHit = function (e) {
                e.stopPropagation();
                if (!mole.active || _this.isGameOver)
                    return;
                var worldPos = mole.convertToWorldSpaceAR(cc.v2(0, 0));
                var localPos = _this.node.convertToNodeSpaceAR(worldPos);
                _this.showHammerEffect(localPos);
                var sprite = mole.getComponent(cc.Sprite);
                if (sprite) {
                    sprite.spriteFrame = isGoodMole ? _this.goodMoleHitSprite : _this.moleHitSprite;
                }
                _this.score += isGoodMole ? -10 : 10;
                _this.updateScoreLabel();
                mole.off(cc.Node.EventType.TOUCH_END, onHit, _this);
                // 흔들리는 애니메이션
                cc.tween(mole)
                    .repeat(3, cc.tween()
                    .by(0.05, { angle: 15 })
                    .by(0.05, { angle: -30 })
                    .by(0.05, { angle: 15 }))
                    .delay(0.8) // 애니메이션 후 표정 유지 시간
                    .call(function () {
                    if (mole && mole.isValid) {
                        mole.destroy();
                        _this.holeStates[idx] = false;
                    }
                })
                    .start();
                // 파티클 효과 주석 처리
                // const hit = cc.instantiate(this.hitParticlePrefab);
                // hit.setPosition(mole.getPosition());
                // hole.addChild(hit);
            };
            mole.on(cc.Node.EventType.TOUCH_END, onHit, _this);
            cc.tween(mole)
                .to(0.2, { position: cc.v3(0, -20) }, { easing: 'sineOut' })
                .delay(1.0)
                .call(function () {
                if (mole.isValid) {
                    mole.off(cc.Node.EventType.TOUCH_END, onHit, _this);
                    mole.destroy();
                    _this.holeStates[idx] = false;
                }
            })
                .start();
        };
        this.schedule(this.moleSpawnCallback, 0.5, cc.macro.REPEAT_FOREVER);
    };
    GameScene.prototype.showHammerEffect = function (pos) {
        var _this = this;
        this.hammerNode.setPosition(pos);
        this.hammerNode.active = true;
        cc.tween(this.hammerNode)
            .set({ scale: 1.0 })
            .parallel(cc.tween().to(0.05, { scale: 1.2 }, { easing: 'cubicOut' }), cc.tween().by(0.05, { position: cc.v3(0, -30) }))
            .parallel(cc.tween().to(0.1, { scale: 1.0 }, { easing: 'bounceOut' }), cc.tween().by(0.1, { position: cc.v3(0, 30) }))
            .call(function () {
            _this.hammerNode.active = false;
        })
            .start();
    };
    GameScene.prototype.gameOver = function () {
        if (this.isGameOver)
            return;
        this.isGameOver = true;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.unscheduleAllCallbacks();
        this.timer = 0;
        this.updateTimerLabel();
        this.moleHoles.forEach(function (hole) {
            var mole = hole.getChildByName("Mole");
            if (mole)
                mole.active = false;
        });
        this.hammerNode.active = false;
        console.log("게임 종료!");
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "Molegame";
        // 게임종료 Prefab 생성
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI); // 또는 Canvas에 직접 붙여도 됨
        // 정중앙 배치
        gameOverUI.setPosition(0, 0);
    };
    GameScene.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        var canvas = document.getElementById('GameCanvas');
        if (canvas)
            canvas.style.cursor = 'default';
        cc.director.loadScene('SingleGameList');
    };
    __decorate([
        property(cc.Button)
    ], GameScene.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], GameScene.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "hammerSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameScene.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameScene.prototype, "gameStartOverlayPrefab", void 0);
    GameScene = __decorate([
        ccclass
    ], GameScene);
    return GameScene;
}(cc.Component));
exports.default = GameScene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeGenerator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4b4b9YKGjZKlYxCj4Psn5/9', 'MazeGenerator');
// scripts/Jang/MazeGenerator.ts

"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var MazeGenerator = /** @class */ (function () {
    function MazeGenerator(rows, cols) {
        this.rows = 21;
        this.cols = 21;
        // rows, cols 무시: 항상 21x21
    }
    MazeGenerator.prototype.generateMaze = function (level) {
        var maze;
        if (level <= 4) {
            maze = this._dfs();
        }
        else if (level <= 10) {
            maze = this._huntAndKill();
        }
        else {
            maze = this._wilson();
        }
        maze = this._addLoops(maze, level);
        maze = this._ensureMinPath(maze, level);
        return maze;
    };
    MazeGenerator.prototype._dfs = function () {
        var _this = this;
        var maze = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(1); });
        var stack = [{ x: 1, y: 1 }];
        maze[1][1] = 0;
        while (stack.length) {
            var cur = stack[stack.length - 1];
            var neighs = this._cellNeighbors(cur.x, cur.y, maze);
            if (!neighs.length) {
                stack.pop();
                continue;
            }
            var next = neighs[Math.floor(Math.random() * neighs.length)];
            var mx = (cur.x + next.x) >> 1, my = (cur.y + next.y) >> 1;
            maze[my][mx] = maze[next.y][next.x] = 0;
            stack.push(next);
        }
        return maze;
    };
    MazeGenerator.prototype._huntAndKill = function () {
        var _this = this;
        var maze = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(1); });
        var visited = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(false); });
        var current = { x: 1, y: 1 };
        visited[1][1] = true;
        maze[1][1] = 0;
        var dirs = [
            { dx: 0, dy: 2 },
            { dx: 2, dy: 0 },
            { dx: 0, dy: -2 },
            { dx: -2, dy: 0 },
        ];
        while (true) {
            var unvis = dirs
                .map(function (d) { return ({ x: current.x + d.dx, y: current.y + d.dy, d: d }); })
                .filter(function (p) {
                return p.x > 0 && p.x < _this.cols - 1 &&
                    p.y > 0 && p.y < _this.rows - 1 &&
                    !visited[p.y][p.x];
            });
            if (unvis.length > 0) {
                var pick = unvis[Math.floor(Math.random() * unvis.length)];
                var mx = current.x + pick.d.dx / 2;
                var my = current.y + pick.d.dy / 2;
                maze[my][mx] = 0;
                maze[pick.y][pick.x] = 0;
                visited[pick.y][pick.x] = true;
                current = { x: pick.x, y: pick.y };
                continue;
            }
            var found = false;
            var _loop_1 = function (y) {
                var _loop_2 = function (x) {
                    if (!visited[y][x]) {
                        var adj = dirs
                            .map(function (d) { return ({ x: x + d.dx, y: y + d.dy, d: d }); })
                            .filter(function (p) {
                            return p.x > 0 && p.x < _this.cols - 1 &&
                                p.y > 0 && p.y < _this.rows - 1 &&
                                visited[p.y][p.x];
                        });
                        if (adj.length > 0) {
                            var pick = adj[Math.floor(Math.random() * adj.length)];
                            var mx = x + pick.d.dx / 2;
                            var my = y + pick.d.dy / 2;
                            maze[my][mx] = 0;
                            maze[y][x] = 0;
                            visited[y][x] = true;
                            current = { x: x, y: y };
                            found = true;
                            return "break";
                        }
                    }
                };
                for (var x = 1; x < this_1.cols; x += 2) {
                    var state_2 = _loop_2(x);
                    if (state_2 === "break")
                        break;
                }
                if (found)
                    return "break";
            };
            var this_1 = this;
            for (var y = 1; y < this.rows; y += 2) {
                var state_1 = _loop_1(y);
                if (state_1 === "break")
                    break;
            }
            if (!found)
                break;
        }
        return maze;
    };
    MazeGenerator.prototype._wilson = function () {
        var _this = this;
        var maze = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(1); });
        // 항상 홀수 좌표(통로 후보)만 사용한다고 가정
        // 1. 시작점 하나 랜덤 선택 → 방문 처리
        var visited = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(false); });
        var unvisited = [];
        for (var y = 1; y < this.rows; y += 2) {
            for (var x = 1; x < this.cols; x += 2) {
                unvisited.push([x, y]);
            }
        }
        // 임의 시작점 방문
        var _a = unvisited.splice(Math.floor(Math.random() * unvisited.length), 1)[0], startX = _a[0], startY = _a[1];
        maze[startY][startX] = 0;
        visited[startY][startX] = true;
        while (unvisited.length > 0) {
            // 2. 랜덤 미방문 셀에서 출발, loop-erased random walk!
            var _b = unvisited[Math.floor(Math.random() * unvisited.length)], cx = _b[0], cy = _b[1];
            var path = [[cx, cy]];
            var pathSet = new Set([cx + "," + cy]);
            // 방향: 상하좌우 2칸씩
            var dirs = [
                [0, 2], [2, 0], [0, -2], [-2, 0]
            ];
            var _loop_3 = function () {
                var moves = [];
                for (var _i = 0, dirs_1 = dirs; _i < dirs_1.length; _i++) {
                    var _a = dirs_1[_i], dx = _a[0], dy = _a[1];
                    var nx_1 = cx + dx, ny_1 = cy + dy;
                    if (nx_1 > 0 && nx_1 < this_2.cols - 1 && ny_1 > 0 && ny_1 < this_2.rows - 1)
                        moves.push([nx_1, ny_1]);
                }
                var _b = moves[Math.floor(Math.random() * moves.length)], nx = _b[0], ny = _b[1];
                // loop-erased: 이미 경로에 있으면 그 이후 다 삭제
                var existIdx = path.findIndex(function (_a) {
                    var px = _a[0], py = _a[1];
                    return px === nx && py === ny;
                });
                if (existIdx !== -1) {
                    path = path.slice(0, existIdx + 1);
                }
                else {
                    path.push([nx, ny]);
                }
                cx = nx;
                cy = ny;
            };
            var this_2 = this;
            // 방문 지점까지 랜덤 워크
            while (!visited[cy][cx]) {
                _loop_3();
            }
            // 3. 경로 통로화
            for (var i = 0; i < path.length; i++) {
                var _c = path[i], px = _c[0], py = _c[1];
                maze[py][px] = 0;
                visited[py][px] = true;
                // 중간 벽도 뚫기
                if (i > 0) {
                    var _d = path[i - 1], px0 = _d[0], py0 = _d[1];
                    maze[(py + py0) >> 1][(px + px0) >> 1] = 0;
                    visited[(py + py0) >> 1][(px + px0) >> 1] = true;
                }
            }
            // 방문 리스트에서 다 제거
            unvisited = unvisited.filter(function (_a) {
                var ux = _a[0], uy = _a[1];
                return !visited[uy][ux];
            });
        }
        return maze;
    };
    MazeGenerator.prototype._cellNeighbors = function (x, y, maze) {
        var dirs = [[0, 2], [2, 0], [0, -2], [-2, 0]];
        var out = [];
        for (var _i = 0, dirs_2 = dirs; _i < dirs_2.length; _i++) {
            var _a = dirs_2[_i], dx = _a[0], dy = _a[1];
            var nx = x + dx, ny = y + dy;
            if (nx > 0 && nx < this.cols - 1 &&
                ny > 0 && ny < this.rows - 1 &&
                maze[ny][nx] === 1) {
                out.push({ x: nx, y: ny });
            }
        }
        return out;
    };
    // 루프(사이클) 추가
    // 루프(사이클) 추가
    MazeGenerator.prototype._addLoops = function (maze, level) {
        // 1) 기준 레벨과 최대 레벨을 정의
        var baseLevel = 1;
        var maxLevel = 22;
        // 2) 확률의 최소값(레벨 1)과 최대값(레벨 22)
        var minProb = 0.03;
        var maxProb = 0.20;
        // 3) 레벨당 증가폭 계산 (레벨 1→레벨 22 사이를 선형 보간)
        //    (maxProb - minProb) / (maxLevel - baseLevel)
        var delta = (maxProb - minProb) / (maxLevel - baseLevel);
        // 4) 현재 레벨에 대응하는 확률 계산
        //    level이 1일 때 minProb, level이 22일 때 maxProb, 그 이상은 maxProb
        var prob = Math.min(minProb + delta * (level - baseLevel), maxProb);
        for (var y = 1; y < this.rows - 1; y++) {
            for (var x = 1; x < this.cols - 1; x++) {
                if (maze[y][x] === 1 &&
                    Math.random() < prob &&
                    this._cellNeighbors(x, y, maze).length === 1) {
                    maze[y][x] = 0;
                }
            }
        }
        return maze;
    };
    MazeGenerator.prototype._ensureMinPath = function (maze, level) {
        var MAX_ENFORCE_LEVEL = 22; // “최단경로 보장을 계산할 최대 레벨”
        var effectiveLevel = Math.min(level, MAX_ENFORCE_LEVEL);
        // rows, cols는 클래스 필드(21×21 기준)
        var rows = this.rows;
        var cols = this.cols;
        // 레벨 1~22에 대응하는 minLen을 계산.
        // 예: (21+21) * (1 + 0.08 * effectiveLevel)
        var baseLen = rows + cols; // 42
        var minLen = Math.floor(baseLen * (1 + 0.08 * effectiveLevel));
        // 반복 재생성 최대 횟수는 레벨이 높아도 동일하게 5회 유지
        var maxAttempts = 5;
        var attempts = 0;
        while (++attempts < maxAttempts) {
            // 현재 미로의 최단경로가 기준 길이(minLen) 이상이면 탈출
            if (this._calcShortestPath(maze) >= minLen) {
                break;
            }
            // 조건 미달 시, 재생성: DFS / Hunt-and-Kill / Wilson 중 하나 다시 호출
            if (level <= 4) {
                maze.splice.apply(maze, __spreadArrays([0, maze.length], this._dfs()));
            }
            else if (level <= 10) {
                maze.splice.apply(maze, __spreadArrays([0, maze.length], this._huntAndKill()));
            }
            else {
                maze.splice.apply(maze, __spreadArrays([0, maze.length], this._wilson()));
            }
            // 다시 루프(순환 구조) 추가
            this._addLoops(maze, level);
        }
        return maze;
    };
    // (1,1)~(19,19) 최단거리 BFS
    MazeGenerator.prototype._calcShortestPath = function (maze) {
        var _this = this;
        var visited = Array(this.rows).fill(0).map(function () { return Array(_this.cols).fill(false); });
        var q = [{ x: 1, y: 1, d: 0 }];
        visited[1][1] = true;
        while (q.length) {
            var _a = q.shift(), x = _a.x, y = _a.y, d = _a.d;
            if (x === this.cols - 2 && y === this.rows - 2)
                return d;
            for (var _i = 0, _b = this._cellNeighbors(x, y, maze); _i < _b.length; _i++) {
                var o = _b[_i];
                if (!visited[o.y][o.x] && maze[o.y][o.x] === 0) {
                    visited[o.y][o.x] = true;
                    q.push({ x: o.x, y: o.y, d: d + 1 });
                }
            }
        }
        return 0;
    };
    return MazeGenerator;
}());
exports.default = MazeGenerator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Multi/MultiGameList.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ef542TYLFJBrbpjDKj7XKqL', 'MultiGameList');
// scripts/Controller/Multi/MultiGameList.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiGameListController = /** @class */ (function (_super) {
    __extends(MultiGameListController, _super);
    function MultiGameListController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameCardContainer = null;
        _this.gameCardPrefab = null;
        _this.selectButton = null;
        _this.leftArrow = null;
        _this.rightArrow = null;
        _this.BackButton = null;
        _this.currentIndex = 0;
        _this.cards = [];
        _this.selectedScene = null;
        _this._gameEventHandler = null; // 리스너 참조 변수 선언
        _this.pollingTimer = null;
        _this.gameList = [
            { title: '두더지 게임', thumbnail: 'mole_thumb', scene: 'MultiMoleGameScene',
                desc: '나쁜 두더지를 최대한 많이 잡으세요!\n 착한 두더지를 잡으면 점수가 떨어지니 조심하세요!' },
            // { title: '블록 개수 세기', thumbnail: 'block_thumb', scene: 'MultiBlockCountGameScene'
            //     , desc: '떨어지는 블록의 개수를 맞추세요!\n 오답을 고르면 점수가 떨어지니\n 조심하세요!'  },
            { title: '기억력 게임', thumbnail: 'remember_thumb', scene: 'MultiRememberGameScene',
                desc: '깜빡이는 잎의 순서를 잘 기억해서\n  그대로 눌러보세요!\n 하지만 방심하면 반전에 놀랄지도 몰라요!' },
            { title: '숫자 뒤집어 맞추기', thumbnail: 'reverse_thumb', scene: 'Reversecorrect_Multiscene',
                desc: '잠깐 공개된 숫자를 기억하고 맞혀보세요!\n가끔씩은 역방향으로 맞춰보세요! ' },
            // { title: '집중력 게임', thumbnail: 'concetration_thumb', scene: 'Rottenacorn_Multiscene' 
            //     , desc: '잠깐 내부가 보였다 사라지는 도토리들! \n 벌레 먹은 도토리를 기억하고,\n정확히 골라내세요.' },
            { title: '미로 게임', thumbnail: 'maze_thumb', scene: 'Maze_MultiScene',
                desc: '미로를 뚫고 동물들이 음식을 찾는 걸 \n 도와주세요!  기회는 단 한번 뿐이에요!' },
        ];
        return _this;
    }
    MultiGameListController.prototype.onLoad = function () {
        var _this = this;
        cc.debug.setDisplayStats(false);
        this.selectButton.interactable = false;
        cc.log("MultiGameListController onLoad 실행됨");
        cc.log("GameState.isHost =", GameState_1.default.isHost);
        this.loadGameCards();
        this.registerArrowEvents(this.leftArrow, this.showPrevCard.bind(this));
        this.registerArrowEvents(this.rightArrow, this.showNextCard.bind(this));
        this.registerButtonEvents(this.selectButton.node, this.onSelectButtonClick.bind(this));
        this.registerButtonEvents(this.BackButton.node, this.onClickMain.bind(this));
        // 게스트는 UI 제어 비활성화
        if (!GameState_1.default.isHost) {
            this.selectButton.node.active = false;
        }
        if (!cc.sys.isNative && window.socket) {
            var roomId_1 = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
            if (!window.socket.connected) {
                console.warn("소켓이 끊겨 있음. 재연결 시도 중");
                window.socket.connect();
            }
            if (roomId_1) {
                cc.log("join-room 재요청:", roomId_1);
                window.socket.emit("join-room", roomId_1);
            }
            // 기존 리스너를 오프할 때 핸들러 참조로 해제
            this._gameEventHandler = function (message) {
                var _a;
                cc.log("game-event 수신:", message);
                switch (message === null || message === void 0 ? void 0 : message.type) {
                    case "move-scene":
                        var sceneName = (_a = message.payload) === null || _a === void 0 ? void 0 : _a.sceneName;
                        if (sceneName) {
                            cc.log("씬 이동 시도:", sceneName);
                            cc.director.loadScene(sceneName);
                        }
                        else {
                            cc.warn("sceneName 누락됨:", message);
                        }
                        break;
                    case "host-left":
                        cc.warn("호스트가 방을 나갔습니다. 메인 화면으로 이동합니다.");
                        // pollingTimer 해제 (있을 때만)
                        if (_this.pollingTimer) {
                            clearInterval(_this.pollingTimer);
                            _this.pollingTimer = null;
                        }
                        GameState_1.default.resetMultiplay();
                        cc.sys.localStorage.removeItem("isHost");
                        cc.director.loadScene("MainScene");
                        break;
                    default:
                        cc.warn("알 수 없는 game-event 타입 또는 잘못된 구조:", message);
                }
            };
            window.socket.on("game-event", this._gameEventHandler);
            // MultiConnect -> MultiGameList로 이동 후 소켓연결이 끊겼으므로 재연결 해줘야 함
            window.socket.on("connect", function () {
                cc.log("소켓 재연결됨. join-room 재전송");
                if (roomId_1) {
                    window.socket.emit("join-room", roomId_1);
                }
            });
        }
    };
    MultiGameListController.prototype.onDestroy = function () {
        if (this.pollingTimer) {
            clearInterval(this.pollingTimer);
            this.pollingTimer = null;
        }
        if (!cc.sys.isNative && window.socket && this._gameEventHandler) {
            window.socket.off("game-event", this._gameEventHandler);
        }
    };
    MultiGameListController.prototype.registerButtonEvents = function (node, callback) {
        node.off(cc.Node.EventType.TOUCH_END);
        node.on(cc.Node.EventType.TOUCH_END, callback);
    };
    MultiGameListController.prototype.registerArrowEvents = function (node, callback) {
        node.off(cc.Node.EventType.TOUCH_END);
        node.on(cc.Node.EventType.TOUCH_END, callback);
    };
    MultiGameListController.prototype.loadGameCards = function () {
        var _this = this;
        this.gameList.forEach(function (game, index) {
            var _a;
            cc.log("카드 생성:", index, game.title);
            var card = cc.instantiate(_this.gameCardPrefab);
            var titleNode = (_a = card.getChildByName("GameTitleBox")) === null || _a === void 0 ? void 0 : _a.getChildByName("GameTitle");
            if (titleNode && titleNode.getComponent(cc.Label)) {
                titleNode.getComponent(cc.Label).string = game.title;
            }
            var descNode = card.getChildByName("GameDesc");
            if (descNode && descNode.getComponent(cc.Label)) {
                descNode.getComponent(cc.Label).string = game.desc;
            }
            var thumbnailNode = card.getChildByName("GameThumbnail");
            if (thumbnailNode && thumbnailNode.getComponent(cc.Sprite)) {
                cc.resources.load("Images/Common/thumbnails/" + game.thumbnail, cc.SpriteFrame, function (err, spriteFrame) {
                    if (!err && spriteFrame) {
                        thumbnailNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;
                    }
                });
            }
            card.active = false;
            _this.cards.push(card);
            _this.gameCardContainer.addChild(card);
        });
        this.showCardAtIndex(0);
    };
    MultiGameListController.prototype.showCardAtIndex = function (index) {
        cc.log("showCardAtIndex \uD638\uCD9C: index = " + index + ", cards.length = " + this.cards.length);
        this.cards.forEach(function (card, i) {
            card.active = i === index;
        });
        this.currentIndex = index;
        this.selectScene(this.gameList[index].scene, this.cards[index]);
    };
    MultiGameListController.prototype.showNextCard = function () {
        var nextIndex = (this.currentIndex + 1) % this.cards.length;
        this.showCardAtIndex(nextIndex);
    };
    MultiGameListController.prototype.showPrevCard = function () {
        var prevIndex = (this.currentIndex - 1 + this.cards.length) % this.cards.length;
        this.showCardAtIndex(prevIndex);
    };
    MultiGameListController.prototype.selectScene = function (sceneName, selectedCard) {
        this.selectedScene = sceneName;
        this.gameCardContainer.children.forEach(function (card) {
            card.scale = card === selectedCard ? 1.1 : 1;
            card.opacity = card === selectedCard ? 255 : 180;
        });
        this.selectButton.interactable = true;
    };
    MultiGameListController.prototype.onSelectButtonClick = function () {
        if (!this.selectedScene)
            return;
        var roomId = GameState_1.default.createdRoomId;
        console.log("[onSelectButtonClick] move-scene emit 시도:", this.selectedScene, GameState_1.default.isHost, roomId);
        if (GameState_1.default.isHost && roomId && window.socket) {
            window.socket.emit("game-event", {
                type: "move-scene",
                payload: { sceneName: this.selectedScene },
                roomId: roomId,
            });
        }
        console.log("window.socket 상태:", window.socket && window.socket.connected);
    };
    MultiGameListController.prototype.onClickMain = function () {
        // pollingTimer 해제 (있을 때만)
        if (this.pollingTimer) {
            clearInterval(this.pollingTimer);
            this.pollingTimer = null;
        }
        // 1. roomId, playerId는 emit 전에 읽어둬야 함
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        var playerId = GameState_1.default.browserId;
        cc.log("[leave-room emit]", { roomId: roomId, playerId: playerId });
        if (window.socket && roomId && playerId) {
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        // 2. 상태/스토리지 초기화
        GameState_1.default.resetMultiplay();
        cc.sys.localStorage.removeItem("isHost");
        // 3. 씬 이동
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], MultiGameListController.prototype, "gameCardContainer", void 0);
    __decorate([
        property(cc.Prefab)
    ], MultiGameListController.prototype, "gameCardPrefab", void 0);
    __decorate([
        property(cc.Button)
    ], MultiGameListController.prototype, "selectButton", void 0);
    __decorate([
        property(cc.Node)
    ], MultiGameListController.prototype, "leftArrow", void 0);
    __decorate([
        property(cc.Node)
    ], MultiGameListController.prototype, "rightArrow", void 0);
    __decorate([
        property(cc.Button)
    ], MultiGameListController.prototype, "BackButton", void 0);
    MultiGameListController = __decorate([
        ccclass
    ], MultiGameListController);
    return MultiGameListController;
}(cc.Component));
exports.default = MultiGameListController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/MyPage/MyRecordController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd5fe5RwmvtCYrwKUlqy4mYD', 'MyRecordController');
// scripts/Controller/MyPage/MyRecordController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myInfoButton = null;
        _this.backButton = null;
        return _this;
    }
    NewClass.prototype.onLoad = function () {
        cc.debug.setDisplayStats(false);
    };
    NewClass.prototype.start = function () {
        if (this.myInfoButton) {
            this.myInfoButton.on(cc.Node.EventType.TOUCH_END, function () {
                cc.director.loadScene("MyInfo");
            }, this);
        }
        if (this.backButton) {
            this.backButton.on(cc.Node.EventType.TOUCH_END, function () {
                cc.director.loadScene('홈화면');
            }, this);
        }
    };
    __decorate([
        property(cc.Node)
    ], NewClass.prototype, "myInfoButton", void 0);
    __decorate([
        property(cc.Node)
    ], NewClass.prototype, "backButton", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcTXlQYWdlXFxNeVJlY29yZENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBc0MsNEJBQVk7SUFBbEQ7UUFBQSxxRUF5QkM7UUF0Qkcsa0JBQVksR0FBWSxJQUFJLENBQUM7UUFHN0IsZ0JBQVUsR0FBWSxJQUFJLENBQUM7O0lBbUIvQixDQUFDO0lBakJHLHlCQUFNLEdBQU47UUFDSSxFQUFFLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsd0JBQUssR0FBTDtRQUNJLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUU7Z0JBQzlDLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3BDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNaO1FBRUQsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRTtnQkFDNUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDakMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ1o7SUFDTCxDQUFDO0lBckJEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7a0RBQ1c7SUFHN0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztnREFDUztJQU5WLFFBQVE7UUFENUIsT0FBTztPQUNhLFFBQVEsQ0F5QjVCO0lBQUQsZUFBQztDQXpCRCxBQXlCQyxDQXpCcUMsRUFBRSxDQUFDLFNBQVMsR0F5QmpEO2tCQXpCb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdDbGFzcyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBteUluZm9CdXR0b246IGNjLk5vZGUgPSBudWxsOyBcbiAgICBcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBiYWNrQnV0dG9uOiBjYy5Ob2RlID0gbnVsbDsgICAgICAgIFxuXG4gICAgb25Mb2FkKCl7XG4gICAgICAgIGNjLmRlYnVnLnNldERpc3BsYXlTdGF0cyhmYWxzZSk7XG4gICAgfSBcblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgaWYgKHRoaXMubXlJbmZvQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLm15SW5mb0J1dHRvbi5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJNeUluZm9cIik7XG4gICAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmJhY2tCdXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMuYmFja0J1dHRvbi5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoJ+2ZiO2ZlOuptCcpO1xuICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Single/SingleGameOver.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '37c9d71cJ1Cco0xoDnC87r3', 'SingleGameOver');
// scripts/Controller/Single/SingleGameOver.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameOverUI = /** @class */ (function (_super) {
    __extends(GameOverUI, _super);
    function GameOverUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.exitButton = null;
        _this.retryButton = null;
        return _this;
    }
    GameOverUI.prototype.onLoad = function () {
        if (this.exitButton) {
            this.registerButtonEvents(this.exitButton.node, this.onExitClick.bind(this));
        }
        if (this.retryButton) {
            this.registerButtonEvents(this.retryButton.node, this.onRetryClick.bind(this));
        }
        this.submitScoreToServer();
    };
    /** 버튼에 터치 & 클릭 이벤트 등록 */
    GameOverUI.prototype.registerButtonEvents = function (node, callback) {
        node.on(cc.Node.EventType.TOUCH_END, callback);
        node.on(cc.Node.EventType.MOUSE_DOWN, callback);
    };
    GameOverUI.prototype.onExitClick = function () {
        console.log("나가기 버튼 클릭 → SingleGameList 씬으로 이동");
        cc.director.loadScene("SingleGameList");
    };
    GameOverUI.prototype.onRetryClick = function () {
        var sceneToLoad = GameState_1.default.lastGameScene;
        if (sceneToLoad && sceneToLoad.length > 0) {
            cc.log("\uB2E4\uC2DC\uD558\uAE30 \u2192 " + sceneToLoad);
            cc.director.loadScene(sceneToLoad);
        }
        else {
            cc.warn("이전 씬 정보가 없습니다. 메인으로 이동");
            cc.director.loadScene("MainScene");
        }
    };
    GameOverUI.prototype.submitScoreToServer = function () {
        return __awaiter(this, void 0, void 0, function () {
            var token, response, result, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        token = localStorage.getItem('jwtToken');
                        if (!token) {
                            console.warn("JWT 토큰이 없어 점수 저장 불가");
                            return [2 /*return*/];
                        }
                        // 여기 추가!
                        console.log("[클라이언트] localStorage jwtToken =", token);
                        console.log("점수 저장 요청", {
                            gameId: GameState_1.default.gameId,
                            score: GameState_1.default.score,
                            mode: "single",
                            nickname: GameState_1.default.nickname,
                            character: GameState_1.default.character
                        });
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, fetch('https://smartzoo.shop/single/submit', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': "Bearer " + token
                                },
                                body: JSON.stringify({
                                    gameId: GameState_1.default.gameId,
                                    score: GameState_1.default.score,
                                    mode: "single",
                                    nickname: GameState_1.default.nickname,
                                    character: GameState_1.default.character
                                })
                            })];
                    case 2:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 3:
                        result = _a.sent();
                        if (response.ok) {
                            console.log("점수 저장 성공:", result);
                        }
                        else {
                            console.warn("점수 저장 실패:", result.message);
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        error_1 = _a.sent();
                        console.error("점수 저장 중 오류 발생:", error_1);
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        property(cc.Button)
    ], GameOverUI.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameOverUI.prototype, "retryButton", void 0);
    GameOverUI = __decorate([
        ccclass
    ], GameOverUI);
    return GameOverUI;
}(cc.Component));
exports.default = GameOverUI;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcU2luZ2xlXFxTaW5nbGVHYW1lT3Zlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBOEM7QUFDeEMsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUFxRkM7UUFuRkcsZ0JBQVUsR0FBYyxJQUFJLENBQUM7UUFHN0IsaUJBQVcsR0FBYyxJQUFJLENBQUM7O0lBZ0ZsQyxDQUFDO0lBOUVHLDJCQUFNLEdBQU47UUFDSSxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDaEY7UUFDRCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbEY7UUFFRCxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQseUJBQXlCO0lBQ3pCLHlDQUFvQixHQUFwQixVQUFxQixJQUFhLEVBQUUsUUFBb0I7UUFDcEQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxV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IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lU3RhdGUgZnJvbSBcIi4uL0NvbW1vblVJL0dhbWVTdGF0ZVwiO1xuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVPdmVyVUkgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgZXhpdEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgcmV0cnlCdXR0b246IGNjLkJ1dHRvbiA9IG51bGw7XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIGlmICh0aGlzLmV4aXRCdXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJCdXR0b25FdmVudHModGhpcy5leGl0QnV0dG9uLm5vZGUsIHRoaXMub25FeGl0Q2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucmV0cnlCdXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJCdXR0b25FdmVudHModGhpcy5yZXRyeUJ1dHRvbi5ub2RlLCB0aGlzLm9uUmV0cnlDbGljay5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3VibWl0U2NvcmVUb1NlcnZlcigpO1xuICAgIH1cblxuICAgIC8qKiDrsoTtirzsl5Ag7YSw7LmYICYg7YG066atIOydtOuypO2KuCDrk7HroZ0gKi9cbiAgICByZWdpc3RlckJ1dHRvbkV2ZW50cyhub2RlOiBjYy5Ob2RlLCBjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgY2FsbGJhY2spO1xuICAgICAgICBub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLk1PVVNFX0RPV04sIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICBvbkV4aXRDbGljaygpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCLrgpjqsIDquLAg67KE7Yq8IO2BtOumrSDihpIgU2luZ2xlR2FtZUxpc3Qg7JSs7Jy866GcIOydtOuPmVwiKTtcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU2luZ2xlR2FtZUxpc3RcIik7XG4gICAgfVxuXG4gICAgb25SZXRyeUNsaWNrKCkge1xuICAgICAgICBjb25zdCBzY2VuZVRvTG9hZCA9IEdhbWVTdGF0ZS5sYXN0R2FtZVNjZW5lO1xuICAgICAgICBpZiAoc2NlbmVUb0xvYWQgJiYgc2NlbmVUb0xvYWQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY2MubG9nKGDri6Tsi5ztlZjquLAg4oaSICR7c2NlbmVUb0xvYWR9YCk7XG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoc2NlbmVUb0xvYWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2Mud2FybihcIuydtOyghCDslKwg7KCV67O06rCAIOyXhuyKteuLiOuLpC4g66mU7J247Jy866GcIOydtOuPmVwiKTtcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk1haW5TY2VuZVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuYXN5bmMgc3VibWl0U2NvcmVUb1NlcnZlcigpIHtcbiAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdqd3RUb2tlbicpO1xuICAgIGlmICghdG9rZW4pIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiSldUIO2GoO2BsOydtCDsl4bslrQg7KCQ7IiYIOyggOyepSDrtojqsIBcIik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8g7Jes6riwIOy2lOqwgCFcbiAgICBjb25zb2xlLmxvZyhcIlvtgbTrnbzsnbTslrjtirhdIGxvY2FsU3RvcmFnZSBqd3RUb2tlbiA9XCIsIHRva2VuKTtcbiAgICBjb25zb2xlLmxvZyhcIuygkOyImCDsoIDsnqUg7JqU7LKtXCIsIHtcbiAgICAgICAgZ2FtZUlkOiBHYW1lU3RhdGUuZ2FtZUlkLFxuICAgICAgICBzY29yZTogR2FtZVN0YXRlLnNjb3JlLFxuICAgICAgICBtb2RlOiBcInNpbmdsZVwiLFxuICAgICAgICBuaWNrbmFtZTogR2FtZVN0YXRlLm5pY2tuYW1lLFxuICAgICAgICBjaGFyYWN0ZXI6IEdhbWVTdGF0ZS5jaGFyYWN0ZXJcbiAgICB9KTtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vc21hcnR6b28uc2hvcC9zaW5nbGUvc3VibWl0Jywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0b2tlbn1gXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIGdhbWVJZDogR2FtZVN0YXRlLmdhbWVJZCxcbiAgICAgICAgICAgICAgICBzY29yZTogR2FtZVN0YXRlLnNjb3JlLFxuICAgICAgICAgICAgICAgIG1vZGU6IFwic2luZ2xlXCIsXG4gICAgICAgICAgICAgICAgbmlja25hbWU6IEdhbWVTdGF0ZS5uaWNrbmFtZSwgICBcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXI6IEdhbWVTdGF0ZS5jaGFyYWN0ZXIgIFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi7KCQ7IiYIOyggOyepSDshLHqs7U6XCIsIHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCLsoJDsiJgg7KCA7J6lIOyLpO2MqDpcIiwgcmVzdWx0Lm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIuygkOyImCDsoIDsnqUg7KSRIOyYpOulmCDrsJzsg506XCIsIGVycm9yKTtcbiAgICB9XG59XG5cblxuXG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/BlockCountGame/BlockCountExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '724c9YMkp9Iyoq0AH2CBOGT', 'BlockCountExplain');
// scripts/Sim/BlockCountGame/BlockCountExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        cc.debug.setDisplayStats(false);
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("BlockCountGameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU2ltXFxCbG9ja0NvdW50R2FtZVxcQmxvY2tDb3VudEV4cGxhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUFzQ0M7UUFwQ0cscUJBQWUsR0FBYyxJQUFJLENBQUM7UUFHbEMsZ0NBQTBCLEdBQWMsSUFBSSxDQUFDOztJQWlDakQsQ0FBQztJQS9CRyxpQ0FBTSxHQUFOO1FBQUEsaUJBb0JDO1FBbkJHLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hDLFNBQVM7UUFDVCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVuRSx5QkFBeUI7UUFDekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRTtZQUN4RCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQy9CLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVE7YUFDaEMsQ0FBQztRQUNOLENBQUMsQ0FBQyxDQUFDO1FBRUgsc0JBQXNCO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7WUFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUMvQixFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxTQUFTO2FBQ2pDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCwyQ0FBZ0IsR0FBaEI7UUFDSSxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELG9EQUF5QixHQUF6QjtRQUNJLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDeEIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBbkNEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkRBQ2M7SUFHbEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzt3RUFDeUI7SUFMNUIsZ0JBQWdCO1FBRHBDLE9BQU87T0FDYSxnQkFBZ0IsQ0FzQ3BDO0lBQUQsdUJBQUM7Q0F0Q0QsQUFzQ0MsQ0F0QzZDLEVBQUUsQ0FBQyxTQUFTLEdBc0N6RDtrQkF0Q29CLGdCQUFnQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lVGl0bGVNYW5hZ2VyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxuICAgIGdhbWVTdGFydEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgQmFja1RvU2luZ2xlR2FtZUxpc3RCdXR0b246IGNjLkJ1dHRvbiA9IG51bGw7XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIGNjLmRlYnVnLnNldERpc3BsYXlTdGF0cyhmYWxzZSk7XG4gICAgICAgIC8vIO2BtOumrSDsnbTrsqTtirhcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbignY2xpY2snLCB0aGlzLm9uQ2xpY2tTdGFydEdhbWUsIHRoaXMpO1xuXG4gICAgICAgIC8vIOuniOyasOyKpCDsp4TsnoUg7IucIOy7pOyEnCDrsI8gaG92ZXIg7Zqo6rO8XG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfRU5URVIsICgpID0+IHtcbiAgICAgICAgICAgIGNjLmdhbWUuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXG4gICAgICAgICAgICAgICAgY2Muc2NhbGVUbygwLjEsIDEuMSkgLy8g7JW96rCEIO2ZleuMgFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8g66eI7Jqw7IqkIOuCmOqwkCDsi5wg7Luk7IScIOuwjyDtmqjqs7wg67O16reAXG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfTEVBVkUsICgpID0+IHtcbiAgICAgICAgICAgIGNjLmdhbWUuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXG4gICAgICAgICAgICAgICAgY2Muc2NhbGVUbygwLjEsIDEuMCkgLy8g7JuQ656YIO2BrOq4sOuhnFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25DbGlja1N0YXJ0R2FtZSgpIHtcbiAgICAgICAgY2MubG9nKFwi6rKM7J6EIOyLnOyekSDrsoTtirwg7YG066at65CoXCIpO1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJCbG9ja0NvdW50R2FtZVNjZW5lXCIpO1xuICAgIH1cblxuICAgIG9uQ2xpY2tCYWNrU2luZ2xlR2FtZUxpc3QoKSB7XG4gICAgICAgIGNjLmxvZyhcIuyLseq4gOqyjOyehOumrOyKpO2KuOuhnCDrj4zslYTqsIDquLBcIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/RememberGame/RememberGameExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '63501GS7bZGpqKMuY0Cb4uj', 'RememberGameExplain');
// scripts/Sim/RememberGame/RememberGameExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        cc.debug.setDisplayStats(false);
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("RememberGameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU2ltXFxSZW1lbWJlckdhbWVcXFJlbWVtYmVyR2FtZUV4cGxhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUF1Q0M7UUFyQ0cscUJBQWUsR0FBYyxJQUFJLENBQUM7UUFHbEMsZ0NBQTBCLEdBQWMsSUFBSSxDQUFDOztJQWtDakQsQ0FBQztJQWhDRyxpQ0FBTSxHQUFOO1FBQUEsaUJBcUJDO1FBcEJHLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWhDLFNBQVM7UUFDVCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVuRSx5QkFBeUI7UUFDekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRTtZQUN4RCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQy9CLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVE7YUFDaEMsQ0FBQztRQUNOLENBQUMsQ0FBQyxDQUFDO1FBRUgsc0JBQXNCO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7WUFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUMvQixFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxTQUFTO2FBQ2pDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCwyQ0FBZ0IsR0FBaEI7UUFDSSxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELG9EQUF5QixHQUF6QjtRQUNJLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDeEIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBcENEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkRBQ2M7SUFHbEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzt3RUFDeUI7SUFMNUIsZ0JBQWdCO1FBRHBDLE9BQU87T0FDYSxnQkFBZ0IsQ0F1Q3BDO0lBQUQsdUJBQUM7Q0F2Q0QsQUF1Q0MsQ0F2QzZDLEVBQUUsQ0FBQyxTQUFTLEdBdUN6RDtrQkF2Q29CLGdCQUFnQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lVGl0bGVNYW5hZ2VyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxuICAgIGdhbWVTdGFydEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgQmFja1RvU2luZ2xlR2FtZUxpc3RCdXR0b246IGNjLkJ1dHRvbiA9IG51bGw7XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIGNjLmRlYnVnLnNldERpc3BsYXlTdGF0cyhmYWxzZSk7XG5cbiAgICAgICAgLy8g7YG066atIOydtOuypO2KuFxuICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLm9uKCdjbGljaycsIHRoaXMub25DbGlja1N0YXJ0R2FtZSwgdGhpcyk7XG5cbiAgICAgICAgLy8g66eI7Jqw7IqkIOynhOyehSDsi5wg7Luk7IScIOuwjyBob3ZlciDtmqjqs7xcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9FTlRFUiwgKCkgPT4ge1xuICAgICAgICAgICAgY2MuZ2FtZS5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLnJ1bkFjdGlvbihcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4xKSAvLyDslb3qsIQg7ZmV64yAXG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyDrp4jsmrDsiqQg64KY6rCQIOyLnCDsu6TshJwg67CPIO2aqOqzvCDrs7Xqt4BcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9MRUFWRSwgKCkgPT4ge1xuICAgICAgICAgICAgY2MuZ2FtZS5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJkZWZhdWx0XCI7XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLnJ1bkFjdGlvbihcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4wKSAvLyDsm5Drnpgg7YGs6riw66GcXG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNsaWNrU3RhcnRHYW1lKCkge1xuICAgICAgICBjYy5sb2coXCLqsozsnoQg7Iuc7J6RIOuyhO2KvCDtgbTrpq3rkKhcIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlJlbWVtYmVyR2FtZVNjZW5lXCIpO1xuICAgIH1cblxuICAgIG9uQ2xpY2tCYWNrU2luZ2xlR2FtZUxpc3QoKSB7XG4gICAgICAgIGNjLmxvZyhcIuyLseq4gOqyjOyehOumrOyKpO2KuOuhnCDrj4zslYTqsIDquLBcIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_init.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c4754JUFndJMpLQkeWjjUsc', 'Reversecorrect_Game_init');
// scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_init.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Reversecorrect_Show_QnA_1 = require("./Reversecorrect_Show_QnA");
var GameState_1 = require("../../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Game_init = /** @class */ (function (_super) {
    __extends(Game_init, _super);
    function Game_init() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.qna = null;
        _this.exitButton = null;
        _this.correct_sign = null;
        _this.wrong_sign = null;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.gameStartOverlayPrefab = null;
        _this.gameOverUIPrefab = null;
        _this.currentTime = 30;
        _this.score = 0;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        return _this;
    }
    Game_init_1 = Game_init;
    Game_init.prototype.onLoad = function () {
        var _this = this;
        Game_init_1.instance = this;
        this.correct_sign.active = false;
        this.wrong_sign.active = false;
        if (this.gameStartOverlayPrefab) {
            var startOverlay_1 = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay_1);
            startOverlay_1.setPosition(0, 0);
            // 애니메이션 실행
            var anim = startOverlay_1.getComponent(cc.Animation);
            if (anim) {
                anim.play("GameStartFade"); // <- Animation 이름 (애니메이션 클립 이름)
                anim.once(cc.Animation.EventType.FINISHED, function () {
                    startOverlay_1.destroy();
                    _this.startGameLogic();
                }, this);
            }
            else {
                // fallback: 1.5초 지연 후 실행
                this.scheduleOnce(function () {
                    startOverlay_1.destroy();
                    _this.startGameLogic();
                }, 1.5);
            }
        }
        else {
            this.startGameLogic();
        }
    };
    Game_init.prototype.startGameLogic = function () {
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        var sceneName = cc.director.getScene().name;
        // 타이머 생성
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
        this.timerNode.setPosition(sceneName === 'Reversecorrect_mainscene' ? cc.v2(-300, 800) : cc.v2(380, 900));
        // 점수 생성
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScore(0);
        this.scoreNode.setPosition(sceneName === 'Reversecorrect_mainscene' ? cc.v2(300, 800) : cc.v2(200, -830));
        this.schedule(this.updateTimer, 1);
    };
    Game_init.prototype.updateTimer = function () {
        this.currentTime--;
        if (this.currentTime <= 0) {
            this.currentTime = 0;
            this.unschedule(this.updateTimer);
            Reversecorrect_Show_QnA_1.default.isGameOver = true;
            this.qna.setButtonsInteractable(false);
            this.onGameOver();
        }
        this.updateTimerLabel();
    };
    Game_init.prototype.updateTimerLabel = function () {
        this.timerLabel.string = "" + this.currentTime;
    };
    Game_init.prototype.updateScore = function (value) {
        this.score += value;
        this.scoreLabel.string = "" + this.score;
    };
    Game_init.prototype.onGameOver = function () {
        cc.log("게임 종료!");
        // GameState 저장
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "ReverseCorrect-Game"; // 원하는 고유 ID로 설정
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI);
        gameOverUI.setPosition(0, 0);
    };
    Game_init.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        cc.director.loadScene('SingleGameList');
    };
    var Game_init_1;
    Game_init.instance = null;
    __decorate([
        property(Reversecorrect_Show_QnA_1.default)
    ], Game_init.prototype, "qna", void 0);
    __decorate([
        property(cc.Button)
    ], Game_init.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Node)
    ], Game_init.prototype, "correct_sign", void 0);
    __decorate([
        property(cc.Node)
    ], Game_init.prototype, "wrong_sign", void 0);
    __decorate([
        property(cc.Prefab)
    ], Game_init.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], Game_init.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], Game_init.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], Game_init.prototype, "gameOverUIPrefab", void 0);
    Game_init = Game_init_1 = __decorate([
        ccclass
    ], Game_init);
    return Game_init;
}(cc.Component));
exports.default = Game_init;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b4810lOqyBGeZnU+y/P5j0Y', 'Rottenacorn_acorn');
// scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Acorn = /** @class */ (function (_super) {
    __extends(Acorn, _super);
    function Acorn() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bugNode = null;
        _this.speed = 300;
        _this.minSpeed = 150;
        return _this;
    }
    Acorn.prototype.activate = function (isRotten) {
        var _this = this;
        // 벌레 노출
        if (this.bugNode) {
            this.bugNode.active = isRotten;
            if (isRotten) {
                this.scheduleOnce(function () {
                    _this.bugNode.active = false;
                }, 1);
            }
        }
        // 물리 속도 적용
        var rigid = this.node.getComponent(cc.RigidBody);
        if (rigid) {
            var angle = Math.random() * 2 * Math.PI;
            var vx = Math.cos(angle) * this.speed;
            var vy = Math.sin(angle) * this.speed;
            rigid.linearVelocity = cc.v2(vx, vy);
            rigid.awake = true;
        }
    };
    Acorn.prototype.update = function (dt) {
        var rigid = this.node.getComponent(cc.RigidBody);
        if (!rigid)
            return;
        var velocity = rigid.linearVelocity;
        var currentSpeed = velocity.mag();
        if (currentSpeed < this.minSpeed) {
            var direction = velocity.normalize();
            // 방향이 거의 0일 경우 예외 처리
            if (direction.mag() < 0.001) {
                var randomAngle = Math.random() * 2 * Math.PI;
                direction.x = Math.cos(randomAngle);
                direction.y = Math.sin(randomAngle);
            }
            // 약간의 랜덤 각도 적용
            var angleOffset = (Math.random() - 0.5) * Math.PI / 10; // ±18도
            var angle = Math.atan2(direction.y, direction.x) + angleOffset;
            var vx = Math.cos(angle) * this.minSpeed;
            var vy = Math.sin(angle) * this.minSpeed;
            rigid.linearVelocity = cc.v2(vx, vy);
        }
    };
    __decorate([
        property(cc.Node)
    ], Acorn.prototype, "bugNode", void 0);
    Acorn = __decorate([
        ccclass
    ], Acorn);
    return Acorn;
}(cc.Component));
exports.default = Acorn;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUm90dGVuYWNvcm5fc2NyaXB0c1xcUm90dGVuYWNvcm5fYWNvcm4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBbUMseUJBQVk7SUFBL0M7UUFBQSxxRUFvREM7UUFqREcsYUFBTyxHQUFZLElBQUksQ0FBQztRQUNoQixXQUFLLEdBQVcsR0FBRyxDQUFDO1FBQ3BCLGNBQVEsR0FBVyxHQUFHLENBQUM7O0lBK0NuQyxDQUFDO0lBOUNVLHdCQUFRLEdBQWYsVUFBZ0IsUUFBaUI7UUFBakMsaUJBcUJDO1FBcEJHLFFBQVE7UUFDUixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7WUFDL0IsSUFBSSxRQUFRLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQztvQkFDZCxLQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7Z0JBQ2hDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUNUO1NBQ0o7UUFFRCxXQUFXO1FBQ1gsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25ELElBQUksS0FBSyxFQUFFO1lBQ1AsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQzFDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUN4QyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFFeEMsS0FBSyxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNyQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFDRCxzQkFBTSxHQUFOLFVBQU8sRUFBVTtRQUNiLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsS0FBSztZQUFFLE9BQU87UUFFbkIsSUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQztRQUN0QyxJQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUM7UUFFcEMsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUM5QixJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsU0FBUyxFQUFFLENBQUM7WUFFdkMscUJBQXFCO1lBQ3JCLElBQUksU0FBUyxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRTtnQkFDekIsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO2dCQUNoRCxTQUFTLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ3BDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUN2QztZQUNELGVBQWU7WUFDZixJQUFNLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE9BQU87WUFDakUsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUM7WUFDakUsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQzNDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUMzQyxLQUFLLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ3hDO0lBQ0wsQ0FBQztJQWhERDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzBDQUNNO0lBSFAsS0FBSztRQUR6QixPQUFPO09BQ2EsS0FBSyxDQW9EekI7SUFBRCxZQUFDO0NBcERELEFBb0RDLENBcERrQyxFQUFFLENBQUMsU0FBUyxHQW9EOUM7a0JBcERvQixLQUFLIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjb3JuIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGJ1Z05vZGU6IGNjLk5vZGUgPSBudWxsO1xuICAgIHByaXZhdGUgc3BlZWQ6IG51bWJlciA9IDMwMDtcbiAgICBwcml2YXRlIG1pblNwZWVkOiBudW1iZXIgPSAxNTA7XG4gICAgcHVibGljIGFjdGl2YXRlKGlzUm90dGVuOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIC8vIOuyjOugiCDrhbjstpxcbiAgICAgICAgaWYgKHRoaXMuYnVnTm9kZSkge1xuICAgICAgICAgICAgdGhpcy5idWdOb2RlLmFjdGl2ZSA9IGlzUm90dGVuO1xuICAgICAgICAgICAgaWYgKGlzUm90dGVuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1Z05vZGUuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyDrrLzrpqwg7IaN64+EIOyggeyaqVxuICAgICAgICBjb25zdCByaWdpZCA9IHRoaXMubm9kZS5nZXRDb21wb25lbnQoY2MuUmlnaWRCb2R5KTtcbiAgICAgICAgaWYgKHJpZ2lkKSB7XG4gICAgICAgICAgICBjb25zdCBhbmdsZSA9IE1hdGgucmFuZG9tKCkgKiAyICogTWF0aC5QSTtcbiAgICAgICAgICAgIGNvbnN0IHZ4ID0gTWF0aC5jb3MoYW5nbGUpICogdGhpcy5zcGVlZDtcbiAgICAgICAgICAgIGNvbnN0IHZ5ID0gTWF0aC5zaW4oYW5nbGUpICogdGhpcy5zcGVlZDtcblxuICAgICAgICAgICAgcmlnaWQubGluZWFyVmVsb2NpdHkgPSBjYy52Mih2eCwgdnkpO1xuICAgICAgICAgICAgcmlnaWQuYXdha2UgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShkdDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHJpZ2lkID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5SaWdpZEJvZHkpO1xuICAgICAgICBpZiAoIXJpZ2lkKSByZXR1cm47XG5cbiAgICAgICAgY29uc3QgdmVsb2NpdHkgPSByaWdpZC5saW5lYXJWZWxvY2l0eTtcbiAgICAgICAgY29uc3QgY3VycmVudFNwZWVkID0gdmVsb2NpdHkubWFnKCk7XG5cbiAgICAgICAgaWYgKGN1cnJlbnRTcGVlZCA8IHRoaXMubWluU3BlZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IHZlbG9jaXR5Lm5vcm1hbGl6ZSgpO1xuICAgIFxuICAgICAgICAgICAgLy8g67Cp7Zal7J20IOqxsOydmCAw7J28IOqyveyasCDsmIjsmbgg7LKY66asXG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uLm1hZygpIDwgMC4wMDEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21BbmdsZSA9IE1hdGgucmFuZG9tKCkgKiAyICogTWF0aC5QSTtcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb24ueCA9IE1hdGguY29zKHJhbmRvbUFuZ2xlKTtcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb24ueSA9IE1hdGguc2luKHJhbmRvbUFuZ2xlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIOyVveqwhOydmCDrnpzrjaQg6rCB64+EIOyggeyaqVxuICAgICAgICAgICAgY29uc3QgYW5nbGVPZmZzZXQgPSAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiBNYXRoLlBJIC8gMTA7IC8vIMKxMTjrj4RcbiAgICAgICAgICAgIGNvbnN0IGFuZ2xlID0gTWF0aC5hdGFuMihkaXJlY3Rpb24ueSwgZGlyZWN0aW9uLngpICsgYW5nbGVPZmZzZXQ7XG4gICAgICAgICAgICBjb25zdCB2eCA9IE1hdGguY29zKGFuZ2xlKSAqIHRoaXMubWluU3BlZWQ7XG4gICAgICAgICAgICBjb25zdCB2eSA9IE1hdGguc2luKGFuZ2xlKSAqIHRoaXMubWluU3BlZWQ7XG4gICAgICAgICAgICByaWdpZC5saW5lYXJWZWxvY2l0eSA9IGNjLnYyKHZ4LCB2eSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/3Match/3MatchManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c8d14iCk/lJLps0BAQbziZK', '3MatchManager');
// scripts/Yu/3Match/3MatchManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameState_1 = require("../../Controller/CommonUI/GameState");
var ThreeMatchManager = /** @class */ (function (_super) {
    __extends(ThreeMatchManager, _super);
    function ThreeMatchManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.boardNode = null;
        _this.comboGauge = null;
        _this.feverSprite = null;
        _this.exitButton = null;
        _this.gameOverUIPrefab = null;
        _this.gameStartOverlayPrefab = null;
        _this.totalTime = 30;
        _this.currentTime = 30;
        _this.score = 0;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        _this.comboValue = 0;
        _this.comboMax = 300;
        _this.isFeverTime = false;
        return _this;
    }
    ThreeMatchManager.prototype.start = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        if (this.feverSprite && this.feverSprite.isValid) {
            this.feverSprite.active = false;
        }
        if (this.gameStartOverlayPrefab) {
            var startOverlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay);
            startOverlay.setPosition(0, 0);
            // 애니메이션 시간 후에 시작 (2초 권장)
            this.scheduleOnce(function () {
                _this.startGameLogic();
            }, 2);
        }
        else {
            this.startGameLogic();
        }
    };
    ThreeMatchManager.prototype.startGameLogic = function () {
        // 타이머 UI
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimer();
        // 점수 UI
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScore(0);
        // 피버 관련 초기화
        this.comboValue = 0;
        this.comboMax = 300;
        this.comboGauge.progress = 0;
        this.isFeverTime = false;
        if (this.feverSprite)
            this.feverSprite.active = false;
        // 타이머 시작
        this.schedule(this.updateTimer, 1);
    };
    ThreeMatchManager.prototype.updateTimer = function () {
        this.currentTime--;
        if (this.currentTime <= 0) {
            this.currentTime = 0;
            this.unschedule(this.updateTimer);
            this.onGameOver();
        }
        this.timerLabel.string = "" + this.currentTime;
    };
    ThreeMatchManager.prototype.updateScore = function (amount) {
        this.score += amount;
        this.scoreLabel.string = "" + this.score;
        this.increaseComboGauge(amount);
    };
    ThreeMatchManager.prototype.increaseComboGauge = function (amount) {
        if (this.isFeverTime)
            return;
        this.comboValue += amount;
        if (this.comboValue >= this.comboMax) {
            this.comboValue = this.comboMax;
            this.startFeverTime();
        }
        this.comboGauge.progress = this.comboValue / this.comboMax;
    };
    ThreeMatchManager.prototype.startFeverTime = function () {
        var _this = this;
        this.isFeverTime = true;
        this.feverSprite.active = true;
        this.scheduleOnce(function () {
            _this.endFeverTime();
        }, 10);
    };
    ThreeMatchManager.prototype.endFeverTime = function () {
        this.isFeverTime = false;
        this.comboValue = 0;
        this.comboGauge.progress = 0;
        this.feverSprite.active = false;
    };
    ThreeMatchManager.prototype.addMatchScore = function (matchCount) {
        var scoreToAdd = matchCount * 10;
        var finalScore = this.isFeverTime ? scoreToAdd * 2 : scoreToAdd;
        this.updateScore(finalScore);
    };
    ThreeMatchManager.prototype.onGameOver = function () {
        cc.log("게임 종료!");
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "FruitPuzzle";
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI);
        gameOverUI.setPosition(0, 0);
    };
    ThreeMatchManager.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], ThreeMatchManager.prototype, "boardNode", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], ThreeMatchManager.prototype, "comboGauge", void 0);
    __decorate([
        property(cc.Node)
    ], ThreeMatchManager.prototype, "feverSprite", void 0);
    __decorate([
        property(cc.Button)
    ], ThreeMatchManager.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "gameStartOverlayPrefab", void 0);
    ThreeMatchManager = __decorate([
        ccclass
    ], ThreeMatchManager);
    return ThreeMatchManager;
}(cc.Component));
exports.default = ThreeMatchManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/MultiMoleGame/MultiGuestViewer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '14aa8rLu7VJHbN5nilWBzO7', 'MultiGuestViewer');
// scripts/Yu/MultiMoleGame/MultiGuestViewer.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OpponentMoleViewer = /** @class */ (function (_super) {
    __extends(OpponentMoleViewer, _super);
    function OpponentMoleViewer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        _this.scoreDisplayPrefab = null;
        _this.holes = [];
        _this.score = 0;
        _this.scoreLabel = null;
        return _this;
    }
    OpponentMoleViewer.prototype.onLoad = function () {
        var _this = this;
        this.holes = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.initScore();
        // (1) 공통 컨트롤러가 브로드캐스트한 이벤트 수신
        cc.director.on("spawn-mole", function (data) {
            _this.spawnMoleFromData(data);
        });
        cc.director.on("hit-mole", function (data) {
            _this.hitMoleAnimation(data.index, data.moleType);
        });
        cc.director.on("score-update", function (data) {
            // 외부에서 “data.player=호스트 or 게스트, data.score” 형태로 들어온다
            _this.setScore(data.score);
        });
    };
    OpponentMoleViewer.prototype.initScore = function () {
        var scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(scoreNode);
        this.scoreLabel = scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
    };
    OpponentMoleViewer.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    OpponentMoleViewer.prototype.setScore = function (value) {
        this.score = value;
        this.updateScoreLabel();
    };
    OpponentMoleViewer.prototype.spawnMoleFromData = function (data) {
        var index = data.index, type = data.type;
        var hole = this.holes[index];
        if (!hole)
            return;
        var mole = cc.instantiate(type === "good" ? this.molePrefabGood : this.molePrefab);
        mole.name = "OpponentMole";
        mole.setPosition(0, -130);
        mole.active = true;
        mole.zIndex = 9999;
        hole.addChild(mole);
        cc.tween(mole)
            .to(0.2, { position: cc.v3(0, -20) }, { easing: "sineOut" })
            .delay(1.0)
            .call(function () {
            if (mole.isValid)
                mole.destroy();
        })
            .start();
    };
    OpponentMoleViewer.prototype.hitMoleAnimation = function (index, type) {
        var hole = this.holes[index];
        var mole = hole.getChildByName("OpponentMole");
        if (!mole || !mole.isValid)
            return;
        var sprite = mole.getComponent(cc.Sprite);
        if (sprite) {
            sprite.spriteFrame = type === "good" ? this.goodMoleHitSprite : this.moleHitSprite;
        }
        cc.tween(mole)
            .repeat(3, cc.tween()
            .by(0.05, { angle: 15 })
            .by(0.05, { angle: -30 })
            .by(0.05, { angle: 15 }))
            .start();
    };
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], OpponentMoleViewer.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], OpponentMoleViewer.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "scoreDisplayPrefab", void 0);
    OpponentMoleViewer = __decorate([
        ccclass
    ], OpponentMoleViewer);
    return OpponentMoleViewer;
}(cc.Component));
exports.default = OpponentMoleViewer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/MultiMoleGame/MultiGuestViewer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4a5618Caj1N44TdZMU+UUnD', 'MultiGuestViewer');
// scenes/Yu/MultiMoleGame/MultiGuestViewer.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OpponentMoleViewer = /** @class */ (function (_super) {
    __extends(OpponentMoleViewer, _super);
    function OpponentMoleViewer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        _this.scoreDisplayPrefab = null;
        _this.holes = [];
        _this.score = 0;
        _this.scoreLabel = null;
        return _this;
    }
    OpponentMoleViewer.prototype.onLoad = function () {
        var _this = this;
        this.holes = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.initScore();
        // (1) 공통 컨트롤러가 브로드캐스트한 이벤트 수신
        cc.director.on("spawn-mole", function (data) {
            _this.spawnMoleFromData(data);
        });
        cc.director.on("hit-mole", function (data) {
            _this.hitMoleAnimation(data.index, data.moleType);
        });
        cc.director.on("score-update", function (data) {
            // 외부에서 “data.player=호스트 or 게스트, data.score” 형태로 들어온다
            _this.setScore(data.score);
        });
    };
    OpponentMoleViewer.prototype.initScore = function () {
        var scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(scoreNode);
        this.scoreLabel = scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
    };
    OpponentMoleViewer.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    OpponentMoleViewer.prototype.setScore = function (value) {
        this.score = value;
        this.updateScoreLabel();
    };
    OpponentMoleViewer.prototype.spawnMoleFromData = function (data) {
        var index = data.index, type = data.type;
        var hole = this.holes[index];
        if (!hole)
            return;
        var mole = cc.instantiate(type === "good" ? this.molePrefabGood : this.molePrefab);
        mole.name = "OpponentMole";
        mole.setPosition(0, -130);
        mole.active = true;
        mole.zIndex = 9999;
        hole.addChild(mole);
        cc.tween(mole)
            .to(0.2, { position: cc.v3(0, -20) }, { easing: "sineOut" })
            .delay(1.0)
            .call(function () {
            if (mole.isValid)
                mole.destroy();
        })
            .start();
    };
    OpponentMoleViewer.prototype.hitMoleAnimation = function (index, type) {
        var hole = this.holes[index];
        var mole = hole.getChildByName("OpponentMole");
        if (!mole || !mole.isValid)
            return;
        var sprite = mole.getComponent(cc.Sprite);
        if (sprite) {
            sprite.spriteFrame = type === "good" ? this.goodMoleHitSprite : this.moleHitSprite;
        }
        cc.tween(mole)
            .repeat(3, cc.tween()
            .by(0.05, { angle: 15 })
            .by(0.05, { angle: -30 })
            .by(0.05, { angle: 15 }))
            .start();
    };
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], OpponentMoleViewer.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], OpponentMoleViewer.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], OpponentMoleViewer.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], OpponentMoleViewer.prototype, "scoreDisplayPrefab", void 0);
    OpponentMoleViewer = __decorate([
        ccclass
    ], OpponentMoleViewer);
    return OpponentMoleViewer;
}(cc.Component));
exports.default = OpponentMoleViewer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/3Match/Tile.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4b9bcgU2iZNSYqYzUz565+a', 'Tile');
// scenes/Yu/3Match/Tile.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var _3MatchBoard_1 = require("./3MatchBoard");
var Tile = /** @class */ (function (_super) {
    __extends(Tile, _super);
    function Tile() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sprite = null; // 기존 sprite 속성 복구
        _this.explosionPrefabs = [];
        _this.fruitSprites = [];
        _this.row = 0;
        _this.col = 0;
        _this.touchStartPos = null;
        _this.fruitIndex = 0; // 현재 과일 인덱스
        return _this;
    }
    Tile_1 = Tile;
    // 노드가 씬에 생성되면서 초기화 단계.
    // 이 시점에 컴포넌트, 스프라이트, 이벤트 리스너 등을 등록
    Tile.prototype.onLoad = function () {
        // 스프라이트 컴포넌트가 없으면 추가
        if (!this.sprite) {
            this.sprite = this.node.addComponent(cc.Sprite);
        }
        // this.node.on(cc.Node.EventType.TOUCH_END, this.onTileClicked, this);
        // 드래그 감지용 이벤트 등록
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
    };
    Tile.prototype.setRandomFruit = function () {
        var randomIndex = Math.floor(Math.random() * this.fruitSprites.length);
        this.fruitIndex = randomIndex;
        this.sprite.spriteFrame = this.fruitSprites[randomIndex];
    };
    Tile.prototype.setRandomFruitExcluding = function (excludeIndices) {
        var availableIndices = this.fruitSprites
            .map(function (_, index) { return index; })
            .filter(function (index) { return !excludeIndices.includes(index); });
        if (availableIndices.length === 0) {
            availableIndices = this.fruitSprites.map(function (_, index) { return index; });
        }
        var randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];
        this.fruitIndex = randomIndex;
        this.sprite.spriteFrame = this.fruitSprites[randomIndex];
    };
    Tile.prototype.addOutline = function () {
        // 기존에 있던 Graphics가 있으면 제거
        var existingGraphics = this.node.getComponent(cc.Graphics);
        if (existingGraphics) {
            this.node.removeComponent(existingGraphics);
        }
        // 새 Graphics 노드 생성
        var graphicsNode = new cc.Node();
        graphicsNode.parent = this.node;
        graphicsNode.setPosition(0, 0);
        var graphics = graphicsNode.addComponent(cc.Graphics);
        graphics.lineWidth = 5; // 테두리 두께
        graphics.strokeColor = cc.Color.BLACK; // 테두리 색상
        var size = this.node.getContentSize();
        console.log("Tile Size:", size); // 디버깅 로그
        // 테두리 그리기
        graphics.rect(-size.width / 2, -size.height / 2, size.width, size.height);
        graphics.stroke();
    };
    Tile.prototype.onTouchStart = function (event) {
        this.touchStartPos = event.getLocation();
        // 또는 this.touchStartPos = this.node.convertToNodeSpaceAR(event.getLocation());
        console.log("드래그 시작 위치:", this.touchStartPos);
    };
    Tile.prototype.onTouchEnd = function (event) {
        var endPos = event.getLocation();
        var delta = endPos.sub(this.touchStartPos);
        console.log("드래그 끝 위치:", endPos);
        console.log("드래그 거리:", delta);
        // 최소 거리 체크 (조금 더 유연하게, 예: 3픽셀 이상이면 처리)
        if (delta.len() < 3) {
            console.log("드래그 너무 짧아서 무시됨");
            return;
        }
        var absX = Math.abs(delta.x);
        var absY = Math.abs(delta.y);
        // 아주 작은 delta.x나 delta.y일 경우, 방향 보정
        if (absX < 1 && absY < 1) {
            console.log("움직임이 너무 작아서 무시됨");
            return;
        }
        var direction = "";
        if (absX > absY) {
            direction = delta.x > 0 ? "right" : "left";
        }
        else {
            direction = delta.y > 0 ? "up" : "down";
        }
        console.log("드래그 방향:", direction);
        var board = this.node.parent.getComponent(_3MatchBoard_1.default);
        if (!board || !board["board"]) {
            console.warn("ThreeMatchBoard를 찾을 수 없음");
            return;
        }
        var targetTile = null;
        var row = this.row;
        var col = this.col;
        switch (direction) {
            case "up":
                if (row > 0)
                    targetTile = board["board"][row - 1][col];
                break;
            case "down":
                if (row < board["boardSize"] - 1)
                    targetTile = board["board"][row + 1][col];
                break;
            case "left":
                if (col > 0)
                    targetTile = board["board"][row][col - 1];
                break;
            case "right":
                if (col < board["boardSize"] - 1)
                    targetTile = board["board"][row][col + 1];
                break;
        }
        if (targetTile) {
            console.log("\uD0C0\uC77C \uAD50\uD658: (" + row + ", " + col + ") <-> (" + targetTile.row + ", " + targetTile.col + ")");
            board.swapTiles(this, targetTile);
        }
    };
    Tile.prototype.explode = function () {
        var _this = this;
        console.log("explode() \uC2E4\uD589: (" + this.row + ", " + this.col + ")");
        var prefab = this.explosionPrefabs[this.fruitIndex];
        if (prefab) {
            console.log("\uD3ED\uBC1C \uC774\uD399\uD2B8 \uC0DD\uC131 (fruitIndex " + this.fruitIndex + "): (" + this.row + ", " + this.col + ")");
            var effect_1 = cc.instantiate(prefab);
            effect_1.parent = this.node.parent;
            effect_1.setPosition(this.node.getPosition());
            effect_1.setScale(1.2);
            effect_1.angle = Math.random() * 360;
            var ps = effect_1.getComponent(cc.ParticleSystem);
            if (ps) {
                ps.startSize = 160; // 파티클 자체 크기 키움
                ps.startSizeVar = 80; // 다양한 크기 조합
                ps.life = 0.25;
                ps.lifeVar = 0.05;
                ps.resetSystem();
            }
            this.scheduleOnce(function () {
                effect_1.destroy();
            }, 1);
        }
        this.node.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.1, 1.8).easing(cc.easeCubicActionOut()), cc.fadeOut(0.15)), cc.callFunc(function () {
            if (Tile_1.selectedTile === _this) {
                Tile_1.selectedTile = null;
            }
            _this.node.destroy();
        })));
    };
    var Tile_1;
    Tile.selectedTile = null;
    __decorate([
        property(cc.Sprite) // 스프라이트 컴포넌트 연결
    ], Tile.prototype, "sprite", void 0);
    __decorate([
        property([cc.Prefab])
    ], Tile.prototype, "explosionPrefabs", void 0);
    __decorate([
        property([cc.SpriteFrame])
    ], Tile.prototype, "fruitSprites", void 0);
    Tile = Tile_1 = __decorate([
        ccclass
    ], Tile);
    return Tile;
}(cc.Component));
exports.default = Tile;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeLogic.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ff7a2su8tNBnoE+upLUF5DV', 'MazeLogic');
// scripts/Jang/MazeLogic.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MazeGenerator_1 = require("./MazeGenerator");
var MazeRenderer_1 = require("./MazeRenderer");
var MazeLogic = /** @class */ (function () {
    function MazeLogic(container, tilePrefab, pathFrame, grassFrame, cellSize) {
        this.cellSize = cellSize;
        this.maze = [];
        this.goalPos = { x: 19, y: 19 };
        this.generator = new MazeGenerator_1.default(21, 21);
        this.renderer = new MazeRenderer_1.default(container, tilePrefab, pathFrame, grassFrame, cellSize);
    }
    MazeLogic.prototype.build = function (level) {
        if (level === void 0) { level = 1; }
        this.maze = this.generator.generateMaze(level);
        this.renderer.render(this.maze);
        this.goalPos = { x: 19, y: 19 };
    };
    MazeLogic.prototype.isWalkable = function (x, y) {
        return (x >= 0 && x < 21 &&
            y >= 0 && y < 21 &&
            this.maze[y][x] === 0);
    };
    MazeLogic.prototype.getStartPosition = function () { return { x: 1, y: 1 }; };
    MazeLogic.prototype.getGoalPosition = function () { return this.goalPos; };
    return MazeLogic;
}());
exports.default = MazeLogic;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZUxvZ2ljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQTRDO0FBQzVDLCtDQUEwQztBQUkxQztJQU1FLG1CQUNFLFNBQWtCLEVBQ2xCLFVBQXFCLEVBQ3JCLFNBQXlCLEVBQ3pCLFVBQTBCLEVBQ25CLFFBQWdCO1FBQWhCLGFBQVEsR0FBUixRQUFRLENBQVE7UUFSbEIsU0FBSSxHQUFlLEVBQUUsQ0FBQztRQUNyQixZQUFPLEdBQVksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQVMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksdUJBQWEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLHNCQUFZLENBQzlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLENBQ3ZELENBQUM7SUFDSixDQUFDO0lBRU0seUJBQUssR0FBWixVQUFhLEtBQWlCO1FBQWpCLHNCQUFBLEVBQUEsU0FBaUI7UUFDNUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFTSw4QkFBVSxHQUFqQixVQUFrQixDQUFTLEVBQUUsQ0FBUztRQUNwQyxPQUFPLENBQ0wsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNoQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUN0QixDQUFDO0lBQ0osQ0FBQztJQUVNLG9DQUFnQixHQUF2QixjQUFxQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RELG1DQUFlLEdBQXRCLGNBQXFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDN0QsZ0JBQUM7QUFBRCxDQW5DQSxBQW1DQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hemVHZW5lcmF0b3IgZnJvbSBcIi4vTWF6ZUdlbmVyYXRvclwiO1xuaW1wb3J0IE1hemVSZW5kZXJlciBmcm9tIFwiLi9NYXplUmVuZGVyZXJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHcmlkUG9zIHsgeDogbnVtYmVyOyB5OiBudW1iZXI7IH1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF6ZUxvZ2ljIHtcbiAgcHJpdmF0ZSBnZW5lcmF0b3I6IE1hemVHZW5lcmF0b3I7XG4gIHByaXZhdGUgcmVuZGVyZXI6IE1hemVSZW5kZXJlcjtcbiAgcHVibGljIG1hemU6IG51bWJlcltdW10gPSBbXTtcbiAgcHJpdmF0ZSBnb2FsUG9zOiBHcmlkUG9zID0geyB4OiAxOSwgeTogMTkgfTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBjb250YWluZXI6IGNjLk5vZGUsXG4gICAgdGlsZVByZWZhYjogY2MuUHJlZmFiLFxuICAgIHBhdGhGcmFtZTogY2MuU3ByaXRlRnJhbWUsXG4gICAgZ3Jhc3NGcmFtZTogY2MuU3ByaXRlRnJhbWUsXG4gICAgcHVibGljIGNlbGxTaXplOiBudW1iZXJcbiAgKSB7XG4gICAgdGhpcy5nZW5lcmF0b3IgPSBuZXcgTWF6ZUdlbmVyYXRvcigyMSwgMjEpO1xuICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgTWF6ZVJlbmRlcmVyKFxuICAgICAgY29udGFpbmVyLCB0aWxlUHJlZmFiLCBwYXRoRnJhbWUsIGdyYXNzRnJhbWUsIGNlbGxTaXplXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBidWlsZChsZXZlbDogbnVtYmVyID0gMSkge1xuICAgIHRoaXMubWF6ZSA9IHRoaXMuZ2VuZXJhdG9yLmdlbmVyYXRlTWF6ZShsZXZlbCk7XG4gICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5tYXplKTtcbiAgICB0aGlzLmdvYWxQb3MgPSB7IHg6IDE5LCB5OiAxOSB9O1xuICB9XG5cbiAgcHVibGljIGlzV2Fsa2FibGUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgeCA+PSAwICYmIHggPCAyMSAmJlxuICAgICAgeSA+PSAwICYmIHkgPCAyMSAmJlxuICAgICAgdGhpcy5tYXplW3ldW3hdID09PSAwXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdGFydFBvc2l0aW9uKCk6IEdyaWRQb3MgeyByZXR1cm4geyB4OiAxLCB5OiAxIH07IH1cbiAgcHVibGljIGdldEdvYWxQb3NpdGlvbigpOiBHcmlkUG9zICB7IHJldHVybiB0aGlzLmdvYWxQb3M7IH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazePlayerController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4945dCYaAtPU49aTpTuPF+Z', 'MazePlayerController');
// scripts/Jang/MazePlayerController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// /assets/Scripts/main/PlayerController.ts
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MazeGameData_1 = require("./MazeGameData");
var PlayerController = /** @class */ (function (_super) {
    __extends(PlayerController, _super);
    function PlayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //────────────────────────────────────────
        // ① 시작 위치를 상수로 지정 (필요에 따라 변경)
        _this.START_XY = cc.v2(1, 1);
        //────────────────────────────────────────
        _this.baseX = 0;
        _this.baseY = 0;
        _this.currentGridPos = _this.START_XY.clone();
        _this.isMoving = false;
        _this.movedOnce = false; // 한 번만 이동했는지 체크
        _this.gameOverShown = false; // GameOver UI를 이미 띄웠는지 체크
        _this.drawnPath = [];
        _this.drawingLine = null;
        _this.isDrawing = false;
        _this.visualPathPixels = [];
        _this.pathGrids = [];
        return _this;
    }
    //────────────────────────────────────────
    // ② resetPlayer: 시작 위치(START_XY)로 되돌린 뒤, 상태 초기화
    PlayerController.prototype.resetPlayer = function () {
        this.isMoving = false;
        this.movedOnce = false;
        this.gameOverShown = false;
        this.pathGrids = [];
        this.visualPathPixels = [];
        if (this.drawingLine)
            this.drawingLine.clear();
        this.currentGridPos = this.START_XY.clone();
        this.node.setPosition(this.gridToWorld(this.START_XY));
    };
    //────────────────────────────────────────
    PlayerController.prototype.onLoad = function () {
        this.sprite = this.node.getComponent(cc.Sprite) || this.node.addComponent(cc.Sprite);
        switch (MazeGameData_1.default.playerType) {
            case "tiger":
                this.sprite.spriteFrame = this.tigerFrame;
                break;
            case "dog":
                this.sprite.spriteFrame = this.dogFrame;
                break;
            case "rabbit":
                this.sprite.spriteFrame = this.rabbitFrame;
                break;
            default:
                this.sprite.spriteFrame = this.tigerFrame;
        }
        this.sprite.type = cc.Sprite.Type.SIMPLE;
        this.sprite.sizeMode = cc.Sprite.SizeMode.TRIMMED;
        this.node.setScale(1);
        this.node.setContentSize(50, 50);
        this.node.setAnchorPoint(0.5, 0.5);
        this.node.zIndex = 500;
        var graphicsNode = this.node.parent.getChildByName("PathGraphics");
        if (!graphicsNode) {
            graphicsNode = new cc.Node("PathGraphics");
            this.node.parent.addChild(graphicsNode, 999);
        }
        this.drawingLine = graphicsNode.getComponent(cc.Graphics) || graphicsNode.addComponent(cc.Graphics);
        var inputNode = this.node.parent;
        inputNode.on(cc.Node.EventType.TOUCH_START, this.onDrawStart, this);
        inputNode.on(cc.Node.EventType.TOUCH_MOVE, this.onDrawMove, this);
        inputNode.on(cc.Node.EventType.TOUCH_END, this.onDrawEnd, this);
        inputNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onDrawEnd, this);
        // ── 게임 시작 시, 플레이어를 시작 위치로 배치
    };
    PlayerController.prototype.onDestroy = function () {
        var inputNode = this.node.parent;
        inputNode.off(cc.Node.EventType.TOUCH_START, this.onDrawStart, this);
        inputNode.off(cc.Node.EventType.TOUCH_MOVE, this.onDrawMove, this);
        inputNode.off(cc.Node.EventType.TOUCH_END, this.onDrawEnd, this);
        inputNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onDrawEnd, this);
    };
    PlayerController.prototype.gridToWorld = function (gridPos) {
        var cs = this.mazeLogic.cellSize;
        return cc.v2(this.baseX + gridPos.x * cs + cs / 2, this.baseY + gridPos.y * cs + cs / 2);
    };
    PlayerController.prototype.screenToGrid = function (worldPos) {
        var cs = this.mazeLogic.cellSize;
        var gx = Math.floor((worldPos.x - this.baseX) / cs);
        var gy = Math.floor((worldPos.y - this.baseY) / cs);
        if (gx < 0 || gy < 0 ||
            gx >= this.mazeLogic.maze[0].length ||
            gy >= this.mazeLogic.maze.length) {
            return this.currentGridPos.clone();
        }
        return cc.v2(gx, gy);
    };
    PlayerController.prototype.isValidGrid = function (gridPos) {
        return (gridPos.x >= 0 &&
            gridPos.y >= 0 &&
            gridPos.x < this.mazeLogic.maze[0].length &&
            gridPos.y < this.mazeLogic.maze.length &&
            this.mazeLogic.isWalkable(gridPos.x, gridPos.y));
    };
    PlayerController.prototype.getLinePath = function (from, to) {
        var result = [];
        var x0 = from.x, y0 = from.y, x1 = to.x, y1 = to.y;
        if (x0 === x1) {
            var dir = y1 > y0 ? 1 : -1;
            for (var y = y0 + dir; y !== y1 + dir; y += dir) {
                var next = cc.v2(x0, y);
                if (!this.isValidGrid(next))
                    break;
                result.push(next);
            }
        }
        else if (y0 === y1) {
            var dir = x1 > x0 ? 1 : -1;
            for (var x = x0 + dir; x !== x1 + dir; x += dir) {
                var next = cc.v2(x, y0);
                if (!this.isValidGrid(next))
                    break;
                result.push(next);
            }
        }
        return result;
    };
    PlayerController.prototype.getManhattanPath = function (from, to) {
        var mid1 = cc.v2(to.x, from.y);
        var mid2 = cc.v2(from.x, to.y);
        var firstPath = this.getLinePath(from, mid1).concat(this.getLinePath(mid1, to));
        var secondPath = this.getLinePath(from, mid2).concat(this.getLinePath(mid2, to));
        if (firstPath.length === Math.abs(to.x - from.x) + Math.abs(to.y - from.y))
            return firstPath;
        if (secondPath.length === Math.abs(to.x - from.x) + Math.abs(to.y - from.y))
            return secondPath;
        return [];
    };
    PlayerController.prototype.onDrawStart = function (event) {
        if (!this.mazeLogic)
            return;
        if (this.isMoving)
            return;
        // ── (1) 이미 한 번 이동했거나 GameOver UI가 이미 떴다면 터치 무시
        if (this.movedOnce || this.gameOverShown) {
            return;
        }
        // ── (2) 경로 그리기 초기화
        this.drawingLine.clear();
        this.visualPathPixels = [];
        this.pathGrids = [];
        // ── (3) 터치 위치를 그리드로 계산
        var worldPos = event.getLocation();
        var touchGrid = this.screenToGrid(worldPos);
        // ── (4) “터치한 칸”이 “플레이어가 있는 currentGridPos”와 다르면 리턴
        if (!touchGrid.equals(this.currentGridPos)) {
            return;
        }
        // ── (5) 현재 플레이어 위치 픽셀 좌표 → 첫 점으로 등록
        var startPixel = this.gridToWorld(this.currentGridPos);
        this.visualPathPixels.push(startPixel.clone());
        this.pathGrids.push(this.currentGridPos.clone());
        this.drawingLine.moveTo(startPixel.x, startPixel.y);
    };
    PlayerController.prototype.onDrawMove = function (event) {
        if (this.isMoving)
            return;
        // ── (1) pathGrids가 비어 있거나 이미 GameOver 상태라면 무시
        if (this.pathGrids.length === 0 || this.movedOnce || this.gameOverShown) {
            return;
        }
        var worldPos = event.getLocation();
        var curGrid = this.screenToGrid(worldPos);
        var lastGrid = this.pathGrids[this.pathGrids.length - 1];
        if (this.pathGrids.length === 1 && lastGrid.equals(curGrid)) {
            return;
        }
        if (!lastGrid.equals(curGrid)) {
            var path = this.getManhattanPath(lastGrid, curGrid);
            if (path.length > 0) {
                var _loop_1 = function (cell) {
                    if (!this_1.isValidGrid(cell))
                        return "break";
                    if (this_1.pathGrids.find(function (p) { return p.equals(cell); }))
                        return "continue";
                    this_1.pathGrids.push(cell.clone());
                    var pixel = this_1.gridToWorld(cell);
                    this_1.visualPathPixels.push(pixel.clone());
                    this_1.drawingLine.lineTo(pixel.x, pixel.y);
                    this_1.drawingLine.strokeColor = cc.color(255, 0, 0, 255);
                    this_1.drawingLine.lineWidth = 6;
                    this_1.drawingLine.stroke();
                };
                var this_1 = this;
                for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
                    var cell = path_1[_i];
                    var state_1 = _loop_1(cell);
                    if (state_1 === "break")
                        break;
                }
            }
        }
    };
    PlayerController.prototype.onDrawEnd = function (event) {
        // ── (1) 이미 이동했거나 GameOver 상태라면 무시
        if (this.movedOnce || this.gameOverShown) {
            return;
        }
        // pathGrids가 2칸 이상이면 이동 시작
        if (this.pathGrids.length > 1) {
            this.followPath(__spreadArrays(this.pathGrids));
        }
    };
    // PlayerController.ts (골 감지 → emit만)
    // PlayerController.ts 에서…
    PlayerController.prototype.followPath = function (path) {
        return __awaiter(this, void 0, void 0, function () {
            var goalGrid, i, first, j, p, goUI, canvas;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.isMoving = true;
                        // ── (1) path 그리드 좌표를 월드 좌표(픽셀) 리스트로 변환
                        this.visualPathPixels = path.map(function (cell) { return _this.gridToWorld(cell); });
                        goalGrid = this.mazeLogic.getGoalPosition();
                        i = 1;
                        _a.label = 1;
                    case 1:
                        if (!(i < path.length)) return [3 /*break*/, 4];
                        // ── (2) 한 칸 이동
                        return [4 /*yield*/, this.moveToGrid(path[i])];
                    case 2:
                        // ── (2) 한 칸 이동
                        _a.sent();
                        // ── (3) 이동한 첫 픽셀 제거
                        this.visualPathPixels.shift();
                        // ── (4) 기존 선 모두 지우고, 남은 픽셀만 다시 그리기
                        this.drawingLine.clear();
                        if (this.visualPathPixels.length >= 2) {
                            first = this.visualPathPixels[0];
                            this.drawingLine.moveTo(first.x, first.y);
                            // 나머지
                            for (j = 1; j < this.visualPathPixels.length; j++) {
                                p = this.visualPathPixels[j];
                                this.drawingLine.lineTo(p.x, p.y);
                            }
                            this.drawingLine.strokeColor = cc.color(255, 0, 0, 255);
                            this.drawingLine.lineWidth = 6;
                            this.drawingLine.stroke();
                        }
                        // ── (5) 골 도착 체크 (기존 로직)
                        if (this.currentGridPos.x === goalGrid.x &&
                            this.currentGridPos.y === goalGrid.y) {
                            this.isMoving = false;
                            this.drawingLine.clear();
                            this.pathGrids = [];
                            this.visualPathPixels = [];
                            this.node.emit("playerReachedGoal");
                            return [2 /*return*/];
                        }
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4:
                        // ── (6) 목표 미도달 시 GameOver UI (기존 코드 유지)
                        this.isMoving = false;
                        this.drawingLine.clear();
                        this.pathGrids = [];
                        this.visualPathPixels = [];
                        this.movedOnce = true;
                        if (this.gameOverUIPrefab) {
                            goUI = cc.instantiate(this.gameOverUIPrefab);
                            canvas = cc.find("Canvas");
                            canvas.addChild(goUI);
                            // ② zIndex 설정
                            goUI.zIndex = 1000;
                            // ③ 같은 부모 내 맨 뒤로 보내기
                            goUI.setSiblingIndex(canvas.childrenCount - 1);
                            // ④ 중앙 위치
                            goUI.setPosition(540, 960);
                            this.gameOverShown = true;
                            // // 게임 상태 저장
                            // GameState.lastGameScene = cc.director.getScene().name;
                            // GameState.score = this.score;
                            // GameState.gameId = "remember-game"; // 기억력 게임 고유 식별자
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    PlayerController.prototype.moveToGrid = function (gridPos) {
        var _this = this;
        return new Promise(function (resolve) {
            var target = _this.gridToWorld(gridPos);
            cc.Tween.stopAllByTarget(_this.node);
            cc.tween(_this.node)
                .to(0.12, { x: target.x, y: target.y })
                .call(function () {
                _this.currentGridPos = gridPos.clone();
                resolve();
            })
                .start();
        });
    };
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerController.prototype, "tigerFrame", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerController.prototype, "dogFrame", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerController.prototype, "rabbitFrame", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerController.prototype, "gameOverUIPrefab", void 0);
    PlayerController = __decorate([
        ccclass
    ], PlayerController);
    return PlayerController;
}(cc.Component));
exports.default = PlayerController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZVBsYXllckNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUEyQztBQUNyQyxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUU1QywrQ0FBc0M7QUFJdEM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUFxVUM7UUE3VEMsMENBQTBDO1FBQzFDLDhCQUE4QjtRQUNiLGNBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QywwQ0FBMEM7UUFFbkMsV0FBSyxHQUFXLENBQUMsQ0FBQztRQUNsQixXQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLG9CQUFjLEdBQVksS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUcvQyxjQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGVBQVMsR0FBRyxLQUFLLENBQUMsQ0FBTSxnQkFBZ0I7UUFDeEMsbUJBQWEsR0FBRyxLQUFLLENBQUMsQ0FBRSwwQkFBMEI7UUFHbEQsZUFBUyxHQUFjLEVBQUUsQ0FBQztRQUMxQixpQkFBVyxHQUFnQixJQUFLLENBQUM7UUFDakMsZUFBUyxHQUFZLEtBQUssQ0FBQztRQUMzQixzQkFBZ0IsR0FBYyxFQUFFLENBQUM7UUFDakMsZUFBUyxHQUFjLEVBQUUsQ0FBQzs7SUEwU3BDLENBQUM7SUF4U0MsMENBQTBDO0lBQzFDLGdEQUFnRDtJQUN6QyxzQ0FBVyxHQUFsQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcs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LFdBQVcsQ0FBQztzREFBMkI7SUFDMUI7UUFBekIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7eURBQThCO0lBR2xDO1FBQXBCLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzhEQUE4QjtJQU4vQixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQXFVcEM7SUFBRCx1QkFBQztDQXJVRCxBQXFVQyxDQXJVNkMsRUFBRSxDQUFDLFNBQVMsR0FxVXpEO2tCQXJVb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gL2Fzc2V0cy9TY3JpcHRzL21haW4vUGxheWVyQ29udHJvbGxlci50c1xuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcbmltcG9ydCBNYXplTG9naWMgZnJvbSBcIi4vTWF6ZUxvZ2ljXCI7XG5pbXBvcnQgR2FtZURhdGEgZnJvbSBcIi4vTWF6ZUdhbWVEYXRhXCI7XG5pbXBvcnQgR2FtZVN0YXRlIGZyb20gXCIuLi9Db250cm9sbGVyL0NvbW1vblVJL0dhbWVTdGF0ZVwiO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyQ29udHJvbGxlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gIEBwcm9wZXJ0eShjYy5TcHJpdGVGcmFtZSkgdGlnZXJGcmFtZSE6IGNjLlNwcml0ZUZyYW1lO1xuICBAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpIGRvZ0ZyYW1lITogY2MuU3ByaXRlRnJhbWU7XG4gIEBwcm9wZXJ0eShjYy5TcHJpdGVGcmFtZSkgcmFiYml0RnJhbWUhOiBjYy5TcHJpdGVGcmFtZTtcblxuICAvLyBHYW1lT3ZlciBVSSBQcmVmYWIgKOybkO2VmOyngCDslYrsnLzrqbQg7KO87ISdIOyymOumrClcbiAgQHByb3BlcnR5KGNjLlByZWZhYikgZ2FtZU92ZXJVSVByZWZhYiE6IGNjLlByZWZhYjtcblxuICAvL+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFxuICAvLyDikaAg7Iuc7J6RIOychOy5mOulvCDsg4HsiJjroZwg7KeA7KCVICjtlYTsmpTsl5Ag65Sw6528IOuzgOqyvSlcbiAgcHJpdmF0ZSByZWFkb25seSBTVEFSVF9YWSA9IGNjLnYyKDEsIDEpO1xuICAvL+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFxuXG4gIHB1YmxpYyBiYXNlWDogbnVtYmVyID0gMDtcbiAgcHVibGljIGJhc2VZOiBudW1iZXIgPSAwO1xuICBwdWJsaWMgY3VycmVudEdyaWRQb3M6IGNjLlZlYzIgPSB0aGlzLlNUQVJUX1hZLmNsb25lKCk7XG4gIHB1YmxpYyBtYXplTG9naWMhOiBNYXplTG9naWM7XG5cbiAgcHJpdmF0ZSBpc01vdmluZyA9IGZhbHNlO1xuICBwcml2YXRlIG1vdmVkT25jZSA9IGZhbHNlOyAgICAgIC8vIO2VnCDrsojrp4wg7J2064+Z7ZaI64qU7KeAIOyytO2BrFxuICBwcml2YXRlIGdhbWVPdmVyU2hvd24gPSBmYWxzZTsgIC8vIEdhbWVPdmVyIFVJ66W8IOydtOuvuCDrnYTsm6DripTsp4Ag7LK07YGsXG4gIHByaXZhdGUgc3ByaXRlITogY2MuU3ByaXRlO1xuXG4gIHByaXZhdGUgZHJhd25QYXRoOiBjYy5WZWMyW10gPSBbXTtcbiAgcHJpdmF0ZSBkcmF3aW5nTGluZTogY2MuR3JhcGhpY3MgPSBudWxsITtcbiAgcHJpdmF0ZSBpc0RyYXdpbmc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSB2aXN1YWxQYXRoUGl4ZWxzOiBjYy5WZWMyW10gPSBbXTtcbiAgcHJpdmF0ZSBwYXRoR3JpZHM6IGNjLlZlYzJbXSA9IFtdO1xuXG4gIC8v4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXG4gIC8vIOKRoSByZXNldFBsYXllcjog7Iuc7J6RIOychOy5mChTVEFSVF9YWSnroZwg65CY64+M66awIOuSpCwg7IOB7YOcIOy0iOq4sO2ZlFxuICBwdWJsaWMgcmVzZXRQbGF5ZXIoKSB7XG4gICAgdGhpcy5pc01vdmluZyA9IGZhbHNlO1xuICAgIHRoaXMubW92ZWRPbmNlID0gZmFsc2U7XG4gICAgdGhpcy5nYW1lT3ZlclNob3duID0gZmFsc2U7XG4gICAgdGhpcy5wYXRoR3JpZHMgPSBbXTtcbiAgICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMgPSBbXTtcbiAgICBpZiAodGhpcy5kcmF3aW5nTGluZSkgdGhpcy5kcmF3aW5nTGluZS5jbGVhcigpO1xuXG4gICAgdGhpcy5jdXJyZW50R3JpZFBvcyA9IHRoaXMuU1RBUlRfWFkuY2xvbmUoKTsgXG4gICAgdGhpcy5ub2RlLnNldFBvc2l0aW9uKHRoaXMuZ3JpZFRvV29ybGQodGhpcy5TVEFSVF9YWSkpO1xuICB9XG4gIC8v4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXG5cbiAgb25Mb2FkKCkge1xuICAgIHRoaXMuc3ByaXRlID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5TcHJpdGUpIHx8IHRoaXMubm9kZS5hZGRDb21wb25lbnQoY2MuU3ByaXRlKTtcbiAgICBzd2l0Y2ggKEdhbWVEYXRhLnBsYXllclR5cGUpIHtcbiAgICAgIGNhc2UgXCJ0aWdlclwiOlxuICAgICAgICB0aGlzLnNwcml0ZS5zcHJpdGVGcmFtZSA9IHRoaXMudGlnZXJGcmFtZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZG9nXCI6XG4gICAgICAgIHRoaXMuc3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5kb2dGcmFtZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwicmFiYml0XCI6XG4gICAgICAgIHRoaXMuc3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5yYWJiaXRGcmFtZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLnNwcml0ZS5zcHJpdGVGcmFtZSA9IHRoaXMudGlnZXJGcmFtZTtcbiAgICB9XG4gICAgdGhpcy5zcHJpdGUudHlwZSA9IGNjLlNwcml0ZS5UeXBlLlNJTVBMRTtcbiAgICB0aGlzLnNwcml0ZS5zaXplTW9kZSA9IGNjLlNwcml0ZS5TaXplTW9kZS5UUklNTUVEO1xuICAgIHRoaXMubm9kZS5zZXRTY2FsZSgxKTtcbiAgICB0aGlzLm5vZGUuc2V0Q29udGVudFNpemUoNTAsIDUwKTtcbiAgICB0aGlzLm5vZGUuc2V0QW5jaG9yUG9pbnQoMC41LCAwLjUpO1xuICAgIHRoaXMubm9kZS56SW5kZXggPSA1MDA7XG5cbiAgICBsZXQgZ3JhcGhpY3NOb2RlID0gdGhpcy5ub2RlLnBhcmVudC5nZXRDaGlsZEJ5TmFtZShcIlBhdGhHcmFwaGljc1wiKTtcbiAgICBpZiAoIWdyYXBoaWNzTm9kZSkge1xuICAgICAgZ3JhcGhpY3NOb2RlID0gbmV3IGNjLk5vZGUoXCJQYXRoR3JhcGhpY3NcIik7XG4gICAgICB0aGlzLm5vZGUucGFyZW50LmFkZENoaWxkKGdyYXBoaWNzTm9kZSwgOTk5KTtcbiAgICB9XG4gICAgdGhpcy5kcmF3aW5nTGluZSA9IGdyYXBoaWNzTm9kZS5nZXRDb21wb25lbnQoY2MuR3JhcGhpY3MpIHx8IGdyYXBoaWNzTm9kZS5hZGRDb21wb25lbnQoY2MuR3JhcGhpY3MpO1xuXG4gICAgY29uc3QgaW5wdXROb2RlID0gdGhpcy5ub2RlLnBhcmVudDtcbiAgICBpbnB1dE5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMub25EcmF3U3RhcnQsIHRoaXMpO1xuICAgIGlucHV0Tm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9NT1ZFLCB0aGlzLm9uRHJhd01vdmUsIHRoaXMpO1xuICAgIGlucHV0Tm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsIHRoaXMub25EcmF3RW5kLCB0aGlzKTtcbiAgICBpbnB1dE5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfQ0FOQ0VMLCB0aGlzLm9uRHJhd0VuZCwgdGhpcyk7XG5cbiAgICAvLyDilIDilIAg6rKM7J6EIOyLnOyekSDsi5wsIO2UjOugiOydtOyWtOulvCDsi5zsnpEg7JyE7LmY66GcIOuwsOy5mFxuXG4gIH1cblxuICBvbkRlc3Ryb3koKSB7XG4gICAgY29uc3QgaW5wdXROb2RlID0gdGhpcy5ub2RlLnBhcmVudDtcbiAgICBpbnB1dE5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX1NUQVJULCB0aGlzLm9uRHJhd1N0YXJ0LCB0aGlzKTtcbiAgICBpbnB1dE5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMub25EcmF3TW92ZSwgdGhpcyk7XG4gICAgaW5wdXROb2RlLm9mZihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsIHRoaXMub25EcmF3RW5kLCB0aGlzKTtcbiAgICBpbnB1dE5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0NBTkNFTCwgdGhpcy5vbkRyYXdFbmQsIHRoaXMpO1xuICB9XG5cbiAgcHJpdmF0ZSBncmlkVG9Xb3JsZChncmlkUG9zOiBjYy5WZWMyKTogY2MuVmVjMiB7XG4gICAgY29uc3QgY3MgPSB0aGlzLm1hemVMb2dpYy5jZWxsU2l6ZTtcbiAgICByZXR1cm4gY2MudjIoXG4gICAgICB0aGlzLmJhc2VYICsgZ3JpZFBvcy54ICogY3MgKyBjcyAvIDIsXG4gICAgICB0aGlzLmJhc2VZICsgZ3JpZFBvcy55ICogY3MgKyBjcyAvIDJcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBzY3JlZW5Ub0dyaWQod29ybGRQb3M6IGNjLlZlYzIpOiBjYy5WZWMyIHtcbiAgICBjb25zdCBjcyA9IHRoaXMubWF6ZUxvZ2ljLmNlbGxTaXplO1xuICAgIGNvbnN0IGd4ID0gTWF0aC5mbG9vcigod29ybGRQb3MueCAtIHRoaXMuYmFzZVgpIC8gY3MpO1xuICAgIGNvbnN0IGd5ID0gTWF0aC5mbG9vcigod29ybGRQb3MueSAtIHRoaXMuYmFzZVkpIC8gY3MpO1xuXG4gICAgaWYgKFxuICAgICAgZ3ggPCAwIHx8IGd5IDwgMCB8fFxuICAgICAgZ3ggPj0gdGhpcy5tYXplTG9naWMubWF6ZVswXS5sZW5ndGggfHxcbiAgICAgIGd5ID49IHRoaXMubWF6ZUxvZ2ljLm1hemUubGVuZ3RoXG4gICAgKSB7XG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50R3JpZFBvcy5jbG9uZSgpO1xuICAgIH1cbiAgICByZXR1cm4gY2MudjIoZ3gsIGd5KTtcbiAgfVxuXG4gIHByaXZhdGUgaXNWYWxpZEdyaWQoZ3JpZFBvczogY2MuVmVjMik6IGJvb2xlYW4ge1xuICAgIHJldHVybiAoXG4gICAgICBncmlkUG9zLnggPj0gMCAmJlxuICAgICAgZ3JpZFBvcy55ID49IDAgJiZcbiAgICAgIGdyaWRQb3MueCA8IHRoaXMubWF6ZUxvZ2ljLm1hemVbMF0ubGVuZ3RoICYmXG4gICAgICBncmlkUG9zLnkgPCB0aGlzLm1hemVMb2dpYy5tYXplLmxlbmd0aCAmJlxuICAgICAgdGhpcy5tYXplTG9naWMuaXNXYWxrYWJsZShncmlkUG9zLngsIGdyaWRQb3MueSlcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRMaW5lUGF0aChmcm9tOiBjYy5WZWMyLCB0bzogY2MuVmVjMik6IGNjLlZlYzJbXSB7XG4gICAgbGV0IHJlc3VsdDogY2MuVmVjMltdID0gW107XG4gICAgbGV0IHgwID0gZnJvbS54LCB5MCA9IGZyb20ueSwgeDEgPSB0by54LCB5MSA9IHRvLnk7XG4gICAgaWYgKHgwID09PSB4MSkge1xuICAgICAgbGV0IGRpciA9IHkxID4geTAgPyAxIDogLTE7XG4gICAgICBmb3IgKGxldCB5ID0geTAgKyBkaXI7IHkgIT09IHkxICsgZGlyOyB5ICs9IGRpcikge1xuICAgICAgICBsZXQgbmV4dCA9IGNjLnYyKHgwLCB5KTtcbiAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWRHcmlkKG5leHQpKSBicmVhaztcbiAgICAgICAgcmVzdWx0LnB1c2gobmV4dCk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHkwID09PSB5MSkge1xuICAgICAgbGV0IGRpciA9IHgxID4geDAgPyAxIDogLTE7XG4gICAgICBmb3IgKGxldCB4ID0geDAgKyBkaXI7IHggIT09IHgxICsgZGlyOyB4ICs9IGRpcikge1xuICAgICAgICBsZXQgbmV4dCA9IGNjLnYyKHgsIHkwKTtcbiAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWRHcmlkKG5leHQpKSBicmVhaztcbiAgICAgICAgcmVzdWx0LnB1c2gobmV4dCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBwcml2YXRlIGdldE1hbmhhdHRhblBhdGgoZnJvbTogY2MuVmVjMiwgdG86IGNjLlZlYzIpOiBjYy5WZWMyW10ge1xuICAgIGxldCBtaWQxID0gY2MudjIodG8ueCwgZnJvbS55KTtcbiAgICBsZXQgbWlkMiA9IGNjLnYyKGZyb20ueCwgdG8ueSk7XG5cbiAgICBsZXQgZmlyc3RQYXRoID0gdGhpcy5nZXRMaW5lUGF0aChmcm9tLCBtaWQxKS5jb25jYXQodGhpcy5nZXRMaW5lUGF0aChtaWQxLCB0bykpO1xuICAgIGxldCBzZWNvbmRQYXRoID0gdGhpcy5nZXRMaW5lUGF0aChmcm9tLCBtaWQyKS5jb25jYXQodGhpcy5nZXRMaW5lUGF0aChtaWQyLCB0bykpO1xuXG4gICAgaWYgKGZpcnN0UGF0aC5sZW5ndGggPT09IE1hdGguYWJzKHRvLnggLSBmcm9tLngpICsgTWF0aC5hYnModG8ueSAtIGZyb20ueSkpIHJldHVybiBmaXJzdFBhdGg7XG4gICAgaWYgKHNlY29uZFBhdGgubGVuZ3RoID09PSBNYXRoLmFicyh0by54IC0gZnJvbS54KSArIE1hdGguYWJzKHRvLnkgLSBmcm9tLnkpKSByZXR1cm4gc2Vjb25kUGF0aDtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBwcml2YXRlIG9uRHJhd1N0YXJ0KGV2ZW50OiBjYy5FdmVudC5FdmVudFRvdWNoKSB7XG4gICAgaWYgKCF0aGlzLm1hemVMb2dpYykgcmV0dXJuO1xuICAgIGlmICh0aGlzLmlzTW92aW5nKSByZXR1cm47XG5cbiAgICAvLyDilIDilIAgKDEpIOydtOuvuCDtlZwg67KIIOydtOuPme2WiOqxsOuCmCBHYW1lT3ZlciBVSeqwgCDsnbTrr7gg65a064uk66m0IO2EsOy5mCDrrLTsi5xcbiAgICBpZiAodGhpcy5tb3ZlZE9uY2UgfHwgdGhpcy5nYW1lT3ZlclNob3duKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8g4pSA4pSAICgyKSDqsr3roZwg6re466as6riwIOy0iOq4sO2ZlFxuICAgIHRoaXMuZHJhd2luZ0xpbmUuY2xlYXIoKTtcbiAgICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMgPSBbXTtcbiAgICB0aGlzLnBhdGhHcmlkcyA9IFtdO1xuXG4gICAgLy8g4pSA4pSAICgzKSDthLDsuZgg7JyE7LmY66W8IOq3uOumrOuTnOuhnCDqs4TsgrBcbiAgICBjb25zdCB3b3JsZFBvcyA9IGV2ZW50LmdldExvY2F0aW9uKCk7XG4gICAgY29uc3QgdG91Y2hHcmlkID0gdGhpcy5zY3JlZW5Ub0dyaWQod29ybGRQb3MpO1xuXG4gICAgLy8g4pSA4pSAICg0KSDigJzthLDsuZjtlZwg7Lm44oCd7J20IOKAnO2UjOugiOydtOyWtOqwgCDsnojripQgY3VycmVudEdyaWRQb3PigJ3smYAg64uk66W066m0IOumrO2EtFxuICAgIGlmICghdG91Y2hHcmlkLmVxdWFscyh0aGlzLmN1cnJlbnRHcmlkUG9zKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIOKUgOKUgCAoNSkg7ZiE7J6sIO2UjOugiOydtOyWtCDsnITsuZgg7ZS97IWAIOyijO2RnCDihpIg7LKrIOygkOycvOuhnCDrk7HroZ1cbiAgICBjb25zdCBzdGFydFBpeGVsID0gdGhpcy5ncmlkVG9Xb3JsZCh0aGlzLmN1cnJlbnRHcmlkUG9zKTtcbiAgICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMucHVzaChzdGFydFBpeGVsLmNsb25lKCkpO1xuICAgIHRoaXMucGF0aEdyaWRzLnB1c2godGhpcy5jdXJyZW50R3JpZFBvcy5jbG9uZSgpKTtcbiAgICB0aGlzLmRyYXdpbmdMaW5lLm1vdmVUbyhzdGFydFBpeGVsLngsIHN0YXJ0UGl4ZWwueSk7XG4gIH1cblxuICBwcml2YXRlIG9uRHJhd01vdmUoZXZlbnQ6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcbiAgICBpZiAodGhpcy5pc01vdmluZykgcmV0dXJuO1xuXG4gICAgLy8g4pSA4pSAICgxKSBwYXRoR3JpZHPqsIAg67mE7Ja0IOyeiOqxsOuCmCDsnbTrr7ggR2FtZU92ZXIg7IOB7YOc652866m0IOustOyLnFxuICAgIGlmICh0aGlzLnBhdGhHcmlkcy5sZW5ndGggPT09IDAgfHwgdGhpcy5tb3ZlZE9uY2UgfHwgdGhpcy5nYW1lT3ZlclNob3duKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgd29ybGRQb3MgPSBldmVudC5nZXRMb2NhdGlvbigpO1xuICAgIGNvbnN0IGN1ckdyaWQgPSB0aGlzLnNjcmVlblRvR3JpZCh3b3JsZFBvcyk7XG4gICAgY29uc3QgbGFzdEdyaWQgPSB0aGlzLnBhdGhHcmlkc1t0aGlzLnBhdGhHcmlkcy5sZW5ndGggLSAxXTtcblxuICAgIGlmICh0aGlzLnBhdGhHcmlkcy5sZW5ndGggPT09IDEgJiYgbGFzdEdyaWQuZXF1YWxzKGN1ckdyaWQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFsYXN0R3JpZC5lcXVhbHMoY3VyR3JpZCkpIHtcbiAgICAgIGNvbnN0IHBhdGggPSB0aGlzLmdldE1hbmhhdHRhblBhdGgobGFzdEdyaWQsIGN1ckdyaWQpO1xuICAgICAgaWYgKHBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGxldCBjZWxsIG9mIHBhdGgpIHtcbiAgICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZEdyaWQoY2VsbCkpIGJyZWFrO1xuICAgICAgICAgIGlmICh0aGlzLnBhdGhHcmlkcy5maW5kKHAgPT4gcC5lcXVhbHMoY2VsbCkpKSBjb250aW51ZTtcbiAgICAgICAgICB0aGlzLnBhdGhHcmlkcy5wdXNoKGNlbGwuY2xvbmUoKSk7XG4gICAgICAgICAgY29uc3QgcGl4ZWwgPSB0aGlzLmdyaWRUb1dvcmxkKGNlbGwpO1xuICAgICAgICAgIHRoaXMudmlzdWFsUGF0aFBpeGVscy5wdXNoKHBpeGVsLmNsb25lKCkpO1xuICAgICAgICAgIHRoaXMuZHJhd2luZ0xpbmUubGluZVRvKHBpeGVsLngsIHBpeGVsLnkpO1xuICAgICAgICAgIHRoaXMuZHJhd2luZ0xpbmUuc3Ryb2tlQ29sb3IgPSBjYy5jb2xvcigyNTUsIDAsIDAsIDI1NSk7XG4gICAgICAgICAgdGhpcy5kcmF3aW5nTGluZS5saW5lV2lkdGggPSA2O1xuICAgICAgICAgIHRoaXMuZHJhd2luZ0xpbmUuc3Ryb2tlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIG9uRHJhd0VuZChldmVudDogY2MuRXZlbnQuRXZlbnRUb3VjaCkge1xuICAgIC8vIOKUgOKUgCAoMSkg7J2066+4IOydtOuPme2WiOqxsOuCmCBHYW1lT3ZlciDsg4Htg5zrnbzrqbQg66y07IucXG4gICAgaWYgKHRoaXMubW92ZWRPbmNlIHx8IHRoaXMuZ2FtZU92ZXJTaG93bikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIHBhdGhHcmlkc+qwgCAy7Lm4IOydtOyDgeydtOuptCDsnbTrj5kg7Iuc7J6RXG4gICAgaWYgKHRoaXMucGF0aEdyaWRzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMuZm9sbG93UGF0aChbLi4udGhpcy5wYXRoR3JpZHNdKTtcbiAgICB9XG4gIH1cblxuIC8vIFBsYXllckNvbnRyb2xsZXIudHMgKOqzqCDqsJDsp4Ag4oaSIGVtaXTrp4wpXG4vLyBQbGF5ZXJDb250cm9sbGVyLnRzIOyXkOyEnOKAplxucHJpdmF0ZSBhc3luYyBmb2xsb3dQYXRoKHBhdGg6IGNjLlZlYzJbXSkge1xuICB0aGlzLmlzTW92aW5nID0gdHJ1ZTtcblxuICAvLyDilIDilIAgKDEpIHBhdGgg6re466as65OcIOyijO2RnOulvCDsm5Trk5wg7KKM7ZGcKO2UveyFgCkg66as7Iqk7Yq466GcIOuzgO2ZmFxuICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMgPSBwYXRoLm1hcChjZWxsID0+IHRoaXMuZ3JpZFRvV29ybGQoY2VsbCkpO1xuXG4gIGNvbnN0IGdvYWxHcmlkID0gdGhpcy5tYXplTG9naWMuZ2V0R29hbFBvc2l0aW9uKCk7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIC8vIOKUgOKUgCAoMikg7ZWcIOy5uCDsnbTrj5lcbiAgICBhd2FpdCB0aGlzLm1vdmVUb0dyaWQocGF0aFtpXSk7XG5cbiAgICAvLyDilIDilIAgKDMpIOydtOuPme2VnCDssqsg7ZS97IWAIOygnOqxsFxuICAgIHRoaXMudmlzdWFsUGF0aFBpeGVscy5zaGlmdCgpO1xuXG4gICAgLy8g4pSA4pSAICg0KSDquLDsobQg7ISgIOuqqOuRkCDsp4DsmrDqs6AsIOuCqOydgCDtlL3shYDrp4wg64uk7IucIOq3uOumrOq4sFxuICAgIHRoaXMuZHJhd2luZ0xpbmUuY2xlYXIoKTtcbiAgICBpZiAodGhpcy52aXN1YWxQYXRoUGl4ZWxzLmxlbmd0aCA+PSAyKSB7XG4gICAgICAvLyDsi5zsnpHsoJBcbiAgICAgIGNvbnN0IGZpcnN0ID0gdGhpcy52aXN1YWxQYXRoUGl4ZWxzWzBdO1xuICAgICAgdGhpcy5kcmF3aW5nTGluZS5tb3ZlVG8oZmlyc3QueCwgZmlyc3QueSk7XG4gICAgICAvLyDrgpjrqLjsp4BcbiAgICAgIGZvciAobGV0IGogPSAxOyBqIDwgdGhpcy52aXN1YWxQYXRoUGl4ZWxzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGNvbnN0IHAgPSB0aGlzLnZpc3VhbFBhdGhQaXhlbHNbal07XG4gICAgICAgIHRoaXMuZHJhd2luZ0xpbmUubGluZVRvKHAueCwgcC55KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZHJhd2luZ0xpbmUuc3Ryb2tlQ29sb3IgPSBjYy5jb2xvcigyNTUsIDAsIDAsIDI1NSk7XG4gICAgICB0aGlzLmRyYXdpbmdMaW5lLmxpbmVXaWR0aCA9IDY7XG4gICAgICB0aGlzLmRyYXdpbmdMaW5lLnN0cm9rZSgpO1xuICAgIH1cblxuICAgIC8vIOKUgOKUgCAoNSkg6rOoIOuPhOywqSDssrTtgawgKOq4sOyhtCDroZzsp4EpXG4gICAgaWYgKFxuICAgICAgdGhpcy5jdXJyZW50R3JpZFBvcy54ID09PSBnb2FsR3JpZC54ICYmXG4gICAgICB0aGlzLmN1cnJlbnRHcmlkUG9zLnkgPT09IGdvYWxHcmlkLnlcbiAgICApIHtcbiAgICAgIHRoaXMuaXNNb3ZpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuZHJhd2luZ0xpbmUuY2xlYXIoKTtcbiAgICAgIHRoaXMucGF0aEdyaWRzID0gW107XG4gICAgICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMgPSBbXTtcbiAgICAgIHRoaXMubm9kZS5lbWl0KFwicGxheWVyUmVhY2hlZEdvYWxcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgLy8g4pSA4pSAICg2KSDrqqntkZwg66+464+E64usIOyLnCBHYW1lT3ZlciBVSSAo6riw7KG0IOy9lOuTnCDsnKDsp4ApXG4gIHRoaXMuaXNNb3ZpbmcgPSBmYWxzZTtcbiAgdGhpcy5kcmF3aW5nTGluZS5jbGVhcigpO1xuICB0aGlzLnBhdGhHcmlkcyA9IFtdO1xuICB0aGlzLnZpc3VhbFBhdGhQaXhlbHMgPSBbXTtcbiAgdGhpcy5tb3ZlZE9uY2UgPSB0cnVlO1xuICBpZiAodGhpcy5nYW1lT3ZlclVJUHJlZmFiKSB7XG4gIGNvbnN0IGdvVUkgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmdhbWVPdmVyVUlQcmVmYWIpO1xuXG4gIC8vIOKRoCBDYW52YXPsl5Ag67aZ7J206riwXG4gIGNvbnN0IGNhbnZhcyA9IGNjLmZpbmQoXCJDYW52YXNcIik7XG4gIGNhbnZhcy5hZGRDaGlsZChnb1VJKTtcblxuICAvLyDikaEgekluZGV4IOyEpOyglVxuICBnb1VJLnpJbmRleCA9IDEwMDA7XG4gIC8vIOKRoiDqsJnsnYAg67aA66qoIOuCtCDrp6gg65Kk66GcIOuztOuCtOq4sFxuICBnb1VJLnNldFNpYmxpbmdJbmRleChjYW52YXMuY2hpbGRyZW5Db3VudCAtIDEpO1xuXG4gIC8vIOKRoyDspJHslZkg7JyE7LmYXG4gIGdvVUkuc2V0UG9zaXRpb24oNTQwLCA5NjApO1xuXG4gIHRoaXMuZ2FtZU92ZXJTaG93biA9IHRydWU7XG4gICAgICAgICAgLy8gLy8g6rKM7J6EIOyDge2DnCDsoIDsnqVcbiAgICAgICAgICAvLyBHYW1lU3RhdGUubGFzdEdhbWVTY2VuZSA9IGNjLmRpcmVjdG9yLmdldFNjZW5lKCkubmFtZTtcbiAgICAgICAgICAvLyBHYW1lU3RhdGUuc2NvcmUgPSB0aGlzLnNjb3JlO1xuICAgICAgICAgIC8vIEdhbWVTdGF0ZS5nYW1lSWQgPSBcInJlbWVtYmVyLWdhbWVcIjsgLy8g6riw7Ja166ClIOqyjOyehCDqs6DsnKAg7Iud67OE7J6QXG59XG59XG5cblxuXG5cbiAgcHJpdmF0ZSBtb3ZlVG9HcmlkKGdyaWRQb3M6IGNjLlZlYzIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmdyaWRUb1dvcmxkKGdyaWRQb3MpO1xuICAgICAgY2MuVHdlZW4uc3RvcEFsbEJ5VGFyZ2V0KHRoaXMubm9kZSk7XG4gICAgICBjYy50d2Vlbih0aGlzLm5vZGUpXG4gICAgICAgIC50bygwLjEyLCB7IHg6IHRhcmdldC54LCB5OiB0YXJnZXQueSB9KVxuICAgICAgICAuY2FsbCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5jdXJyZW50R3JpZFBvcyA9IGdyaWRQb3MuY2xvbmUoKTtcbiAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeUIManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cec73N5ZjNJQYlYwuo3Uml1', 'MazeUIManager');
// scripts/Jang/MazeUIManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MazeUIManager = /** @class */ (function (_super) {
    __extends(MazeUIManager, _super);
    function MazeUIManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timerPrefab = null;
        _this.scorePrefab = null;
        _this.backBtn = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        return _this;
    }
    MazeUIManager.prototype.onLoad = function () {
        // Timer 프리팹 인스턴스화 + TimerLabel 연결
        if (this.timerPrefab) {
            var timerNode = cc.instantiate(this.timerPrefab);
            this.node.addChild(timerNode);
            var timerLabelNode = timerNode.getChildByName("TimerLabel");
            if (timerLabelNode) {
                this.timerLabel = timerLabelNode.getComponent(cc.Label);
            }
            if (!this.timerLabel) {
                console.warn("⚠️ TimerLabel 연결 실패! 프리팹 구조 또는 노드 이름 확인 필요.");
            }
        }
        // Score 프리팹 인스턴스화 + ScoreLabel 연결
        if (this.scorePrefab) {
            var scoreNode = cc.instantiate(this.scorePrefab);
            this.node.addChild(scoreNode);
            var scoreLabelNode = scoreNode.getChildByName("ScoreLabel");
            if (scoreLabelNode) {
                this.scoreLabel = scoreLabelNode.getComponent(cc.Label);
            }
            if (!this.scoreLabel) {
                console.warn("⚠️ ScoreLabel 연결 실패! 프리팹 구조 또는 노드 이름 확인 필요.");
            }
        }
        // 뒤로 가기 버튼
        if (this.backBtn) {
            this.backBtn.on("click", function () {
                cc.director.loadScene("SingleGameList");
            });
        }
    };
    MazeUIManager.prototype.setTimer = function (time) {
        if (this.timerLabel) {
            this.timerLabel.string = "" + Math.ceil(time);
        }
    };
    MazeUIManager.prototype.setScore = function (score) {
        if (this.scoreLabel) {
            this.scoreLabel.string = "" + score;
        }
    };
    __decorate([
        property(cc.Prefab)
    ], MazeUIManager.prototype, "timerPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], MazeUIManager.prototype, "scorePrefab", void 0);
    __decorate([
        property(cc.Node)
    ], MazeUIManager.prototype, "backBtn", void 0);
    MazeUIManager = __decorate([
        ccclass
    ], MazeUIManager);
    return MazeUIManager;
}(cc.Component));
exports.default = MazeUIManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZVVJTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUEyQyxpQ0FBWTtJQUF2RDtRQUFBLHFFQTBEQztRQXpEc0IsaUJBQVcsR0FBYyxJQUFJLENBQUM7UUFDOUIsaUJBQVcsR0FBYyxJQUFJLENBQUM7UUFDaEMsYUFBTyxHQUFZLElBQUksQ0FBQztRQUVuQyxnQkFBVSxHQUFhLElBQUksQ0FBQztRQUM1QixnQkFBVSxHQUFhLElBQUksQ0FBQzs7SUFvRHRDLENBQUM7SUFsREMsOEJBQU0sR0FBTjtRQUNFLGtDQUFrQztRQUNsQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7WUFFOUIsSUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM5RCxJQUFJLGNBQWMsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN6RDtZQUVELElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNwQixPQUFPLENBQUMsSUFBSSxDQUFDLDZDQUE2QyxDQUFDLENBQUM7YUFDN0Q7U0FDRjtRQUVELGtDQUFrQztRQUNsQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7WUFFOUIsSUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM5RCxJQUFJLGNBQWMsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN6RDtZQUVELElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNwQixPQUFPLENBQUMsSUFBSSxDQUFDLDZDQUE2QyxDQUFDLENBQUM7YUFDN0Q7U0FDRjtRQUVELFdBQVc7UUFDWCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFO2dCQUN2QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQzFDLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRU0sZ0NBQVEsR0FBZixVQUFnQixJQUFZO1FBQzFCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxLQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFHLENBQUM7U0FDL0M7SUFDSCxDQUFDO0lBRU0sZ0NBQVEsR0FBZixVQUFnQixLQUFhO1FBQzNCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxLQUFHLEtBQU8sQ0FBQztTQUNyQztJQUNILENBQUM7SUF4RG9CO1FBQXBCLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3NEQUErQjtJQUM5QjtRQUFwQixRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztzREFBK0I7SUFDaEM7UUFBbEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7a0RBQXlCO0lBSHhCLGFBQWE7UUFEakMsT0FBTztPQUNhLGFBQWEsQ0EwRGpDO0lBQUQsb0JBQUM7Q0ExREQsQUEwREMsQ0ExRDBDLEVBQUUsQ0FBQyxTQUFTLEdBMER0RDtrQkExRG9CLGFBQWEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF6ZVVJTWFuYWdlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gIEBwcm9wZXJ0eShjYy5QcmVmYWIpIHRpbWVyUHJlZmFiOiBjYy5QcmVmYWIgPSBudWxsO1xuICBAcHJvcGVydHkoY2MuUHJlZmFiKSBzY29yZVByZWZhYjogY2MuUHJlZmFiID0gbnVsbDtcbiAgQHByb3BlcnR5KGNjLk5vZGUpIGJhY2tCdG46IGNjLk5vZGUgPSBudWxsO1xuXG4gIHByaXZhdGUgdGltZXJMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xuICBwcml2YXRlIHNjb3JlTGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcblxuICBvbkxvYWQoKSB7XG4gICAgLy8gVGltZXIg7ZSE66as7Yy5IOyduOyKpO2EtOyKpO2ZlCArIFRpbWVyTGFiZWwg7Jew6rKwXG4gICAgaWYgKHRoaXMudGltZXJQcmVmYWIpIHtcbiAgICAgIGNvbnN0IHRpbWVyTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMudGltZXJQcmVmYWIpO1xuICAgICAgdGhpcy5ub2RlLmFkZENoaWxkKHRpbWVyTm9kZSk7XG5cbiAgICAgIGNvbnN0IHRpbWVyTGFiZWxOb2RlID0gdGltZXJOb2RlLmdldENoaWxkQnlOYW1lKFwiVGltZXJMYWJlbFwiKTtcbiAgICAgIGlmICh0aW1lckxhYmVsTm9kZSkge1xuICAgICAgICB0aGlzLnRpbWVyTGFiZWwgPSB0aW1lckxhYmVsTm9kZS5nZXRDb21wb25lbnQoY2MuTGFiZWwpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMudGltZXJMYWJlbCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCLimqDvuI8gVGltZXJMYWJlbCDsl7DqsrAg7Iuk7YyoISDtlITrpqztjLkg6rWs7KGwIOuYkOuKlCDrhbjrk5wg7J2066aEIO2ZleyduCDtlYTsmpQuXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFNjb3JlIO2UhOumrO2MuSDsnbjsiqTthLTsiqTtmZQgKyBTY29yZUxhYmVsIOyXsOqysFxuICAgIGlmICh0aGlzLnNjb3JlUHJlZmFiKSB7XG4gICAgICBjb25zdCBzY29yZU5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLnNjb3JlUHJlZmFiKTtcbiAgICAgIHRoaXMubm9kZS5hZGRDaGlsZChzY29yZU5vZGUpO1xuXG4gICAgICBjb25zdCBzY29yZUxhYmVsTm9kZSA9IHNjb3JlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIlNjb3JlTGFiZWxcIik7XG4gICAgICBpZiAoc2NvcmVMYWJlbE5vZGUpIHtcbiAgICAgICAgdGhpcy5zY29yZUxhYmVsID0gc2NvcmVMYWJlbE5vZGUuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnNjb3JlTGFiZWwpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwi4pqg77iPIFNjb3JlTGFiZWwg7Jew6rKwIOyLpO2MqCEg7ZSE66as7Yy5IOq1rOyhsCDrmJDripQg64W465OcIOydtOumhCDtmZXsnbgg7ZWE7JqULlwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDrkqTroZwg6rCA6riwIOuyhO2KvFxuICAgIGlmICh0aGlzLmJhY2tCdG4pIHtcbiAgICAgIHRoaXMuYmFja0J0bi5vbihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU2luZ2xlR2FtZUxpc3RcIik7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc2V0VGltZXIodGltZTogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMudGltZXJMYWJlbCkge1xuICAgICAgdGhpcy50aW1lckxhYmVsLnN0cmluZyA9IGAke01hdGguY2VpbCh0aW1lKX1gO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzZXRTY29yZShzY29yZTogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMuc2NvcmVMYWJlbCkge1xuICAgICAgdGhpcy5zY29yZUxhYmVsLnN0cmluZyA9IGAke3Njb3JlfWA7XG4gICAgfVxuICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeRenderer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e8d69E0+upFJJC6bMelP2BM', 'MazeRenderer');
// scripts/Jang/MazeRenderer.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MazeRenderer = /** @class */ (function () {
    function MazeRenderer(container, tilePrefab, pathFrame, grassFrame, cellSize) {
        this.container = container;
        this.tilePrefab = tilePrefab;
        this.pathFrame = pathFrame;
        this.grassFrame = grassFrame;
        this.cellSize = cellSize;
    }
    MazeRenderer.prototype.render = function (maze) {
        this.container.removeAllChildren();
        var rows = maze.length, cols = maze[0].length;
        for (var y = 0; y < rows; y++) {
            for (var x = 0; x < cols; x++) {
                var node = cc.instantiate(this.tilePrefab);
                node.setPosition(cc.v2(x * this.cellSize + this.cellSize / 2, y * this.cellSize + this.cellSize / 2));
                node.setContentSize(this.cellSize, this.cellSize);
                var sp = node.getComponent(cc.Sprite);
                sp.type = cc.Sprite.Type.SIMPLE;
                sp.spriteFrame = maze[y][x] === 0 ? this.pathFrame : this.grassFrame;
                this.container.addChild(node);
            }
        }
    };
    return MazeRenderer;
}());
exports.default = MazeRenderer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZVJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFDRSxzQkFDVSxTQUFrQixFQUNsQixVQUFxQixFQUNyQixTQUF5QixFQUN6QixVQUEwQixFQUMxQixRQUFnQjtRQUpoQixjQUFTLEdBQVQsU0FBUyxDQUFTO1FBQ2xCLGVBQVUsR0FBVixVQUFVLENBQVc7UUFDckIsY0FBUyxHQUFULFNBQVMsQ0FBZ0I7UUFDekIsZUFBVSxHQUFWLFVBQVUsQ0FBZ0I7UUFDMUIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtJQUN2QixDQUFDO0lBRUcsNkJBQU0sR0FBYixVQUFjLElBQWdCO1FBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUNuQyxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ2hELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDN0IsSUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQzdDLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDNUIsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQ3JDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUN0QyxDQUFDLENBQUM7Z0JBQ0ssSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbEQsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFFLENBQUM7Z0JBQ3pDLEVBQUUsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO2dCQUNoQyxFQUFFLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQ3JFLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQy9CO1NBQ0Y7SUFDSCxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQTNCQSxBQTJCQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF6ZVJlbmRlcmVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjb250YWluZXI6IGNjLk5vZGUsXG4gICAgcHJpdmF0ZSB0aWxlUHJlZmFiOiBjYy5QcmVmYWIsXG4gICAgcHJpdmF0ZSBwYXRoRnJhbWU6IGNjLlNwcml0ZUZyYW1lLFxuICAgIHByaXZhdGUgZ3Jhc3NGcmFtZTogY2MuU3ByaXRlRnJhbWUsXG4gICAgcHJpdmF0ZSBjZWxsU2l6ZTogbnVtYmVyXG4gICkge31cblxuICBwdWJsaWMgcmVuZGVyKG1hemU6IG51bWJlcltdW10pIHtcbiAgICB0aGlzLmNvbnRhaW5lci5yZW1vdmVBbGxDaGlsZHJlbigpO1xuICAgIGNvbnN0IHJvd3MgPSBtYXplLmxlbmd0aCwgY29scyA9IG1hemVbMF0ubGVuZ3RoO1xuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgcm93czsgeSsrKSB7XG4gICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IGNvbHM7IHgrKykge1xuICAgICAgICBjb25zdCBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy50aWxlUHJlZmFiKTtcbiAgICAgICAgbm9kZS5zZXRQb3NpdGlvbihjYy52MihcbiAgeCAqIHRoaXMuY2VsbFNpemUgKyB0aGlzLmNlbGxTaXplIC8gMixcbiAgeSAqIHRoaXMuY2VsbFNpemUgKyB0aGlzLmNlbGxTaXplIC8gMlxuKSk7XG4gICAgICAgIG5vZGUuc2V0Q29udGVudFNpemUodGhpcy5jZWxsU2l6ZSwgdGhpcy5jZWxsU2l6ZSk7XG4gICAgICAgIGNvbnN0IHNwID0gbm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKSE7XG4gICAgICAgIHNwLnR5cGUgPSBjYy5TcHJpdGUuVHlwZS5TSU1QTEU7XG4gICAgICAgIHNwLnNwcml0ZUZyYW1lID0gbWF6ZVt5XVt4XSA9PT0gMCA/IHRoaXMucGF0aEZyYW1lIDogdGhpcy5ncmFzc0ZyYW1lO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGRDaGlsZChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/Maze_explainSceneManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3ce4bjAkZFBSr8F4aGIbGs9', 'Maze_explainSceneManager');
// scripts/Jang/Maze_explainSceneManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// /assets/Scripts/main/MainMenuManager.ts
var MazeGameData_1 = require("./MazeGameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MainMenuManager = /** @class */ (function (_super) {
    __extends(MainMenuManager, _super);
    function MainMenuManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.BackButton = null;
        return _this;
    }
    MainMenuManager.prototype.start = function () {
        MazeGameData_1.default.currentLevel = 1;
        this.startBtn.on("click", function () { return cc.director.loadScene("MazeSingleScene"); });
    };
    MainMenuManager.prototype.onClickList = function () {
        cc.log("뒤로가기 버튼 클릭됨. SingleGameList 씬으로 이동.");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], MainMenuManager.prototype, "BackButton", void 0);
    __decorate([
        property(cc.Node)
    ], MainMenuManager.prototype, "startBtn", void 0);
    MainMenuManager = __decorate([
        ccclass
    ], MainMenuManager);
    return MainMenuManager;
}(cc.Component));
exports.default = MainMenuManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZV9leHBsYWluU2NlbmVNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDBDQUEwQztBQUMxQywrQ0FBc0M7QUFDaEMsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBNkMsbUNBQVk7SUFBekQ7UUFBQSxxRUFjQztRQVpDLGdCQUFVLEdBQWMsSUFBSSxDQUFDOztJQVkvQixDQUFDO0lBVEMsK0JBQUssR0FBTDtRQUNFLHNCQUFRLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsY0FBSyxPQUFBLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLEVBQXhDLENBQXdDLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQscUNBQVcsR0FBWDtRQUNBLEVBQUUsQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUM5QyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFYSDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3VEQUNTO0lBQ1Y7UUFBbEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7cURBQW9CO0lBSG5CLGVBQWU7UUFEbkMsT0FBTztPQUNhLGVBQWUsQ0FjbkM7SUFBRCxzQkFBQztDQWRELEFBY0MsQ0FkNEMsRUFBRSxDQUFDLFNBQVMsR0FjeEQ7a0JBZG9CLGVBQWUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvYXNzZXRzL1NjcmlwdHMvbWFpbi9NYWluTWVudU1hbmFnZXIudHNcbmltcG9ydCBHYW1lRGF0YSBmcm9tIFwiLi9NYXplR2FtZURhdGFcIjtcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluTWVudU1hbmFnZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICBAcHJvcGVydHkoY2MuQnV0dG9uKVxuICBCYWNrQnV0dG9uOiBjYy5CdXR0b24gPSBudWxsO1xuICBAcHJvcGVydHkoY2MuTm9kZSkgc3RhcnRCdG4hOiBjYy5Ob2RlO1xuXG4gIHN0YXJ0KCkge1xuICAgIEdhbWVEYXRhLmN1cnJlbnRMZXZlbCA9IDE7XG4gICAgdGhpcy5zdGFydEJ0bi5vbihcImNsaWNrXCIsICgpPT4gY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiTWF6ZVNpbmdsZVNjZW5lXCIpKTtcbiAgfVxuXG4gIG9uQ2xpY2tMaXN0KCkge1xuICBjYy5sb2coXCLrkqTroZzqsIDquLAg67KE7Yq8IO2BtOumreuQqC4gU2luZ2xlR2FtZUxpc3Qg7JSs7Jy866GcIOydtOuPmS5cIik7XG4gIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeGameData.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '40194f0OxFJo7xjtjiZh/ac', 'MazeGameData');
// scripts/Jang/MazeGameData.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../Controller/CommonUI/GameState");
var GameData = /** @class */ (function () {
    function GameData() {
    }
    Object.defineProperty(GameData, "playerType", {
        // GameState.character와 항상 연동!
        get: function () {
            // "tiger", "dog", "rabbit" 이외 값이 오면 "tiger"로 fallback
            if (GameState_1.default && (GameState_1.default.character === "tiger" || GameState_1.default.character === "dog" || GameState_1.default.character === "rabbit")) {
                return GameState_1.default.character;
            }
            return "tiger";
        },
        set: function (value) {
            if (GameState_1.default)
                GameState_1.default.character = value;
        },
        enumerable: false,
        configurable: true
    });
    GameData.addScore = function (level) {
        this.score += 10;
    };
    GameData.resetScore = function () {
        this.score = 0;
    };
    GameData.currentLevel = 1;
    GameData.score = 0;
    return GameData;
}());
exports.default = GameData;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZUdhbWVEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOERBQXlEO0FBRXpEO0lBQUE7SUF3QkEsQ0FBQztJQW5CQyxzQkFBVyxzQkFBVTtRQURyQiw4QkFBOEI7YUFDOUI7WUFDRSxzREFBc0Q7WUFDdEQsSUFBSSxtQkFBUyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxTQUFTLEtBQUssT0FBTyxJQUFJLG1CQUFTLENBQUMsU0FBUyxLQUFLLEtBQUssSUFBSSxtQkFBUyxDQUFDLFNBQVMsS0FBSyxRQUFRLENBQUMsRUFBRTtnQkFDdkgsT0FBTyxtQkFBUyxDQUFDLFNBQXVDLENBQUM7YUFDMUQ7WUFDRCxPQUFPLE9BQU8sQ0FBQztRQUNqQixDQUFDO2FBRUQsVUFBc0IsS0FBaUM7WUFDckQsSUFBSSxtQkFBUztnQkFBRSxtQkFBUyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDN0MsQ0FBQzs7O09BSkE7SUFNYSxpQkFBUSxHQUF0QixVQUF1QixLQUFhO1FBQ2xDLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFYSxtQkFBVSxHQUF4QjtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUF0QmEscUJBQVksR0FBVyxDQUFDLENBQUM7SUFDekIsY0FBSyxHQUFXLENBQUMsQ0FBQztJQXNCbEMsZUFBQztDQXhCRCxBQXdCQyxJQUFBO2tCQXhCb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lU3RhdGUgZnJvbSBcIi4uL0NvbnRyb2xsZXIvQ29tbW9uVUkvR2FtZVN0YXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVEYXRhIHtcbiAgcHVibGljIHN0YXRpYyBjdXJyZW50TGV2ZWw6IG51bWJlciA9IDE7XG4gIHB1YmxpYyBzdGF0aWMgc2NvcmU6IG51bWJlciA9IDA7XG5cbiAgLy8gR2FtZVN0YXRlLmNoYXJhY3RlcuyZgCDtla3sg4Eg7Jew64+ZIVxuICBzdGF0aWMgZ2V0IHBsYXllclR5cGUoKTogXCJ0aWdlclwiIHwgXCJkb2dcIiB8IFwicmFiYml0XCIge1xuICAgIC8vIFwidGlnZXJcIiwgXCJkb2dcIiwgXCJyYWJiaXRcIiDsnbTsmbgg6rCS7J20IOyYpOuptCBcInRpZ2VyXCLroZwgZmFsbGJhY2tcbiAgICBpZiAoR2FtZVN0YXRlICYmIChHYW1lU3RhdGUuY2hhcmFjdGVyID09PSBcInRpZ2VyXCIgfHwgR2FtZVN0YXRlLmNoYXJhY3RlciA9PT0gXCJkb2dcIiB8fCBHYW1lU3RhdGUuY2hhcmFjdGVyID09PSBcInJhYmJpdFwiKSkge1xuICAgICAgcmV0dXJuIEdhbWVTdGF0ZS5jaGFyYWN0ZXIgYXMgXCJ0aWdlclwiIHwgXCJkb2dcIiB8IFwicmFiYml0XCI7XG4gICAgfVxuICAgIHJldHVybiBcInRpZ2VyXCI7XG4gIH1cblxuICBzdGF0aWMgc2V0IHBsYXllclR5cGUodmFsdWU6IFwidGlnZXJcIiB8IFwiZG9nXCIgfCBcInJhYmJpdFwiKSB7XG4gICAgaWYgKEdhbWVTdGF0ZSkgR2FtZVN0YXRlLmNoYXJhY3RlciA9IHZhbHVlO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBhZGRTY29yZShsZXZlbDogbnVtYmVyKSB7XG4gICAgdGhpcy5zY29yZSArPSAxMDtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgcmVzZXRTY29yZSgpIHtcbiAgICB0aGlzLnNjb3JlID0gMDtcbiAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/MainMenuScene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8ce8fHZrg9NhKJ4PqiMsmMT', 'MainMenuScene');
// scripts/Controller/CommonUI/MainMenuScene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameState_1 = require("../CommonUI/GameState");
var MainMenu = /** @class */ (function (_super) {
    __extends(MainMenu, _super);
    function MainMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.singleButton = null;
        _this.multiButton = null;
        _this.myPageButton = null;
        return _this;
    }
    MainMenu.prototype.onLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            var urlParams, incomingRoomId, jwtToken, browserId, res, result, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        urlParams = new URLSearchParams(window.location.search);
                        incomingRoomId = urlParams.get("roomId");
                        jwtToken = localStorage.getItem('jwtToken');
                        browserId = localStorage.getItem('browserId');
                        // 1. 초대 링크 감지 시
                        if (incomingRoomId) {
                            cc.log("초대 링크 감지 roomId:", incomingRoomId);
                            // 로그인 안됨 → pendingRoomId 저장 후 LoginScene으로 이동
                            if (!jwtToken || !browserId) {
                                cc.warn("로그인 안됨 → 로그인 후 복귀를 위해 roomId 저장");
                                localStorage.setItem("pendingRoomId", incomingRoomId);
                                // URL에서 roomId 쿼리 제거 (중복 이동 방지)
                                history.replaceState(null, '', window.location.pathname);
                                cc.director.loadScene("LoginScene");
                                return [2 /*return*/];
                            }
                            // 이미 로그인 상태 → 바로 PlayerConnect로 이동 (url에 roomId 쿼리 제거)
                            history.replaceState(null, '', window.location.pathname);
                            GameState_1.default.incomingRoomId = incomingRoomId;
                            GameState_1.default.isHost = false; // 게스트 입장
                            cc.director.loadScene("PlayerConnect");
                            return [2 /*return*/];
                        }
                        // 2. 일반 로그인 상태 체크
                        if (!jwtToken || !browserId) {
                            cc.warn('토큰 또는 브라우저 ID 없음 → 로그인으로 이동');
                            cc.director.loadScene('LoginScene');
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, fetch('https://smartzoo.shop/auth/verify-token', {
                                method: 'POST',
                                headers: { 'Authorization': "Bearer " + jwtToken }
                            })];
                    case 2:
                        res = _a.sent();
                        return [4 /*yield*/, res.json()];
                    case 3:
                        result = _a.sent();
                        if (!res.ok || !result.success) {
                            cc.warn("유효하지 않은 토큰. 로그인으로 리다이렉트");
                            localStorage.removeItem("jwtToken");
                            cc.director.loadScene("LoginScene");
                            return [2 /*return*/];
                        }
                        cc.log("토큰 검증 완료");
                        this.registerButtonEvents(this.singleButton.node, this.onClickSingle.bind(this));
                        this.registerButtonEvents(this.multiButton.node, this.onClickMulti.bind(this));
                        this.registerButtonEvents(this.myPageButton.node, this.onClickMyPage.bind(this));
                        return [3 /*break*/, 5];
                    case 4:
                        err_1 = _a.sent();
                        cc.error("서버 통신 오류 → 로그인으로 이동", err_1);
                        cc.director.loadScene("LoginScene");
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    MainMenu.prototype.registerButtonEvents = function (node, callback) {
        cc.log("버튼 이벤트 등록:", node.name);
        node.on(cc.Node.EventType.TOUCH_END, callback);
        node.on(cc.Node.EventType.MOUSE_DOWN, callback);
    };
    MainMenu.prototype.onClickSingle = function () {
        cc.log("싱글 게임 버튼 클릭됨. SingleGameList 씬으로 이동.");
        cc.director.loadScene("SingleGameList");
    };
    MainMenu.prototype.onClickMulti = function () {
        cc.log("onClickMulti 호출됨");
        GameState_1.default.isHost = true;
        cc.log("isHost 설정됨:", GameState_1.default.isHost);
        cc.director.loadScene("MultiWatingPage");
    };
    MainMenu.prototype.onClickMyPage = function () {
        cc.log("마이페이지 버튼 클릭됨. MyInfo 씬으로 이동.");
        cc.director.loadScene("MyInfo");
    };
    MainMenu.prototype.onClickLogin = function () {
        cc.log("뒤로가기 버튼 클릭됨. Login 씬으로 이동.");
        cc.director.loadScene("LoginScene");
    };
    __decorate([
        property(cc.Button)
    ], MainMenu.prototype, "singleButton", void 0);
    __decorate([
        property(cc.Button)
    ], MainMenu.prototype, "multiButton", void 0);
    __decorate([
        property(cc.Button)
    ], MainMenu.prototype, "myPageButton", void 0);
    MainMenu = __decorate([
        ccclass
    ], MainMenu);
    return MainMenu;
}(cc.Component));
exports.default = MainMenu;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/GameStartOverlay.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9b1daoSAMZL+45oEwkf5kb7', 'GameStartOverlay');
// scripts/Controller/CommonUI/GameStartOverlay.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameStartOverlay = /** @class */ (function (_super) {
    __extends(GameStartOverlay, _super);
    function GameStartOverlay() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.letterContainer = null; // GameRow + StartRow 포함하는 부모
        return _this;
    }
    GameStartOverlay.prototype.onLoad = function () {
        this.playDropAnimations();
    };
    GameStartOverlay.prototype.playDropAnimations = function () {
        var _this = this;
        var gameRow = this.letterContainer.getChildByName("GameRow");
        var startRow = this.letterContainer.getChildByName("StartRow");
        if (!gameRow || !startRow) {
            console.warn("GameRow 또는 StartRow 노드를 찾을 수 없습니다.");
            return;
        }
        this.animateLetterRow(gameRow.children, 0);
        this.animateLetterRow(startRow.children, 0.5); // 0.5초 딜레이로 START 등장
        var totalDelay = gameRow.children.length * 0.1 + startRow.children.length * 0.1 + 1;
        this.scheduleOnce(function () {
            cc.tween(_this.node)
                .to(0.5, { opacity: 0 })
                .call(function () { return _this.node.destroy(); })
                .start();
        }, totalDelay);
    };
    GameStartOverlay.prototype.animateLetterRow = function (letters, delayOffset) {
        letters.forEach(function (letterNode, index) {
            letterNode.opacity = 0;
            letterNode.setPosition(letterNode.x, 100); // 위에서 시작
            cc.tween(letterNode)
                .delay(delayOffset + index * 0.1)
                .to(0.25, { position: cc.v3(letterNode.x, 0), opacity: 255 }, { easing: "backOut" })
                .start();
        });
    };
    __decorate([
        property(cc.Node)
    ], GameStartOverlay.prototype, "letterContainer", void 0);
    GameStartOverlay = __decorate([
        ccclass
    ], GameStartOverlay);
    return GameStartOverlay;
}(cc.Component));
exports.default = GameStartOverlay;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcQ29tbW9uVUlcXEdhbWVTdGFydE92ZXJsYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUF5Q0M7UUF2Q0cscUJBQWUsR0FBWSxJQUFJLENBQUMsQ0FBQyw2QkFBNkI7O0lBdUNsRSxDQUFDO0lBckNHLGlDQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQsNkNBQWtCLEdBQWxCO1FBQUEsaUJBb0JDO1FBbkJHLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9ELElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRWpFLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDdkIsT0FBTyxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ25ELE9BQU87U0FDVjtRQUVELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMscUJBQXFCO1FBRXBFLElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBRXRGLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDZCxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUM7aUJBQ2QsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztpQkFDdkIsSUFBSSxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFuQixDQUFtQixDQUFDO2lCQUMvQixLQUFLLEVBQUUsQ0FBQztRQUNqQixDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVELDJDQUFnQixHQUFoQixVQUFpQixPQUFrQixFQUFFLFdBQW1CO1FBQ3BELE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBQyxVQUFVLEVBQUUsS0FBSztZQUM5QixVQUFVLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztZQUN2QixVQUFVLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxTQUFTO1lBRXBELEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO2lCQUNmLEtBQUssQ0FBQyxXQUFXLEdBQUcsS0FBSyxHQUFHLEdBQUcsQ0FBQztpQkFDaEMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxDQUFDO2lCQUNuRixLQUFLLEVBQUUsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUF0Q0Q7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzs2REFDYztJQUZmLGdCQUFnQjtRQURwQyxPQUFPO09BQ2EsZ0JBQWdCLENBeUNwQztJQUFELHVCQUFDO0NBekNELEFBeUNDLENBekM2QyxFQUFFLENBQUMsU0FBUyxHQXlDekQ7a0JBekNvQixnQkFBZ0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVN0YXJ0T3ZlcmxheSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgbGV0dGVyQ29udGFpbmVyOiBjYy5Ob2RlID0gbnVsbDsgLy8gR2FtZVJvdyArIFN0YXJ0Um93IO2PrO2VqO2VmOuKlCDrtoDrqqhcblxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgdGhpcy5wbGF5RHJvcEFuaW1hdGlvbnMoKTtcbiAgICB9XG5cbiAgICBwbGF5RHJvcEFuaW1hdGlvbnMoKSB7XG4gICAgICAgIGNvbnN0IGdhbWVSb3cgPSB0aGlzLmxldHRlckNvbnRhaW5lci5nZXRDaGlsZEJ5TmFtZShcIkdhbWVSb3dcIik7XG4gICAgICAgIGNvbnN0IHN0YXJ0Um93ID0gdGhpcy5sZXR0ZXJDb250YWluZXIuZ2V0Q2hpbGRCeU5hbWUoXCJTdGFydFJvd1wiKTtcblxuICAgICAgICBpZiAoIWdhbWVSb3cgfHwgIXN0YXJ0Um93KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJHYW1lUm93IOuYkOuKlCBTdGFydFJvdyDrhbjrk5zrpbwg7LC+7J2EIOyImCDsl4bsirXri4jri6QuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hbmltYXRlTGV0dGVyUm93KGdhbWVSb3cuY2hpbGRyZW4sIDApO1xuICAgICAgICB0aGlzLmFuaW1hdGVMZXR0ZXJSb3coc3RhcnRSb3cuY2hpbGRyZW4sIDAuNSk7IC8vIDAuNey0iCDrlJzroIjsnbTroZwgU1RBUlQg65Ox7J6lXG5cbiAgICAgICAgY29uc3QgdG90YWxEZWxheSA9IGdhbWVSb3cuY2hpbGRyZW4ubGVuZ3RoICogMC4xICsgc3RhcnRSb3cuY2hpbGRyZW4ubGVuZ3RoICogMC4xICsgMTtcblxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSgoKSA9PiB7XG4gICAgICAgICAgICBjYy50d2Vlbih0aGlzLm5vZGUpXG4gICAgICAgICAgICAgICAgLnRvKDAuNSwgeyBvcGFjaXR5OiAwIH0pXG4gICAgICAgICAgICAgICAgLmNhbGwoKCkgPT4gdGhpcy5ub2RlLmRlc3Ryb3koKSlcbiAgICAgICAgICAgICAgICAuc3RhcnQoKTtcbiAgICAgICAgfSwgdG90YWxEZWxheSk7XG4gICAgfVxuXG4gICAgYW5pbWF0ZUxldHRlclJvdyhsZXR0ZXJzOiBjYy5Ob2RlW10sIGRlbGF5T2Zmc2V0OiBudW1iZXIpIHtcbiAgICAgICAgbGV0dGVycy5mb3JFYWNoKChsZXR0ZXJOb2RlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgbGV0dGVyTm9kZS5vcGFjaXR5ID0gMDtcbiAgICAgICAgICAgIGxldHRlck5vZGUuc2V0UG9zaXRpb24obGV0dGVyTm9kZS54LCAxMDApOyAvLyDsnITsl5DshJwg7Iuc7J6RXG5cbiAgICAgICAgICAgIGNjLnR3ZWVuKGxldHRlck5vZGUpXG4gICAgICAgICAgICAgICAgLmRlbGF5KGRlbGF5T2Zmc2V0ICsgaW5kZXggKiAwLjEpXG4gICAgICAgICAgICAgICAgLnRvKDAuMjUsIHsgcG9zaXRpb246IGNjLnYzKGxldHRlck5vZGUueCwgMCksIG9wYWNpdHk6IDI1NSB9LCB7IGVhc2luZzogXCJiYWNrT3V0XCIgfSlcbiAgICAgICAgICAgICAgICAuc3RhcnQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Multi/MultiGameResult.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2ecb8zIzdRBcYYC0CX8D7P7', 'MultiGameResult');
// scripts/Controller/Multi/MultiGameResult.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiGameResult = /** @class */ (function (_super) {
    __extends(MultiGameResult, _super);
    function MultiGameResult() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.NameLabel = null;
        _this.ScoreLabel = null;
        _this.VictoryCharacter = null;
        _this.BackButton = null;
        return _this;
    }
    MultiGameResult.prototype.start = function () {
        var _this = this;
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        if (!roomId) {
            cc.warn("roomId 없음");
            return;
        }
        fetch("https://smartzoo.shop/multi/game/result/" + roomId)
            .then(function (res) { return res.json(); })
            .then(function (data) {
            var _a;
            if (data.success && ((_a = data.data) === null || _a === void 0 ? void 0 : _a.winner) && !data.data.winner.isTie) {
                var winner = data.data.winner;
                cc.log("승자 정보:", winner);
                // 닉네임 및 점수 표시
                _this.NameLabel.string = winner.nickname || "???";
                _this.ScoreLabel.string = winner.score + "\uC810";
                // 캐릭터 이미지 로딩
                _this.setCharacterSprite(winner.character);
            }
            else {
                cc.warn("승자 없음 또는 무승부");
                _this.NameLabel.string = "무승부";
                _this.ScoreLabel.string = "";
            }
        })
            .catch(function (err) {
            cc.error("결과 API 오류:", err);
        });
    };
    MultiGameResult.prototype.setCharacterSprite = function (characterKey) {
        var _this = this;
        var path = "Images/Common/characters/" + characterKey;
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            if (!err && spriteFrame) {
                _this.VictoryCharacter.spriteFrame = spriteFrame;
            }
            else {
                cc.warn("캐릭터 이미지 로딩 실패:", path);
            }
        });
    };
    MultiGameResult.prototype.onClickBack = function () {
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        var playerId = GameState_1.default.browserId;
        // 멀티방에서 나가기
        if (window.socket && roomId && playerId) {
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        // 상태 초기화 및 메인 이동
        cc.sys.localStorage.removeItem("isHost");
        GameState_1.default.resetMultiplay();
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Label)
    ], MultiGameResult.prototype, "NameLabel", void 0);
    __decorate([
        property(cc.Label)
    ], MultiGameResult.prototype, "ScoreLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], MultiGameResult.prototype, "VictoryCharacter", void 0);
    __decorate([
        property(cc.Button)
    ], MultiGameResult.prototype, "BackButton", void 0);
    MultiGameResult = __decorate([
        ccclass
    ], MultiGameResult);
    return MultiGameResult;
}(cc.Component));
exports.default = MultiGameResult;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcTXVsdGlcXE11bHRpR2FtZVJlc3VsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBOEM7QUFFeEMsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBNkMsbUNBQVk7SUFBekQ7UUFBQSxxRUFzRUM7UUFuRUcsZUFBUyxHQUFhLElBQUksQ0FBQztRQUczQixnQkFBVSxHQUFhLElBQUksQ0FBQztRQUc1QixzQkFBZ0IsR0FBYyxJQUFJLENBQUM7UUFHbkMsZ0JBQVUsR0FBYyxJQUFJLENBQUM7O0lBMERqQyxDQUFDO0lBeERHLCtCQUFLLEdBQUw7UUFBQSxpQkE0QkM7UUEzQkcsSUFBTSxNQUFNLEdBQUcsbUJBQVMsQ0FBQyxhQUFhLElBQUksbUJBQVMsQ0FBQyxjQUFjLENBQUM7UUFDbkUsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNULEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDckIsT0FBTztTQUNWO1FBQ0QsS0FBSyxDQUFDLDZDQUEyQyxNQUFRLENBQUM7YUFDckQsSUFBSSxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxDQUFDLElBQUksRUFBRSxFQUFWLENBQVUsQ0FBQzthQUN2QixJQUFJLENBQUMsVUFBQSxJQUFJOztZQUNOLElBQUksSUFBSSxDQUFDLE9BQU8sV0FBSSxJQUFJLENBQUMsSUFBSSwwQ0FBRSxNQUFNLENBQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRTtnQkFDOUQsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7Z0JBQ2hDLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUV6QixjQUFjO2dCQUNkLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDO2dCQUNqRCxLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBTSxNQUFNLENBQUMsS0FBSyxXQUFHLENBQUM7Z0JBRTVDLGFBQWE7Z0JBQ2IsS0FBSSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUM3QztpQkFBTTtnQkFDSCxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUN4QixLQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7Z0JBQzlCLEtBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQzthQUMvQjtRQUNMLENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxVQUFBLEdBQUc7WUFDTixFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCw0Q0FBa0IsR0FBbEIsVUFBbUIsWUFBb0I7UUFBdkMsaUJBU0M7UUFSRyxJQUFNLElBQUksR0FBRyw4QkFBNEIsWUFBYyxDQUFDO1FBQ3hELEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQUMsR0FBRyxFQUFFLFdBQVc7WUFDckQsSUFBSSxDQUFDLEdBQUcsSUFBSSxXQUFXLEVBQUU7Z0JBQ3JCLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO2FBQ25EO2lCQUFNO2dCQUNILEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDbkM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFHRCxxQ0FBVyxHQUFYO1FBQ0ksSUFBTSxNQUFNLEdBQUcsbUJBQVMsQ0FBQyxhQUFhLElBQUksbUJBQVMsQ0FBQyxjQUFjLENBQUM7UUFDbkUsSUFBTSxRQUFRLEdBQUcsbUJBQVMsQ0FBQyxTQUFTLENBQUM7UUFFckMsWUFBWTtRQUNaLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLElBQUksUUFBUSxFQUFFO1lBQ3JDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxFQUFFLE1BQU0sUUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLENBQUMsQ0FBQztTQUMxRDtRQUVELGlCQUFpQjtRQUNqQixFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekMsbUJBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMzQixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBbEVEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7c0RBQ1E7SUFHM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt1REFDUztJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzZEQUNlO0lBR25DO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7dURBQ1M7SUFaWixlQUFlO1FBRG5DLE9BQU87T0FDYSxlQUFlLENBc0VuQztJQUFELHNCQUFDO0NBdEVELEFBc0VDLENBdEU0QyxFQUFFLENBQUMsU0FBUyxHQXNFeEQ7a0JBdEVvQixlQUFlIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVTdGF0ZSBmcm9tIFwiLi4vQ29tbW9uVUkvR2FtZVN0YXRlXCI7XG5cbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNdWx0aUdhbWVSZXN1bHQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIE5hbWVMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIFNjb3JlTGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXG4gICAgVmljdG9yeUNoYXJhY3RlcjogY2MuU3ByaXRlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgQmFja0J1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIHN0YXJ0KCkge1xuICAgICAgICBjb25zdCByb29tSWQgPSBHYW1lU3RhdGUuY3JlYXRlZFJvb21JZCB8fCBHYW1lU3RhdGUuaW5jb21pbmdSb29tSWQ7XG4gICAgICAgIGlmICghcm9vbUlkKSB7XG4gICAgICAgICAgICBjYy53YXJuKFwicm9vbUlkIOyXhuydjFwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9zbWFydHpvby5zaG9wL211bHRpL2dhbWUvcmVzdWx0LyR7cm9vbUlkfWApXG4gICAgICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MgJiYgZGF0YS5kYXRhPy53aW5uZXIgJiYgIWRhdGEuZGF0YS53aW5uZXIuaXNUaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2lubmVyID0gZGF0YS5kYXRhLndpbm5lcjtcbiAgICAgICAgICAgICAgICAgICAgY2MubG9nKFwi7Iq57J6QIOygleuztDpcIiwgd2lubmVyKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyDri4nrhKTsnoQg67CPIOygkOyImCDtkZzsi5xcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5OYW1lTGFiZWwuc3RyaW5nID0gd2lubmVyLm5pY2tuYW1lIHx8IFwiPz8/XCI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2NvcmVMYWJlbC5zdHJpbmcgPSBgJHt3aW5uZXIuc2NvcmV97KCQYDtcblxuICAgICAgICAgICAgICAgICAgICAvLyDsupDrpq3thLAg7J2066+47KeAIOuhnOuUqVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENoYXJhY3RlclNwcml0ZSh3aW5uZXIuY2hhcmFjdGVyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjYy53YXJuKFwi7Iq57J6QIOyXhuydjCDrmJDripQg66y07Iq567aAXCIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLk5hbWVMYWJlbC5zdHJpbmcgPSBcIuustOyKueu2gFwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLlNjb3JlTGFiZWwuc3RyaW5nID0gXCJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY2MuZXJyb3IoXCLqsrDqs7wgQVBJIOyYpOulmDpcIiwgZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIHNldENoYXJhY3RlclNwcml0ZShjaGFyYWN0ZXJLZXk6IHN0cmluZykge1xuICAgICAgICBjb25zdCBwYXRoID0gYEltYWdlcy9Db21tb24vY2hhcmFjdGVycy8ke2NoYXJhY3RlcktleX1gO1xuICAgICAgICBjYy5yZXNvdXJjZXMubG9hZChwYXRoLCBjYy5TcHJpdGVGcmFtZSwgKGVyciwgc3ByaXRlRnJhbWUpID0+IHtcbiAgICAgICAgICAgIGlmICghZXJyICYmIHNwcml0ZUZyYW1lKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5WaWN0b3J5Q2hhcmFjdGVyLnNwcml0ZUZyYW1lID0gc3ByaXRlRnJhbWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNjLndhcm4oXCLsupDrpq3thLAg7J2066+47KeAIOuhnOuUqSDsi6TtjKg6XCIsIHBhdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBcbiAgICBvbkNsaWNrQmFjaygpIHtcbiAgICAgICAgY29uc3Qgcm9vbUlkID0gR2FtZVN0YXRlLmNyZWF0ZWRSb29tSWQgfHwgR2FtZVN0YXRlLmluY29taW5nUm9vbUlkO1xuICAgICAgICBjb25zdCBwbGF5ZXJJZCA9IEdhbWVTdGF0ZS5icm93c2VySWQ7XG5cbiAgICAgICAgLy8g66mA7Yuw67Cp7JeQ7IScIOuCmOqwgOq4sFxuICAgICAgICBpZiAod2luZG93LnNvY2tldCAmJiByb29tSWQgJiYgcGxheWVySWQpIHtcbiAgICAgICAgICAgIHdpbmRvdy5zb2NrZXQuZW1pdChcImxlYXZlLXJvb21cIiwgeyByb29tSWQsIHBsYXllcklkIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g7IOB7YOcIOy0iOq4sO2ZlCDrsI8g66mU7J24IOydtOuPmVxuICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJpc0hvc3RcIik7XG4gICAgICAgIEdhbWVTdGF0ZS5yZXNldE11bHRpcGxheSgpO1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJNYWluU2NlbmVcIik7XG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeSingleGameManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4f092SlID9Pt5Qa8xNU9wGe', 'MazeSingleGameManager');
// scripts/Jang/MazeSingleGameManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// /assets/Scripts/main/GameManager.ts
var MazeGameData_1 = require("./MazeGameData");
var MazeLogic_1 = require("./MazeLogic");
var MazePlayerController_1 = require("./MazePlayerController");
var MazeUIManager_1 = require("./MazeUIManager");
var GameState_1 = require("../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameManager = /** @class */ (function (_super) {
    __extends(GameManager, _super);
    function GameManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeRem = 30;
        _this.gameOver = false;
        // ─ 골 도착을 별도로 표시할 플래그 추가 ─
        _this.isGoalReached = false;
        return _this;
        // 4) (필요하다면) 아직 골도 안 닿았고, 시간도 남은 상태에서 추가 로직...
    }
    GameManager.prototype.debugSetLevel = function (lv) {
        this._startLevel(lv);
    };
    GameManager.prototype.debugSetTime = function (t) {
        this.timeRem = t;
        if (this.uiMgr)
            this.uiMgr.setTimer(this.timeRem);
    };
    GameManager.prototype.onLoad = function () {
        var _this = this;
        this.node.on("nextLevel", function () { return _this._startLevel(MazeGameData_1.default.currentLevel + 1); });
        // 이제는 이벤트 리스너를 비워 두거나 아예 지워도 무방합니다.
        this.playerCtrl.node.on("playerReachedGoal", function () {
            // 아무 코드도 없으므로, 골 도달 시에는 여기서 아무런 처리를 하지 않습니다.
        }, this);
    };
    GameManager.prototype.start = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        if (this.gameStartOverlayPrefab) {
            var startOverlay_1 = cc.instantiate(this.gameStartOverlayPrefab);
            // ❌ 지우기
            // this.node.addChild(startOverlay);
            // ✅ Canvas에만 붙이기
            var canvas = cc.find("Canvas");
            canvas.addChild(startOverlay_1);
            // zIndex 설정
            startOverlay_1.zIndex = 1000;
            // 같은 부모 내 맨 뒤로 보내기
            startOverlay_1.setSiblingIndex(canvas.childrenCount - 1);
            startOverlay_1.setPosition(540, 960);
            var anim = startOverlay_1.getComponent(cc.Animation);
            if (anim) {
                anim.play("GameStartFade");
                anim.once(cc.Animation.EventType.FINISHED, function () {
                    startOverlay_1.destroy();
                    _this.startGameLogic();
                }, this);
            }
            else {
                this.scheduleOnce(function () {
                    startOverlay_1.destroy();
                    _this.startGameLogic();
                }, 1.5);
            }
        }
        else {
            this.startGameLogic();
        }
        window.GM = this;
    };
    GameManager.prototype.startGameLogic = function () {
        // 매 게임 시작 시, score를 0으로 재설정
        this.uiMgr.setScore(0);
        MazeGameData_1.default.score = 0;
        // MazeLogic 인스턴스 생성 & 할당
        this.logic = new MazeLogic_1.default(this.mazeContainer, this.tilePrefab, this.pathFrame, this.grassFrame, 50);
        this.playerCtrl.mazeLogic = this.logic;
        // 골 도착 플래그 초기화
        this.isGoalReached = false;
        this.gameOver = false;
        // currentLevel 그대로 사용(최초에는 1)
        this._startLevel(MazeGameData_1.default.currentLevel);
    };
    GameManager.prototype._startLevel = function (lv) {
        MazeGameData_1.default.currentLevel = lv;
        this.timeRem = 30;
        this.gameOver = false;
        this.isGoalReached = false; // 레벨 시작할 때마다 초기화
        // 21×21 고정
        this.logic = new MazeLogic_1.default(this.mazeContainer, this.tilePrefab, this.pathFrame, this.grassFrame, 50);
        this.playerCtrl.mazeLogic = this.logic;
        this.logic.build(lv);
        var cs = this.logic.cellSize;
        var cols = this.logic.maze[0].length;
        var rows = this.logic.maze.length;
        var baseX = (1080 - cols * cs) / 2;
        var baseY = (1920 - rows * cs) / 2;
        this.mazeContainer.setPosition(baseX, baseY);
        this.playerCtrl.baseX = baseX;
        this.playerCtrl.baseY = baseY;
        // ─ 플레이어 완전 초기화: resetPlayer 호출
        this.playerCtrl.resetPlayer();
        // ─ 실제 시작 좌표로 덮어쓰기
        var st = this.logic.getStartPosition();
        this.playerCtrl.currentGridPos = cc.v2(st.x, st.y);
        this.playerCtrl.node.setPosition(baseX + st.x * cs + cs / 2, baseY + st.y * cs + cs / 2);
        // ─ 목표 스프라이트 설정 & 배치
        var goalSprite;
        switch (MazeGameData_1.default.playerType) {
            case "tiger":
                goalSprite = this.goalSongpyeon;
                break;
            case "dog":
                goalSprite = this.goalBone;
                break;
            case "rabbit":
                goalSprite = this.goalCarrot;
                break;
            default:
                goalSprite = this.goalSongpyeon;
                break;
        }
        var sp = this.goalNode.getComponent(cc.Sprite);
        if (!sp)
            sp = this.goalNode.addComponent(cc.Sprite);
        sp.type = cc.Sprite.Type.SIMPLE;
        sp.sizeMode = cc.Sprite.SizeMode.CUSTOM;
        this.goalNode.setContentSize(cs, cs);
        this.goalNode.zIndex = 500;
        sp.spriteFrame = goalSprite;
        var go = this.logic.getGoalPosition();
        this.goalNode.setPosition(cc.v2(baseX + go.x * cs + cs / 2, baseY + go.y * cs + cs / 2));
        // UI 타이머 초기화
        this.uiMgr.setTimer(this.timeRem);
        // UI 점수(이전 레벨에서 더해진 점수)가 있다면 표시
        this.uiMgr.setScore(MazeGameData_1.default.score);
    };
    GameManager.prototype.update = function (dt) {
        var _this = this;
        if (!this.logic || !this.logic.maze || this.gameOver)
            return;
        var cs = this.logic.cellSize;
        var cols = this.logic.maze[0].length;
        var rows = this.logic.maze.length;
        var baseX = (1080 - cols * cs) / 2;
        var baseY = (1920 - rows * cs) / 2;
        // ① 거리 기반 골 판정 (여기서만 한 번 점수 + 레벨업 예약)
        var go = this.logic.getGoalPosition();
        var goalWorld = cc.v2(baseX + go.x * cs + cs / 2, baseY + go.y * cs + cs / 2);
        if (!this.isGoalReached &&
            this.playerCtrl.node.getPosition().sub(goalWorld).mag() < cs * 0.5) {
            this.isGoalReached = true;
            this.gameOver = true;
            // 점수는 한 번만 +10
            MazeGameData_1.default.addScore(MazeGameData_1.default.currentLevel);
            this.uiMgr.setScore(MazeGameData_1.default.score);
            // → 아주 짧은 지연(0초)으로 다음 프레임에 _startLevel 호출
            this.scheduleOnce(function () {
                _this._startLevel(MazeGameData_1.default.currentLevel + 1);
            }, 0.1);
            return;
        }
        // ② 시간 차감 & 시간초과 판정
        this.timeRem -= dt;
        this.uiMgr.setTimer(this.timeRem);
        if (this.timeRem <= 0) {
            this.gameOver = true;
            // 게임 상태 저장
            GameState_1.default.lastGameScene = cc.director.getScene().name;
            GameState_1.default.score = MazeGameData_1.default.score;
            GameState_1.default.gameId = "maze-game"; // 기억력 게임 고유 식별자
            if (this.gameOverUIPrefab) {
                var gameOverUI_1 = cc.instantiate(this.gameOverUIPrefab);
                // ① Canvas에 붙이기
                var canvas = cc.find("Canvas");
                canvas.addChild(gameOverUI_1);
                // ② zIndex 설정 (player·goal 500 위)
                gameOverUI_1.zIndex = 1000;
                // ③ 같은 부모 내 맨 뒤로 보내기
                gameOverUI_1.setSiblingIndex(canvas.childrenCount - 1);
                // ④ 화면 중앙에 배치
                gameOverUI_1.setPosition(540, 960);
                var retryBtn = gameOverUI_1.getChildByName("RetryButton");
                if (retryBtn) {
                    retryBtn.on(cc.Node.EventType.TOUCH_END, function () {
                        MazeGameData_1.default.score = 0;
                        _this.uiMgr.setScore(0);
                        MazeGameData_1.default.currentLevel = 1;
                        _this._startLevel(1);
                        gameOverUI_1.destroy();
                    }, this);
                }
            }
            MazeGameData_1.default.currentLevel = 1;
            return;
        }
    };
    __decorate([
        property(cc.Node)
    ], GameManager.prototype, "mazeContainer", void 0);
    __decorate([
        property(MazePlayerController_1.default)
    ], GameManager.prototype, "playerCtrl", void 0);
    __decorate([
        property(MazeUIManager_1.default)
    ], GameManager.prototype, "uiMgr", void 0);
    __decorate([
        property(cc.Node)
    ], GameManager.prototype, "goalNode", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "tilePrefab", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameManager.prototype, "pathFrame", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameManager.prototype, "grassFrame", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameManager.prototype, "goalSongpyeon", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameManager.prototype, "goalBone", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameManager.prototype, "goalCarrot", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "gameOverUIPrefab", void 0);
    GameManager = __decorate([
        ccclass
    ], GameManager);
    return GameManager;
}(cc.Component));
exports.default = GameManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/StoryScene_Controller.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '47ee1hhyu1HcZUf5y9OTmip', 'StoryScene_Controller');
// scripts/Controller/CommonUI/StoryScene_Controller.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var StoryScene = /** @class */ (function (_super) {
    __extends(StoryScene, _super);
    function StoryScene() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StoryScene.prototype.start = function () {
        var _this = this;
        cc.director.preloadScene("StoryScene_2");
        cc.director.preloadScene("StoryScene_3");
        this.node.on("touchend", function () {
            var ButtonName = _this.node.name;
            if (ButtonName === "Movefir_Arrow") {
                cc.director.loadScene("StoryScene_1");
            }
            if (ButtonName === "Movesec_Arrow") {
                cc.director.loadScene("StoryScene_2");
            }
            if (ButtonName === "Movethir_Arrow") {
                cc.director.loadScene("StoryScene_3");
            }
            if (ButtonName === "SKIP" || "Go_Button") {
                cc.director.loadScene("LoginScene");
            }
        });
    };
    StoryScene = __decorate([
        ccclass
    ], StoryScene);
    return StoryScene;
}(cc.Component));
exports.default = StoryScene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcQ29tbW9uVUlcXFN0b3J5U2NlbmVfQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUF3Qyw4QkFBWTtJQUFwRDs7SUFzQkEsQ0FBQztJQXBCRywwQkFBSyxHQUFMO1FBQUEsaUJBbUJDO1FBbEJHLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3pDLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRXpDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtZQUNyQixJQUFNLFVBQVUsR0FBRyxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztZQUNsQyxJQUFJLFVBQVUsS0FBSyxlQUFlLEVBQUM7Z0JBQy9CLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDO2FBQ3pDO1lBQ0QsSUFBSSxVQUFVLEtBQUssZUFBZSxFQUFFO2dCQUNoQyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUN6QztZQUNELElBQUksVUFBVSxLQUFLLGdCQUFnQixFQUFDO2dCQUNoQyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUN6QztZQUNELElBQUksVUFBVSxLQUFLLE1BQU0sSUFBRSxXQUFXLEVBQUM7Z0JBQ25DLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO2FBQ3ZDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBckJnQixVQUFVO1FBRDlCLE9BQU87T0FDYSxVQUFVLENBc0I5QjtJQUFELGlCQUFDO0NBdEJELEFBc0JDLENBdEJ1QyxFQUFFLENBQUMsU0FBUyxHQXNCbkQ7a0JBdEJvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3J5U2NlbmUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgc3RhcnQoKSB7XG4gICAgICAgIGNjLmRpcmVjdG9yLnByZWxvYWRTY2VuZShcIlN0b3J5U2NlbmVfMlwiKTtcbiAgICAgICAgY2MuZGlyZWN0b3IucHJlbG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8zXCIpO1xuXG4gICAgICAgIHRoaXMubm9kZS5vbihcInRvdWNoZW5kXCIsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IEJ1dHRvbk5hbWUgPSB0aGlzLm5vZGUubmFtZTtcbiAgICAgICAgICAgIGlmIChCdXR0b25OYW1lID09PSBcIk1vdmVmaXJfQXJyb3dcIil7XG4gICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8xXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJ1dHRvbk5hbWUgPT09IFwiTW92ZXNlY19BcnJvd1wiKSB7XG4gICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8yXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJ1dHRvbk5hbWUgPT09IFwiTW92ZXRoaXJfQXJyb3dcIil7XG4gICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8zXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJ1dHRvbk5hbWUgPT09IFwiU0tJUFwifHxcIkdvX0J1dHRvblwiKXtcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJMb2dpblNjZW5lXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/SplashMain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '82f9bwp23RJlZtPIfyh7n8B', 'SplashMain');
// scripts/Controller/CommonUI/SplashMain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SplashMain = /** @class */ (function (_super) {
    __extends(SplashMain, _super);
    function SplashMain() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplashMain.prototype.start = function () {
        // 로그인 상태면 바로 LoginScene으로 넘김
        var jwtToken = localStorage.getItem('jwtToken');
        if (jwtToken) {
            cc.director.loadScene("LoginScene");
            return;
        }
        // 2초(2000ms) 후 자동으로 StoryScene_1로 이동
        this.scheduleOnce(function () {
            cc.director.loadScene("StoryScene_1");
        }, 1); // 2초 후 실행
        this.node.on("touchend", function () {
            cc.director.loadScene("StoryScene_1");
        });
    };
    SplashMain = __decorate([
        ccclass
    ], SplashMain);
    return SplashMain;
}(cc.Component));
exports.default = SplashMain;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcQ29tbW9uVUlcXFNwbGFzaE1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBd0MsOEJBQVk7SUFBcEQ7O0lBa0JBLENBQUM7SUFqQkcsMEJBQUssR0FBTDtRQUNJLDZCQUE2QjtRQUM3QixJQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2xELElBQUksUUFBUSxFQUFFO1lBQ1YsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDcEMsT0FBTztTQUNWO1FBRUQscUNBQXFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDZCxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMxQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVO1FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtZQUN6QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM5QyxDQUFDLENBQUMsQ0FBQztJQUVDLENBQUM7SUFqQmdCLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FrQjlCO0lBQUQsaUJBQUM7Q0FsQkQsQUFrQkMsQ0FsQnVDLEVBQUUsQ0FBQyxTQUFTLEdBa0JuRDtrQkFsQm9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BsYXNoTWFpbiBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgc3RhcnQoKSB7XG4gICAgICAgIC8vIOuhnOq3uOyduCDsg4Htg5zrqbQg67CU66GcIExvZ2luU2NlbmXsnLzroZwg64SY6rmAXG4gICAgICAgIGNvbnN0IGp3dFRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dFRva2VuJyk7XG4gICAgICAgIGlmIChqd3RUb2tlbikge1xuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiTG9naW5TY2VuZVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIDLstIgoMjAwMG1zKSDtm4Qg7J6Q64+Z7Jy866GcIFN0b3J5U2NlbmVfMeuhnCDsnbTrj5lcbiAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8xXCIpO1xuICAgICAgICB9LCAxKTsgLy8gMuy0iCDtm4Qg7Iuk7ZaJXG4gICAgICAgIHRoaXMubm9kZS5vbihcInRvdWNoZW5kXCIsICgpID0+IHtcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU3RvcnlTY2VuZV8xXCIpO1xufSk7XG5cbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Multi/MultiGameWait.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '012c28XmmBC+IePFsvpf6TO', 'MultiGameWait');
// scripts/Controller/Multi/MultiGameWait.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiGameWait = /** @class */ (function (_super) {
    __extends(MultiGameWait, _super);
    function MultiGameWait() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.multiStartButton = null;
        _this.backButton = null;
        return _this;
    }
    MultiGameWait.prototype.onLoad = function () {
        cc.debug.setDisplayStats(false);
    };
    MultiGameWait.prototype.start = function () {
        if (this.multiStartButton) {
            this.registerButtonEvents(this.multiStartButton, function () {
                cc.director.loadScene('PlayerConnect');
            });
        }
        if (this.backButton) {
            this.registerButtonEvents(this.backButton, this.onClickMain.bind(this));
        }
    };
    MultiGameWait.prototype.registerButtonEvents = function (node, callback) {
        node.on(cc.Node.EventType.TOUCH_END, callback);
        node.on(cc.Node.EventType.MOUSE_DOWN, callback);
    };
    MultiGameWait.prototype.onClickMain = function () {
        cc.log("뒤로가기 버튼 클릭됨. MainMenu 씬으로 이동.");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], MultiGameWait.prototype, "multiStartButton", void 0);
    __decorate([
        property(cc.Node)
    ], MultiGameWait.prototype, "backButton", void 0);
    MultiGameWait = __decorate([
        ccclass
    ], MultiGameWait);
    return MultiGameWait;
}(cc.Component));
exports.default = MultiGameWait;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcTXVsdGlcXE11bHRpR2FtZVdhaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUFrQ0M7UUEvQkcsc0JBQWdCLEdBQVksSUFBSSxDQUFDO1FBR2pDLGdCQUFVLEdBQVksSUFBSSxDQUFDOztJQTRCL0IsQ0FBQztJQTFCRyw4QkFBTSxHQUFOO1FBQ0ksRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELDZCQUFLLEdBQUw7UUFDSSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO2dCQUM3QyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUMzQyxDQUFDLENBQUMsQ0FBQztTQUNOO1FBRUQsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDM0U7SUFFTCxDQUFDO0lBRUQsNENBQW9CLEdBQXBCLFVBQXFCLElBQWEsRUFBRSxRQUFvQjtRQUNwRCxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsbUNBQVcsR0FBWDtRQUNJLEVBQUUsQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQztRQUN4QyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBOUJEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7MkRBQ2U7SUFHakM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztxREFDUztJQU5WLGFBQWE7UUFEakMsT0FBTztPQUNhLGFBQWEsQ0FrQ2pDO0lBQUQsb0JBQUM7Q0FsQ0QsQUFrQ0MsQ0FsQzBDLEVBQUUsQ0FBQyxTQUFTLEdBa0N0RDtrQkFsQ29CLGFBQWEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXVsdGlHYW1lV2FpdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBtdWx0aVN0YXJ0QnV0dG9uOiBjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGJhY2tCdXR0b246IGNjLk5vZGUgPSBudWxsO1xuXG4gICAgb25Mb2FkKCkge1xuICAgICAgICBjYy5kZWJ1Zy5zZXREaXNwbGF5U3RhdHMoZmFsc2UpO1xuICAgIH1cblxuICAgIHN0YXJ0KCkge1xuICAgICAgICBpZiAodGhpcy5tdWx0aVN0YXJ0QnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uRXZlbnRzKHRoaXMubXVsdGlTdGFydEJ1dHRvbiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZSgnUGxheWVyQ29ubmVjdCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5iYWNrQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uRXZlbnRzKHRoaXMuYmFja0J1dHRvbiwgdGhpcy5vbkNsaWNrTWFpbi5iaW5kKHRoaXMpKTsgXG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHJlZ2lzdGVyQnV0dG9uRXZlbnRzKG5vZGU6IGNjLk5vZGUsIGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIG5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCBjYWxsYmFjayk7XG4gICAgICAgIG5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfRE9XTiwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIG9uQ2xpY2tNYWluKCkge1xuICAgICAgICBjYy5sb2coXCLrkqTroZzqsIDquLAg67KE7Yq8IO2BtOumreuQqC4gTWFpbk1lbnUg7JSs7Jy866GcIOydtOuPmS5cIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk1haW5TY2VuZVwiKTtcbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/MyPage/MyInfoController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '64fcf29UQROYIhgN+e3+F5A', 'MyInfoController');
// scripts/Controller/MyPage/MyInfoController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myRecordButton = null;
        _this.backButton = null;
        return _this;
    }
    NewClass.prototype.onLoad = function () {
        cc.debug.setDisplayStats(false);
    };
    NewClass.prototype.start = function () {
        if (this.myRecordButton) {
            this.myRecordButton.on(cc.Node.EventType.TOUCH_END, function () {
                cc.director.loadScene("MyRecord");
            }, this);
        }
        if (this.backButton) {
            this.backButton.on(cc.Node.EventType.TOUCH_END, function () {
                cc.director.loadScene('홈화면');
            }, this);
        }
    };
    NewClass.prototype.onClickMain = function () {
        cc.log("뒤로가기 버튼 클릭됨. MainMenu 씬으로 이동.");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], NewClass.prototype, "myRecordButton", void 0);
    __decorate([
        property(cc.Node)
    ], NewClass.prototype, "backButton", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcTXlQYWdlXFxNeUluZm9Db250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQXNDLDRCQUFZO0lBQWxEO1FBQUEscUVBOEJDO1FBM0JHLG9CQUFjLEdBQVksSUFBSSxDQUFDO1FBRy9CLGdCQUFVLEdBQVksSUFBSSxDQUFDOztJQXdCL0IsQ0FBQztJQXRCRyx5QkFBTSxHQUFOO1FBQ0ksRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELHdCQUFLLEdBQUw7UUFDSSxJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDckIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFO2dCQUNoRCxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN0QyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDWjtRQUVELElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNqQixJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUU7Z0JBQzVDLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNaO0lBQ0wsQ0FBQztJQUVELDhCQUFXLEdBQVg7UUFDSSxFQUFFLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUM7UUFDeEMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQTFCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO29EQUNhO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7Z0RBQ1M7SUFOVixRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBOEI1QjtJQUFELGVBQUM7Q0E5QkQsQUE4QkMsQ0E5QnFDLEVBQUUsQ0FBQyxTQUFTLEdBOEJqRDtrQkE5Qm9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV3Q2xhc3MgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgbXlSZWNvcmRCdXR0b246IGNjLk5vZGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYmFja0J1dHRvbjogY2MuTm9kZSA9IG51bGw7XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIGNjLmRlYnVnLnNldERpc3BsYXlTdGF0cyhmYWxzZSk7XG4gICAgfVxuXG4gICAgc3RhcnQoKSB7XG4gICAgICAgIGlmICh0aGlzLm15UmVjb3JkQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLm15UmVjb3JkQnV0dG9uLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk15UmVjb3JkXCIpO1xuICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5iYWNrQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLmJhY2tCdXR0b24ub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKCftmYjtmZTrqbQnKTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25DbGlja01haW4oKSB7XG4gICAgICAgIGNjLmxvZyhcIuuSpOuhnOqwgOq4sCDrsoTtirwg7YG066at65CoLiBNYWluTWVudSDslKzsnLzroZwg7J2064+ZLlwiKTtcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiTWFpblNjZW5lXCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Multi/MultiFlowController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '95c34Sns9FBiqV8rLcLlrPT', 'MultiFlowController');
// scripts/Controller/Multi/MultiFlowController.ts

"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../CommonUI/GameState");
var ccclass = cc._decorator.ccclass;
var MultiGameFlowController = /** @class */ (function () {
    function MultiGameFlowController() {
    }
    /**
     * 1) 씬이 로드될 때(예: start()나 onLoad() 초기에) 반드시 호출
     * 2) join-room, guest-ready/GameStart 흐름을 처리
     * 3) 공통 “game-event” 리스너 등록 → move-scene, host-left, spawn-~, hit-~, score-update 모두 이곳에서 중계
     */
    MultiGameFlowController.initializeSocketListeners = function () {
        if (cc.sys.isNative || !window.socket)
            return;
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        if (!roomId)
            return;
        window.socket.emit("join-room", roomId);
        if (!GameState_1.default.isHost) {
            setTimeout(function () {
                window.socket.emit("game-event", {
                    type: "guest-ready",
                    roomId: roomId,
                    payload: { playerId: GameState_1.default.browserId || "" }
                });
            }, 200);
        }
        window.socket.off("game-event");
        window.socket.on("game-event", function (message) {
            var type = message.type, payload = message.payload, incomingRoomId = message.roomId;
            if (incomingRoomId !== roomId)
                return;
            switch (type) {
                case "guest-ready":
                    if (GameState_1.default.isHost) {
                        window.socket.emit("game-event", { type: "game-start", roomId: roomId, payload: {} });
                        cc.director.emit("multi-game-start");
                    }
                    break;
                case "game-start":
                    if (!GameState_1.default.isHost) {
                        cc.director.emit("multi-game-start");
                    }
                    break;
                case "spawn-mole":
                case "hit-mole":
                case "sequence-generated":
                case "user-input":
                case "input-result":
                case "level-up":
                case "spawn-question":
                case "answer-result":
                case "score-update":
                    cc.director.emit(type, payload); // 필수 
                    break;
                case "move-scene":
                    {
                        // 디버그 로그: 서버가 보내준 씬 이름을 찍어본다
                        cc.log("[FlowController] move-scene \uC218\uC2E0. payload.sceneName = \"" + (payload === null || payload === void 0 ? void 0 : payload.sceneName) + "\"");
                        var sceneName_1 = payload === null || payload === void 0 ? void 0 : payload.sceneName;
                        if (sceneName_1) {
                            // 직접 loadScene 호출 전에도 한 번 “씬 파일이 실제 있는지” 
                            cc.log("[FlowController] loadScene \uC2DC\uB3C4 \u2192 \"" + sceneName_1 + "\"");
                            cc.director.loadScene(sceneName_1, function () {
                                cc.log("[FlowController] loadScene \uCF5C\uBC31: \"" + sceneName_1 + "\" \uB85C\uB4DC \uC644\uB8CC");
                            });
                        }
                        else {
                            cc.warn("[FlowController] move-scene: payload.sceneName이 없어서 loadScene 하지 않습니다.");
                        }
                    }
                    break;
                case "host-left":
                    GameState_1.default.resetMultiplay();
                    cc.director.loadScene("MainScene");
                    break;
                default:
                    console.warn("MultiGameFlowController: 알 수 없는 game-event:", type);
            }
        });
        window.socket.on("connect", function () {
            if (roomId) {
                window.socket.emit("join-room", roomId);
            }
        });
    };
    /**
     * 각 게임 씬에서 “게임이 완전히 끝났을 때” 반드시 호출해야함
     * - 스케줄러 모두 해제
     * - isGameOver 플래그 세팅
     * - 서버에 “game-end” emit → 서버는 결과 씬으로 브로드캐스트
     */
    MultiGameFlowController.endGame = function (sceneInstance) {
        var _a;
        if (sceneInstance.isGameOver)
            return;
        sceneInstance.isGameOver = true;
        (_a = sceneInstance.unscheduleAllCallbacks) === null || _a === void 0 ? void 0 : _a.call(sceneInstance);
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        var finalScore = sceneInstance.score;
        if (!cc.sys.isNative && window.socket && roomId) {
            window.socket.emit("game-event", {
                type: "game-end",
                roomId: roomId,
                payload: {
                    score: finalScore,
                    nickname: GameState_1.default.nickname,
                    character: GameState_1.default.character,
                    isHost: GameState_1.default.isHost === true
                }
            });
        }
        cc.log("MultiGameFlowController.endGame → game-end emit, 점수:", finalScore);
    };
    MultiGameFlowController = __decorate([
        ccclass
    ], MultiGameFlowController);
    return MultiGameFlowController;
}());
exports.default = MultiGameFlowController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Multi/MultiPlayConnect.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '55b5f5aZTNIaqvFwvNlUyiI', 'MultiPlayConnect');
// scripts/Controller/Multi/MultiPlayConnect.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiPlayConnect = /** @class */ (function (_super) {
    __extends(MultiPlayConnect, _super);
    function MultiPlayConnect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.StartButton = null;
        _this.backButton = null;
        _this.ConnectLinkLabel = null;
        _this.player1Label = null;
        _this.player1CharacterNode = null;
        _this.player2Label = null;
        _this.player2CharacterNode = null;
        _this.CopyButton = null;
        _this.CopyButtonLabel = null;
        _this.roomId = '';
        _this.pollingTimer = null;
        _this.isRoomCreating = false;
        return _this;
    }
    MultiPlayConnect.prototype.onLoad = function () {
        cc.debug.setDisplayStats(false);
        if (this.CopyButton)
            this.CopyButton.node.active = false;
    };
    MultiPlayConnect.prototype.start = function () {
        cc.log("MultiPlayConnect start() 진입");
        cc.log("GameState.isHost:", GameState_1.default.isHost);
        if (this.StartButton) {
            this.StartButton.active = GameState_1.default.isHost;
            if (GameState_1.default.isHost) {
                cc.log("StartButton 활성화 (Host)");
                this.registerButtonEvents(this.StartButton, this.createRoomAndShowInviteLink.bind(this));
            }
            else {
                cc.log("Guest는 StartButton 비활성화");
            }
        }
        var nickname = GameState_1.default.nickname || '플레이어';
        var character = GameState_1.default.character || 'dog';
        if (GameState_1.default.isHost) {
            cc.log("Host UI 세팅");
            if (this.player1Label)
                this.player1Label.string = "\uB2C9\uB124\uC784 : " + nickname;
            this.setCharacterSprite(this.player1CharacterNode, character);
            // Host일 경우 GameState에 저장된 roomId 사용
            if (GameState_1.default.createdRoomId) {
                this.roomId = GameState_1.default.createdRoomId;
                this.listenForGuestUpdate(); // 바로 상태 감지 시작
            }
        }
        else {
            cc.log("Guest UI 세팅");
            if (this.player2Label)
                this.player2Label.string = "\uB2C9\uB124\uC784 : " + nickname;
            this.setCharacterSprite(this.player2CharacterNode, character);
            var incomingRoomId = GameState_1.default.incomingRoomId;
            if (incomingRoomId) {
                this.roomId = incomingRoomId;
                cc.log("Guest 방 입장 요청:", this.roomId);
                this.joinRoomAsGuest();
            }
        }
    };
    MultiPlayConnect.prototype.registerButtonEvents = function (node, callback) {
        node.off(cc.Node.EventType.TOUCH_END); // 기존 리스너 제거
        node.on(cc.Node.EventType.TOUCH_END, callback);
    };
    MultiPlayConnect.prototype.createRoomAndShowInviteLink = function () {
        return __awaiter(this, void 0, void 0, function () {
            var token, response, result_1, err_1;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!GameState_1.default.isHost) {
                            cc.warn("Guest는 방을 생성할 수 없습니다.");
                            return [2 /*return*/];
                        }
                        if (this.isRoomCreating)
                            return [2 /*return*/];
                        this.isRoomCreating = true;
                        cc.log("createRoomAndShowInviteLink 실행됨");
                        token = localStorage.getItem('jwtToken');
                        if (!token) {
                            cc.warn("JWT 토큰 없음");
                            this.isRoomCreating = false;
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, 5, 6]);
                        return [4 /*yield*/, fetch('https://smartzoo.shop/multi/room/create-room', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': "Bearer " + token
                                },
                                body: JSON.stringify({
                                    // selectedGameSequence: // 반드시 배열 형태로 포함시켜야 함
                                    //     ["MultiMoleGameScene",
                                    //         "MultiRememberGameScene",
                                    //         "Reversecorrect_Multiscene",
                                    //         "Maze_MultiScene"
                                    //     ],
                                    selectedGameId: "MultiMoleGameScene"
                                })
                            })];
                    case 2:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 3:
                        result_1 = _a.sent();
                        cc.log("서버 응답:", result_1);
                        if (result_1.success) {
                            this.roomId = result_1.roomId;
                            GameState_1.default.createdRoomId = this.roomId;
                            if (this.ConnectLinkLabel)
                                this.ConnectLinkLabel.string = result_1.inviteUrl;
                            // 복사 버튼 활성화 및 터치 이벤트 등록
                            if (this.CopyButton) {
                                this.CopyButton.node.active = true;
                                // 터치 이벤트로 등록 (중복 방지)
                                this.CopyButton.node.off(cc.Node.EventType.TOUCH_END);
                                this.CopyButton.node.on(cc.Node.EventType.TOUCH_END, function () {
                                    if (navigator.clipboard) {
                                        navigator.clipboard.writeText(result_1.inviteUrl)
                                            .then(function () {
                                            cc.log("초대 링크 복사 완료");
                                            // 버튼 라벨 "복사 성공"으로 변경 후 1.5초 뒤 복원
                                            if (_this.CopyButtonLabel) {
                                                _this.CopyButtonLabel.string = "복사 성공";
                                                _this.scheduleOnce(function () {
                                                    if (_this.CopyButtonLabel) {
                                                        _this.CopyButtonLabel.string = "복사";
                                                    }
                                                }, 1.5);
                                            }
                                        })
                                            .catch(function () { return cc.warn("복사 실패"); });
                                    }
                                    else {
                                        cc.warn("이 브라우저는 클립보드 복사를 지원하지 않습니다.");
                                    }
                                });
                            }
                            cc.log("\uC0DD\uC131\uB41C \uBC29 \uCF54\uB4DC: " + this.roomId);
                            cc.log("\uCD08\uB300 \uB9C1\uD06C: " + result_1.inviteUrl);
                            this.listenForGuestUpdate();
                        }
                        return [3 /*break*/, 6];
                    case 4:
                        err_1 = _a.sent();
                        cc.log('서버 요청 실패:', err_1.message);
                        return [3 /*break*/, 6];
                    case 5:
                        this.isRoomCreating = false;
                        return [7 /*endfinally*/];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    MultiPlayConnect.prototype.listenForGuestUpdate = function () {
        var _this = this;
        this.checkGuestUpdate();
        this.pollingTimer = setInterval(function () { return _this.checkGuestUpdate(); }, 3000); // 반응성 개선
    };
    MultiPlayConnect.prototype.checkGuestUpdate = function () {
        return __awaiter(this, void 0, void 0, function () {
            var response, result, data, label, err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.roomId) {
                            cc.warn("roomId 없음. polling 중단됨");
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, fetch("https://smartzoo.shop/multi/room/room-status/" + this.roomId)];
                    case 2:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 3:
                        result = _a.sent();
                        cc.log("서버 응답:", result);
                        // 방이 삭제되었거나 에러가 발생한 경우(방이 없음, 권한 없음 등)
                        if (!result.success || !result.data) {
                            cc.warn("[checkGuestUpdate] 방이 존재하지 않거나 에러:", result.message);
                            this.handleRoomJoinFail();
                            return [2 /*return*/];
                        }
                        data = result.data;
                        cc.log("현재 status:", data.status);
                        if (GameState_1.default.isHost) {
                            if (data.guestNickname && data.guestCharacter) {
                                GameState_1.default.guestNickname = data.guestNickname;
                                GameState_1.default.guestCharacter = data.guestCharacter;
                                if (this.player2Label)
                                    this.player2Label.string = "\uB2C9\uB124\uC784 : " + data.guestNickname;
                                this.setCharacterSprite(this.player2CharacterNode, data.guestCharacter);
                            }
                            // 호스트이면서 상태가 ready일 때만 버튼 접근
                            if (data.status === 'ready' && this.StartButton) {
                                cc.log("모든 인원 입장 완료. 게임 시작 가능");
                                label = this.StartButton.getComponentInChildren(cc.Label);
                                if (label)
                                    label.string = "게임 시작 !";
                                this.StartButton.off(cc.Node.EventType.TOUCH_END);
                                this.StartButton.off(cc.Node.EventType.MOUSE_DOWN);
                                this.registerButtonEvents(this.StartButton, this.startGameList.bind(this));
                            }
                        }
                        else {
                            if (data.hostNickname && data.hostCharacter) {
                                GameState_1.default.hostNickname = data.hostNickname;
                                GameState_1.default.hostCharacter = data.hostCharacter;
                                if (this.player1Label)
                                    this.player1Label.string = "\uB2C9\uB124\uC784 : " + data.hostNickname;
                                this.setCharacterSprite(this.player1CharacterNode, data.hostCharacter);
                            }
                            // 게스트가 'started' 상태 수신 시 게임 씬으로 이동
                            if (data.status === 'started') {
                                cc.log("Host가 게임 시작 → Guest도 MultiGameList 이동");
                                cc.director.loadScene("MultiGameList");
                            }
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        err_2 = _a.sent();
                        // 네트워크 에러, 404/401/NOT_FOUND 등 발생 시 메인씬 이동
                        cc.error("[checkGuestUpdate] 방 상태 확인 실패(네트워크/삭제):", err_2.message);
                        this.handleRoomJoinFail();
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    // 방입장 실패, 방삭제/404/권한없음 등 모든 예외 공통처리 함수로 분리
    MultiPlayConnect.prototype.handleRoomJoinFail = function () {
        GameState_1.default.resetMultiplay();
        GameState_1.default.incomingRoomId = '';
        cc.sys.localStorage.removeItem("isHost");
        localStorage.removeItem("pendingRoomId");
        cc.director.loadScene("MainScene");
    };
    MultiPlayConnect.prototype.setCharacterSprite = function (node, characterKey) {
        var sprite = node.getComponent(cc.Sprite);
        if (!sprite)
            return;
        if (!['dog', 'rabbit', 'tiger'].includes(characterKey)) {
            characterKey = 'dog';
        }
        var path = "Images/Common/characters/" + characterKey;
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            if (!err && spriteFrame) {
                sprite.spriteFrame = spriteFrame;
            }
        });
    };
    MultiPlayConnect.prototype.joinRoomAsGuest = function () {
        return __awaiter(this, void 0, void 0, function () {
            var token, response, result, err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        token = localStorage.getItem('jwtToken');
                        if (!token) {
                            this.handleRoomJoinFail();
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, fetch("https://smartzoo.shop/multi/room/join-room/" + this.roomId, {
                                method: 'POST',
                                headers: { 'Authorization': "Bearer " + token }
                            })];
                    case 2:
                        response = _a.sent();
                        if (!response.ok) {
                            cc.warn("[joinRoomAsGuest] 서버 응답 오류:", response.status, response.statusText);
                            this.handleRoomJoinFail();
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, response.json()];
                    case 3:
                        result = _a.sent();
                        if (result.success) {
                            this.listenForGuestUpdate();
                        }
                        else {
                            cc.warn("[joinRoomAsGuest] 서버 응답 실패:", result.message);
                            this.handleRoomJoinFail();
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        err_3 = _a.sent();
                        cc.error("[joinRoomAsGuest] 네트워크/예외:", err_3.message);
                        this.handleRoomJoinFail();
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    MultiPlayConnect.prototype.onDestroy = function () {
        if (this.pollingTimer) {
            clearInterval(this.pollingTimer);
            this.pollingTimer = null;
        }
    };
    MultiPlayConnect.prototype.onClickMain = function () {
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        var playerId = GameState_1.default.browserId;
        if (window.socket && roomId && playerId) {
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        GameState_1.default.resetMultiplay();
        GameState_1.default.incomingRoomId = '';
        cc.sys.localStorage.removeItem("isHost");
        localStorage.removeItem("pendingRoomId");
        cc.director.loadScene("MainScene");
    };
    MultiPlayConnect.prototype.startGameList = function () {
        return __awaiter(this, void 0, void 0, function () {
            var err_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cc.log("Host 게임 시작 버튼 클릭됨");
                        // 호스트 설정 및 로컬 저장
                        GameState_1.default.isHost = true;
                        cc.sys.localStorage.setItem("isHost", "true");
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, fetch("https://smartzoo.shop/multi/room/start-game/" + this.roomId, {
                                method: 'POST'
                            })];
                    case 2:
                        _a.sent();
                        // polling 중지
                        if (this.pollingTimer) {
                            clearInterval(this.pollingTimer);
                            this.pollingTimer = null;
                        }
                        cc.director.loadScene("MultiGameList");
                        return [3 /*break*/, 4];
                    case 3:
                        err_4 = _a.sent();
                        cc.error("start-game API 실패:", err_4.message);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        property(cc.Node)
    ], MultiPlayConnect.prototype, "StartButton", void 0);
    __decorate([
        property(cc.Node)
    ], MultiPlayConnect.prototype, "backButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiPlayConnect.prototype, "ConnectLinkLabel", void 0);
    __decorate([
        property(cc.Label)
    ], MultiPlayConnect.prototype, "player1Label", void 0);
    __decorate([
        property(cc.Node)
    ], MultiPlayConnect.prototype, "player1CharacterNode", void 0);
    __decorate([
        property(cc.Label)
    ], MultiPlayConnect.prototype, "player2Label", void 0);
    __decorate([
        property(cc.Node)
    ], MultiPlayConnect.prototype, "player2CharacterNode", void 0);
    __decorate([
        property(cc.Button)
    ], MultiPlayConnect.prototype, "CopyButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiPlayConnect.prototype, "CopyButtonLabel", void 0);
    MultiPlayConnect = __decorate([
        ccclass
    ], MultiPlayConnect);
    return MultiPlayConnect;
}(cc.Component));
exports.default = MultiPlayConnect;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/Single/SingleGameList.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c1b30N2FO9KdJh7XP5Dt8Z+', 'SingleGameList');
// scripts/Controller/Single/SingleGameList.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SingleGameListController = /** @class */ (function (_super) {
    __extends(SingleGameListController, _super);
    function SingleGameListController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameCardContainer = null;
        _this.gameCardPrefab = null;
        _this.selectButton = null;
        _this.leftArrow = null;
        _this.rightArrow = null;
        _this.BackButton = null;
        _this.currentIndex = 0;
        _this.cards = [];
        _this.selectedScene = null;
        _this.gameList = [
            { title: '두더지 게임', thumbnail: 'mole_thumb', scene: 'Mole_ExplainScene' },
            { title: '과일 퍼즐', thumbnail: 'three_thumb', scene: '3m_ExplainScene' },
            { title: '블록 개수 세기', thumbnail: 'block_thumb', scene: 'BlockCount_ExplainScene' },
            { title: '기억력 게임', thumbnail: 'remember_thumb', scene: 'RememberGame_ExplainScene' },
            { title: '숫자 뒤집어 맞추기', thumbnail: 'reverse_thumb', scene: 'Reversecorrect_ExplainScene' },
            { title: '집중력 게임', thumbnail: 'concetration_thumb', scene: 'Rottenacorn_Explain_scene' },
            { title: '미로 게임', thumbnail: 'maze_thumb', scene: 'Maze_ExplainScene' },
        ];
        return _this;
    }
    SingleGameListController.prototype.selectScene = function (sceneName, selectedCard) {
        this.selectedScene = sceneName;
        this.gameCardContainer.children.forEach(function (card) {
            card.scale = card === selectedCard ? 1.1 : 1;
            card.opacity = card === selectedCard ? 255 : 180;
        });
        this.selectButton.interactable = true;
    };
    SingleGameListController.prototype.onLoad = function () {
        this.selectButton.interactable = false;
        this.loadGameCards();
        this.registerArrowEvents(this.leftArrow, this.showPrevCard.bind(this));
        this.registerArrowEvents(this.rightArrow, this.showNextCard.bind(this));
        this.registerButtonEvents(this.selectButton.node, this.onSelectButtonClick.bind(this));
        this.registerButtonEvents(this.BackButton.node, this.onClickMain.bind(this));
    };
    SingleGameListController.prototype.registerButtonEvents = function (node, callback) {
        node.off(cc.Node.EventType.TOUCH_END); // 중복 방지
        node.on(cc.Node.EventType.TOUCH_END, callback);
    };
    SingleGameListController.prototype.registerArrowEvents = function (node, callback) {
        node.off(cc.Node.EventType.TOUCH_END); // 중복 방지
        node.on(cc.Node.EventType.TOUCH_END, callback);
    };
    SingleGameListController.prototype.loadGameCards = function () {
        var _this = this;
        this.gameList.forEach(function (game, index) {
            var _a;
            var card = cc.instantiate(_this.gameCardPrefab);
            // desc(게임 설명) 숨김 처리 (멀티에서만 씀)
            var descNode = card.getChildByName("GameDesc");
            if (descNode)
                descNode.active = false;
            var titleNode = (_a = card.getChildByName("GameTitleBox")) === null || _a === void 0 ? void 0 : _a.getChildByName("GameTitle");
            if (titleNode && titleNode.getComponent(cc.Label)) {
                titleNode.getComponent(cc.Label).string = game.title;
            }
            var thumbnailNode = card.getChildByName("GameThumbnail");
            if (thumbnailNode && thumbnailNode.getComponent(cc.Sprite)) {
                cc.resources.load("Images/Common/thumbnails/" + game.thumbnail, cc.SpriteFrame, function (err, spriteFrame) {
                    if (!err && spriteFrame) {
                        thumbnailNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;
                    }
                });
            }
            card.active = false;
            _this.cards.push(card);
            _this.gameCardContainer.addChild(card);
        });
        this.showCardAtIndex(0);
    };
    SingleGameListController.prototype.showCardAtIndex = function (index) {
        this.cards.forEach(function (card, i) {
            card.active = i === index;
        });
        this.currentIndex = index;
        this.selectScene(this.gameList[index].scene, this.cards[index]);
    };
    SingleGameListController.prototype.showNextCard = function () {
        var nextIndex = (this.currentIndex + 1) % this.cards.length;
        this.showCardAtIndex(nextIndex);
    };
    SingleGameListController.prototype.showPrevCard = function () {
        var prevIndex = (this.currentIndex - 1 + this.cards.length) % this.cards.length;
        this.showCardAtIndex(prevIndex);
    };
    SingleGameListController.prototype.onSelectButtonClick = function () {
        if (this.selectedScene) {
            cc.director.loadScene(this.selectedScene);
        }
    };
    SingleGameListController.prototype.onClickMain = function () {
        cc.log("뒤로가기 버튼 클릭됨. Main 씬으로 이동.");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], SingleGameListController.prototype, "gameCardContainer", void 0);
    __decorate([
        property(cc.Prefab)
    ], SingleGameListController.prototype, "gameCardPrefab", void 0);
    __decorate([
        property(cc.Button)
    ], SingleGameListController.prototype, "selectButton", void 0);
    __decorate([
        property(cc.Node)
    ], SingleGameListController.prototype, "leftArrow", void 0);
    __decorate([
        property(cc.Node)
    ], SingleGameListController.prototype, "rightArrow", void 0);
    __decorate([
        property(cc.Button)
    ], SingleGameListController.prototype, "BackButton", void 0);
    SingleGameListController = __decorate([
        ccclass
    ], SingleGameListController);
    return SingleGameListController;
}(cc.Component));
exports.default = SingleGameListController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Jang/MazeGameOverManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ba55241+4FM1oLcOvRC1meQ', 'MazeGameOverManager');
// scripts/Jang/MazeGameOverManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// /assets/Scripts/ui/GameOverManager.ts
var MazeGameData_1 = require("./MazeGameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameOverManager = /** @class */ (function (_super) {
    __extends(GameOverManager, _super);
    function GameOverManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameOverManager.prototype.start = function () {
        this.retryBtn.on("click", function () { return cc.director.loadScene("MazeSingleScene"); });
        this.mainBtn.on("click", function () {
            MazeGameData_1.default.currentLevel = 1;
            cc.director.loadScene("Maze_InformScene");
        });
    };
    __decorate([
        property(cc.Node)
    ], GameOverManager.prototype, "retryBtn", void 0);
    __decorate([
        property(cc.Node)
    ], GameOverManager.prototype, "mainBtn", void 0);
    GameOverManager = __decorate([
        ccclass
    ], GameOverManager);
    return GameOverManager;
}(cc.Component));
exports.default = GameOverManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSmFuZ1xcTWF6ZUdhbWVPdmVyTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx3Q0FBd0M7QUFDeEMsK0NBQXNDO0FBQ2hDLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQTZDLG1DQUFZO0lBQXpEOztJQVdBLENBQUM7SUFQQywrQkFBSyxHQUFMO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLGNBQUssT0FBQSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxFQUF4QyxDQUF3QyxDQUFDLENBQUM7UUFDekUsSUFBSSxDQUFDLE9BQU8sQ0FBRSxFQUFFLENBQUMsT0FBTyxFQUFFO1lBQ3hCLHNCQUFRLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzVDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQVRrQjtRQUFsQixRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztxREFBb0I7SUFDbkI7UUFBbEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7b0RBQW1CO0lBRmxCLGVBQWU7UUFEbkMsT0FBTztPQUNhLGVBQWUsQ0FXbkM7SUFBRCxzQkFBQztDQVhELEFBV0MsQ0FYNEMsRUFBRSxDQUFDLFNBQVMsR0FXeEQ7a0JBWG9CLGVBQWUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvYXNzZXRzL1NjcmlwdHMvdWkvR2FtZU92ZXJNYW5hZ2VyLnRzXG5pbXBvcnQgR2FtZURhdGEgZnJvbSBcIi4vTWF6ZUdhbWVEYXRhXCI7XG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU92ZXJNYW5hZ2VyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgQHByb3BlcnR5KGNjLk5vZGUpIHJldHJ5QnRuITogY2MuTm9kZTtcbiAgQHByb3BlcnR5KGNjLk5vZGUpIG1haW5CdG4hOiBjYy5Ob2RlO1xuXG4gIHN0YXJ0KCkge1xuICAgIHRoaXMucmV0cnlCdG4ub24oXCJjbGlja1wiLCAoKT0+IGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk1hemVTaW5nbGVTY2VuZVwiKSk7XG4gICAgdGhpcy5tYWluQnRuIC5vbihcImNsaWNrXCIsICgpPT4ge1xuICAgICAgR2FtZURhdGEuY3VycmVudExldmVsID0gMTtcbiAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk1hemVfSW5mb3JtU2NlbmVcIik7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/MultiRememberGame/MultiplayerMemoryGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '66f6eU5fSFIRLYqs1besI9R', 'MultiplayerMemoryGameController');
// scripts/Sim/MultiRememberGame/MultiplayerMemoryGameController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var MultiPlayerRememberGame_1 = require("./MultiPlayerRememberGame");
var MultiGuestViewerRemember_1 = require("./MultiGuestViewerRemember");
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiplayerMemoryGameController = /** @class */ (function (_super) {
    __extends(MultiplayerMemoryGameController, _super);
    function MultiplayerMemoryGameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myGameArea = null;
        _this.opponentGameArea = null;
        _this.exitButton = null;
        _this.myNameLabel = null;
        _this.myCharacterNode = null;
        _this.guestNameLabel = null;
        _this.guestCharacterNode = null;
        _this.myGameCtrl = null;
        _this.opponentView = null;
        _this._alreadyStarted = false;
        return _this;
    }
    MultiplayerMemoryGameController.prototype.start = function () {
        var _this = this;
        if (this._alreadyStarted)
            return;
        this._alreadyStarted = true;
        // (1) 반드시 가장 먼저 소켓 이벤트 리스너 연결!
        MultiFlowController_1.default.initializeSocketListeners();
        // (2) GameState 복구
        var savedSequence = cc.sys.localStorage.getItem("selectedGameSequence");
        var savedIndex = cc.sys.localStorage.getItem("currentGameIndex");
        if (savedSequence) {
            try {
                GameState_1.default.selectedGameSequence = JSON.parse(savedSequence);
                GameState_1.default.currentGameIndex = Number(savedIndex) || 0;
            }
            catch (e) {
                cc.warn("[MMemGC] selectedGameSequence 복구 실패:", e);
            }
        }
        var savedHost = cc.sys.localStorage.getItem("isHost");
        GameState_1.default.isHost = savedHost === "true";
        // (3) myGameArea / opponentGameArea 컴포넌트 연결
        this.myGameCtrl = this.myGameArea
            ? this.myGameArea.getComponent(MultiPlayerRememberGame_1.default)
            : null;
        if (!this.myGameArea) {
            cc.error("[MMemGC] 에러: myGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.myGameCtrl) {
            cc.error("[MMemGC] 에러: myGameArea 노드에 GameController 컴포넌트가 붙어 있는지 확인하세요.");
        }
        this.opponentView = this.opponentGameArea
            ? this.opponentGameArea.getComponent(MultiGuestViewerRemember_1.default)
            : null;
        if (!this.opponentGameArea) {
            cc.error("[MMemGC] 에러: opponentGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.opponentView) {
            cc.error("[MMemGC] 에러: opponentGameArea 노드에 OpponentMemoryViewer 컴포넌트가 붙어 있는지 확인하세요.");
        }
        // (4) 화면에 닉네임·캐릭터 세팅
        this.setPlayerInfoFromGameState();
        // (5) 상대방 이벤트 바인딩
        cc.director.on("sequence-generated", function (data) {
            if (_this.opponentView) {
                _this.opponentView["showBlinkSequence"](data.sequence);
            }
        });
        cc.director.on("user-input", function (data) {
            if (_this.opponentView) {
                _this.opponentView["showClickFeedback"](data.color);
            }
        });
        cc.director.on("input-result", function (data) {
            if (_this.opponentView) {
                _this.opponentView["updateFrogState"](data.correct ? "smile" : "cry");
            }
        });
        cc.director.on("score-update", function (data) {
            var _a, _b;
            var isHost = GameState_1.default.isHost;
            if (isHost && data.player === "guest") {
                (_a = _this.opponentView) === null || _a === void 0 ? void 0 : _a.setScore(data.score);
            }
            else if (!isHost && data.player === "host") {
                (_b = _this.opponentView) === null || _b === void 0 ? void 0 : _b.setScore(data.score);
            }
        });
        // (6) 내 게임 시작 리스너 등록 (flowController가 multi-game-start emit 시 동작)
        cc.director.on("multi-game-start", function () {
            if (_this.myGameCtrl) {
                _this.myGameCtrl["beginGame"]();
            }
            else {
                cc.error("[MMemGC] myGameCtrl이 null이라 beginGame을 호출할 수 없습니다.");
            }
        });
        // (7) 종료 버튼 연결
        if (this.exitButton) {
            this.exitButton.on(cc.Node.EventType.TOUCH_END, this.loadMain, this);
        }
    };
    MultiplayerMemoryGameController.prototype.setPlayerInfoFromGameState = function () {
        var isHost = GameState_1.default.isHost;
        var myName = GameState_1.default.nickname || "나";
        var myChar = GameState_1.default.character || "dog";
        var guestName = GameState_1.default.guestNickname || "게스트";
        var guestChar = GameState_1.default.guestCharacter || "rabbit";
        var hostName = GameState_1.default.hostNickname || "호스트";
        var hostChar = GameState_1.default.hostCharacter || "tiger";
        if (isHost) {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = guestName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, guestChar);
        }
        else {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = hostName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, hostChar);
        }
    };
    MultiplayerMemoryGameController.prototype.setCharacterSprite = function (node, characterKey) {
        var sprite = node.getComponent(cc.Sprite);
        if (!sprite)
            return;
        var path = "Images/Common/characters/" + characterKey + "Head";
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            if (!err && spriteFrame)
                sprite.spriteFrame = spriteFrame;
        });
    };
    MultiplayerMemoryGameController.prototype.loadMain = function () {
        var roomId = GameState_1.default.incomingRoomId || GameState_1.default.createdRoomId;
        var playerId = GameState_1.default.browserId;
        if (!cc.sys.isNative && window.socket && roomId && playerId) {
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        GameState_1.default.resetMultiplay();
        cc.sys.localStorage.removeItem("isHost");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], MultiplayerMemoryGameController.prototype, "myGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMemoryGameController.prototype, "opponentGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMemoryGameController.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMemoryGameController.prototype, "myNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMemoryGameController.prototype, "myCharacterNode", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMemoryGameController.prototype, "guestNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMemoryGameController.prototype, "guestCharacterNode", void 0);
    MultiplayerMemoryGameController = __decorate([
        ccclass
    ], MultiplayerMemoryGameController);
    return MultiplayerMemoryGameController;
}(cc.Component));
exports.default = MultiplayerMemoryGameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Controller/CommonUI/GameState.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '24196qclGpLUqqgSVLhURzx', 'GameState');
// scripts/Controller/CommonUI/GameState.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameState = /** @class */ (function () {
    function GameState() {
    }
    GameState.resetGame = function () {
        this.lastGameScene = '';
        this.score = 0;
    };
    GameState.resetUser = function () {
        this.nickname = '';
        this.character = '';
        this.recentSingleScores = [];
        this.incomingRoomId = '';
        this.createdRoomId = '';
        this.isHost = false;
        //  상대방 정보 초기화
        this.hostNickname = '';
        this.hostCharacter = '';
        this.guestNickname = '';
        this.guestCharacter = '';
    };
    GameState.resetMultiplay = function () {
        this.createdRoomId = '';
        this.incomingRoomId = '';
        this.isHost = false;
        //  상대방 정보도 함께 초기화
        this.hostNickname = '';
        this.hostCharacter = '';
        this.guestNickname = '';
        this.guestCharacter = '';
    };
    GameState.lastGameScene = '';
    GameState.nickname = '';
    GameState.character = '';
    GameState.score = 0;
    GameState.gameId = '';
    GameState.incomingRoomId = '';
    GameState.createdRoomId = '';
    GameState.isHost = false;
    //  상대방 정보 저장용
    GameState.hostNickname = '';
    GameState.hostCharacter = '';
    GameState.guestNickname = '';
    GameState.guestCharacter = '';
    // 싱글 게임 기록
    GameState.recentSingleScores = [];
    // Firebase 인증에 사용되는 브라우저 고유 식별자 (JWT payload에 포함됨)
    GameState.browserId = '';
    return GameState;
}());
exports.default = GameState;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ29udHJvbGxlclxcQ29tbW9uVUlcXEdhbWVTdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUE2REEsQ0FBQztJQW5DUSxtQkFBUyxHQUFoQjtRQUNFLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFFTSxtQkFBUyxHQUFoQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUM7UUFDN0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFFcEIsY0FBYztRQUNkLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSx3QkFBYyxHQUFyQjtRQUNFLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBRXBCLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBdkRNLHVCQUFhLEdBQVcsRUFBRSxDQUFDO0lBQzNCLGtCQUFRLEdBQVcsRUFBRSxDQUFDO0lBQ3RCLG1CQUFTLEdBQVcsRUFBRSxDQUFDO0lBQ3ZCLGVBQUssR0FBVyxDQUFDLENBQUM7SUFDbEIsZ0JBQU0sR0FBVyxFQUFFLENBQUM7SUFDcEIsd0JBQWMsR0FBVyxFQUFFLENBQUM7SUFDNUIsdUJBQWEsR0FBVyxFQUFFLENBQUM7SUFDM0IsZ0JBQU0sR0FBWSxLQUFLLENBQUM7SUFFL0IsY0FBYztJQUNQLHNCQUFZLEdBQVcsRUFBRSxDQUFDO0lBQzFCLHVCQUFhLEdBQVcsRUFBRSxDQUFDO0lBQzNCLHVCQUFhLEdBQVcsRUFBRSxDQUFDO0lBQzNCLHdCQUFjLEdBQVcsRUFBRSxDQUFDO0lBRW5DLFdBQVc7SUFDSiw0QkFBa0IsR0FJbkIsRUFBRSxDQUFDO0lBRVQsbURBQW1EO0lBQzVDLG1CQUFTLEdBQVcsRUFBRSxDQUFDO0lBcUNoQyxnQkFBQztDQTdERCxBQTZEQyxJQUFBO2tCQTdEb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVTdGF0ZSB7XG4gIHN0YXRpYyBsYXN0R2FtZVNjZW5lOiBzdHJpbmcgPSAnJztcbiAgc3RhdGljIG5pY2tuYW1lOiBzdHJpbmcgPSAnJztcbiAgc3RhdGljIGNoYXJhY3Rlcjogc3RyaW5nID0gJyc7XG4gIHN0YXRpYyBzY29yZTogbnVtYmVyID0gMDtcbiAgc3RhdGljIGdhbWVJZDogc3RyaW5nID0gJyc7XG4gIHN0YXRpYyBpbmNvbWluZ1Jvb21JZDogc3RyaW5nID0gJyc7XG4gIHN0YXRpYyBjcmVhdGVkUm9vbUlkOiBzdHJpbmcgPSAnJztcbiAgc3RhdGljIGlzSG9zdDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8vICDsg4HrjIDrsKkg7KCV67O0IOyggOyepeyaqVxuICBzdGF0aWMgaG9zdE5pY2tuYW1lOiBzdHJpbmcgPSAnJztcbiAgc3RhdGljIGhvc3RDaGFyYWN0ZXI6IHN0cmluZyA9ICcnO1xuICBzdGF0aWMgZ3Vlc3ROaWNrbmFtZTogc3RyaW5nID0gJyc7XG4gIHN0YXRpYyBndWVzdENoYXJhY3Rlcjogc3RyaW5nID0gJyc7XG5cbiAgLy8g7Iux6riAIOqyjOyehCDquLDroZ1cbiAgc3RhdGljIHJlY2VudFNpbmdsZVNjb3Jlczoge1xuICAgIGdhbWVJZDogc3RyaW5nO1xuICAgIHNjb3JlOiBudW1iZXI7XG4gICAgcGxheWVkQXQ6IHN0cmluZztcbiAgfVtdID0gW107XG5cbiAgLy8gRmlyZWJhc2Ug7J247Kad7JeQIOyCrOyaqeuQmOuKlCDruIzrnbzsmrDsoIAg6rOg7JygIOyLneuzhOyekCAoSldUIHBheWxvYWTsl5Ag7Y+s7ZWo65CoKVxuICBzdGF0aWMgYnJvd3NlcklkOiBzdHJpbmcgPSAnJztcblxuICBzdGF0aWMgcmVzZXRHYW1lKCkge1xuICAgIHRoaXMubGFzdEdhbWVTY2VuZSA9ICcnO1xuICAgIHRoaXMuc2NvcmUgPSAwO1xuICB9XG5cbiAgc3RhdGljIHJlc2V0VXNlcigpIHtcbiAgICB0aGlzLm5pY2tuYW1lID0gJyc7XG4gICAgdGhpcy5jaGFyYWN0ZXIgPSAnJztcbiAgICB0aGlzLnJlY2VudFNpbmdsZVNjb3JlcyA9IFtdO1xuICAgIHRoaXMuaW5jb21pbmdSb29tSWQgPSAnJztcbiAgICB0aGlzLmNyZWF0ZWRSb29tSWQgPSAnJztcbiAgICB0aGlzLmlzSG9zdCA9IGZhbHNlO1xuXG4gICAgLy8gIOyDgeuMgOuwqSDsoJXrs7Qg7LSI6riw7ZmUXG4gICAgdGhpcy5ob3N0Tmlja25hbWUgPSAnJztcbiAgICB0aGlzLmhvc3RDaGFyYWN0ZXIgPSAnJztcbiAgICB0aGlzLmd1ZXN0Tmlja25hbWUgPSAnJztcbiAgICB0aGlzLmd1ZXN0Q2hhcmFjdGVyID0gJyc7XG4gIH1cblxuICBzdGF0aWMgcmVzZXRNdWx0aXBsYXkoKSB7XG4gICAgdGhpcy5jcmVhdGVkUm9vbUlkID0gJyc7XG4gICAgdGhpcy5pbmNvbWluZ1Jvb21JZCA9ICcnO1xuICAgIHRoaXMuaXNIb3N0ID0gZmFsc2U7XG5cbiAgICAvLyAg7IOB64yA67CpIOygleuztOuPhCDtlajqu5gg7LSI6riw7ZmUXG4gICAgdGhpcy5ob3N0Tmlja25hbWUgPSAnJztcbiAgICB0aGlzLmhvc3RDaGFyYWN0ZXIgPSAnJztcbiAgICB0aGlzLmd1ZXN0Tmlja25hbWUgPSAnJztcbiAgICB0aGlzLmd1ZXN0Q2hhcmFjdGVyID0gJyc7XG4gIH1cblxuICAvLyAvLyDrqYDti7DtlIzroIjsnbQg7ISg7YOdIOqyjOyehCDrqqnroZ3qs7wg7J24642x7IqkXG4gIC8vIHN0YXRpYyBzZWxlY3RlZEdhbWVTZXF1ZW5jZTogc3RyaW5nW10gPSBbXTtcbiAgLy8gc3RhdGljIGN1cnJlbnRHYW1lSW5kZXg6IG51bWJlciA9IDA7XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/MultiRememberGame/MultiPlayerRememberGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a916iwh+ZFCIdZX3MA2v9N', 'MultiPlayerRememberGame');
// scripts/Sim/MultiRememberGame/MultiPlayerRememberGame.ts

"use strict";
// File: MultiPlayerRememberGame.ts
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameController = /** @class */ (function (_super) {
    __extends(GameController, _super);
    function GameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startButton = null;
        _this.redButton = null;
        _this.yellowButton = null;
        _this.greenButton = null;
        _this.blueButton = null;
        _this.frogSprite = null;
        _this.gameStartOverlayPrefab = null;
        _this.gameOverUIPrefab = null;
        _this.scoreUIPrefab = null;
        _this.timerUIPrefab = null;
        _this.scoreLabel = null;
        _this.timerLabel = null;
        _this.colorSequence = [];
        _this.userInput = [];
        /** 이제 `score` 를 public 으로 선언합니다. */
        _this.score = 0;
        _this.level = 1;
        _this.isGameActive = false;
        /** FlowController가 요구하는 `isGameOver` 를 public 으로 선언합니다. */
        _this.isGameOver = false;
        _this.remainingTime = 0;
        _this.buttonMap = {};
        _this.colors = ["red", "yellow", "green", "blue"];
        return _this;
    }
    GameController.prototype.onLoad = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        // 1) FlowController에서 “multi-game-start” 이벤트 수신 시 beginGame() 호출
        cc.director.on("multi-game-start", function () {
            _this.beginGame();
        });
        // 2) Score UI 프리팹 인스턴스화 및 Label 연결
        if (this.scoreUIPrefab) {
            var scoreUI = cc.instantiate(this.scoreUIPrefab);
            this.node.addChild(scoreUI);
            var scoreLabelNode = scoreUI.getChildByName("ScoreLabel");
            if (scoreLabelNode) {
                this.scoreLabel = scoreLabelNode.getComponent(cc.Label);
            }
            if (!this.scoreLabel) {
                console.warn("ScoreLabel 연결 실패: 프리팹 구조를 확인하세요.");
            }
        }
        // 3) Timer UI 프리팹 인스턴스화 및 Label 연결
        if (this.timerUIPrefab) {
            var timerUI = cc.instantiate(this.timerUIPrefab);
            this.node.addChild(timerUI);
            var timerLabelNode = timerUI.getChildByName("TimerLabel");
            if (timerLabelNode) {
                this.timerLabel = timerLabelNode.getComponent(cc.Label);
            }
            if (!this.timerLabel) {
                console.warn("⚠️ TimerLabel 연결 실패: 프리팹 구조를 확인하세요.");
            }
        }
        // 4) 게임 시작 오버레이 (FlowController가 “multi-game-start”를 보내지 않을 때만)
        // if (this.gameStartOverlayPrefab) {
        // const overlay = cc.instantiate(this.gameStartOverlayPrefab);
        // this.node.addChild(overlay);
        // overlay.setPosition(0, 400);
        // this.scheduleOnce(() => {
        //     this.beginGame();
        // }, 2);
        // }
        cc.debug.setDisplayStats(false);
        // 5) 버튼 매핑 및 클릭 이벤트 설정
        this.buttonMap = {
            red: this.redButton,
            yellow: this.yellowButton,
            green: this.greenButton,
            blue: this.blueButton,
        };
        this.startButton.node.on("click", this.onStartGame, this);
        this.redButton.node.on("click", function () { return _this.onColorButtonClick("red"); }, this);
        this.yellowButton.node.on("click", function () { return _this.onColorButtonClick("yellow"); }, this);
        this.greenButton.node.on("click", function () { return _this.onColorButtonClick("green"); }, this);
        this.blueButton.node.on("click", function () { return _this.onColorButtonClick("blue"); }, this);
        this.setInitialButtonState();
        this.startButton.node.active = false;
        this.tickCallback = this.updateTimer.bind(this);
        this.setFrogState("neutral");
    };
    // FlowController에서 호출할 수 있도록 public으로 노출
    GameController.prototype.startGame = function () {
        this.beginGame();
    };
    GameController.prototype.beginGame = function () {
        var _this = this;
        if (this.isGameActive)
            return; // 중복 방지
        // 초기화
        this.colorSequence = [];
        this.userInput = [];
        this.score = 0;
        this.level = 1;
        this.updateScore();
        this.isGameActive = true;
        this.setFrogState("neutral");
        this.startTimer();
        // 3초 딜레이 후에 실제 시퀀스 생성/표시
        var delaySeconds = 3;
        this.scheduleOnce(function () {
            _this.generateColorSequence();
            _this.showColorSequence();
        }, delaySeconds);
    };
    GameController.prototype.setFrogState = function (state) {
        var _this = this;
        var spriteMap = {
            neutral: "무표정개굴",
            smile: "웃는개굴",
            cry: "우는개굴",
        };
        var sizeMap = {
            neutral: { width: 200, height: 200 },
            smile: { width: 200, height: 250 },
            cry: { width: 300, height: 300 },
        };
        var spriteName = spriteMap[state];
        var size = sizeMap[state];
        cc.resources.load("Images/Sim/" + spriteName, cc.SpriteFrame, function (err, spriteFrame) {
            if (err) {
                console.error("\uAC1C\uAD6C\uB9AC \uC774\uBBF8\uC9C0 \uB85C\uB4DC \uC2E4\uD328: " + spriteName, err);
                return;
            }
            _this.frogSprite.spriteFrame = spriteFrame;
            _this.frogSprite.type = cc.Sprite.Type.SIMPLE;
            _this.frogSprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
            _this.frogSprite.node.setContentSize(size.width, size.height);
        });
    };
    GameController.prototype.onStartGame = function () {
        var btnLabel = this.startButton.node.getComponentInChildren(cc.Label).string;
        if (btnLabel === "다시") {
            this.userInput = [];
            this.isGameActive = true;
            this.startButton.node.active = false;
            this.setFrogState("neutral");
            this.generateColorSequence();
            this.showColorSequence();
        }
    };
    GameController.prototype.onColorButtonClick = function (color) {
        if (!this.isGameActive)
            return;
        if (!this.buttonMap[color].interactable)
            return;
        var btn = this.buttonMap[color];
        var originalScale = btn.node.scale;
        var originalPos = btn.node.getPosition();
        // 클릭 애니메이션
        cc.tween(btn.node)
            .parallel(cc.tween().to(0.1, { scale: originalScale * 0.85 }, { easing: "quadIn" }), cc.tween().to(0.1, { opacity: 180 }), cc.tween().to(0.1, { position: cc.v3(originalPos.x, originalPos.y - 5) }))
            .parallel(cc.tween().to(0.1, { scale: originalScale }, { easing: "quadOut" }), cc.tween().to(0.1, { opacity: 255 }), cc.tween().to(0.1, { position: originalPos }))
            .start();
        this.userInput.push(color);
        // ─── 멀티용 “user-input” 이벤트 전송 ───
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        if (!cc.sys.isNative && window.socket && roomId) {
            window.socket.emit("game-event", {
                type: "user-input",
                roomId: roomId,
                payload: {
                    color: color,
                    inputIndex: this.userInput.length - 1,
                },
            });
        }
        this.checkUserInput();
    };
    GameController.prototype.updateTimer = function () {
        this.remainingTime--;
        this.timerLabel.string = "" + this.remainingTime;
        if (this.remainingTime <= 0) {
            this.unschedule(this.tickCallback);
            this.onTimeUp();
        }
    };
    GameController.prototype.startTimer = function () {
        this.unschedule(this.tickCallback);
        this.remainingTime = 30;
        this.timerLabel.string = "" + this.remainingTime;
        this.timerLabel.node.active = true;
        this.schedule(this.tickCallback, 1);
    };
    // “게임 오버” 시 호출되는 메서드
    GameController.prototype.onTimeUp = function () {
        this.isGameActive = false;
        this.disableButtons(true);
        this.startButton.interactable = false;
        // ─── FlowController에 게임 종료 알림 ───
        this.endGame();
        // // 게임 종료 UI 생성
        // GameState.lastGameScene = cc.director.getScene().name;
        // GameState.score = this.score;
        // GameState.gameId = "remember-game";
        // const gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        // this.node.addChild(gameOverUI);
        // gameOverUI.setPosition(0, 400);
    };
    GameController.prototype.checkUserInput = function () {
        var _this = this;
        var correct = true;
        var targetSequence = this.level === 3 ? __spreadArrays(this.colorSequence).reverse() : this.colorSequence;
        for (var i = 0; i < this.userInput.length; i++) {
            if (this.userInput[i] !== targetSequence[i]) {
                correct = false;
                break;
            }
        }
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        var playerRole = GameState_1.default.isHost ? "host" : "guest";
        if (correct && this.userInput.length === targetSequence.length) {
            // 정답 처리
            this.setFrogState("smile");
            this.score += 10;
            this.updateScore();
            // ─── 멀티용 “input-result” 이벤트(정답) 전송 ───
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "input-result",
                    roomId: roomId,
                    payload: {
                        correct: true,
                        level: this.level,
                        player: playerRole,
                    },
                });
            }
            // ─── 멀티용 “score-update” 이벤트 전송 ───
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "score-update",
                    roomId: roomId,
                    payload: {
                        player: playerRole,
                        score: this.score,
                    },
                });
            }
            // ─── 멀티용 “level-up” 이벤트 전송 ───
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "level-up",
                    roomId: roomId,
                    payload: {
                        newLevel: this.level + 1,
                        player: playerRole,
                    },
                });
            }
            // 다음 레벨 준비
            this.userInput = [];
            this.level++;
            this.scheduleOnce(function () {
                _this.generateColorSequence();
                _this.showColorSequence();
            }, 3);
        }
        else if (!correct) {
            // 오답 처리
            this.setFrogState("cry");
            this.userInput = [];
            this.startButton.node.getComponentInChildren(cc.Label).string = "다시";
            this.startButton.node.active = true;
            this.isGameActive = false;
            this.disableButtons(true);
            // ─── 멀티용 “input-result” 이벤트(오답) 전송 ───
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "input-result",
                    roomId: roomId,
                    payload: {
                        correct: false,
                        level: this.level,
                        player: playerRole,
                    },
                });
            }
        }
    };
    GameController.prototype.generateColorSequence = function () {
        this.colorSequence = [];
        var length = this.level >= 5 ? 7 : this.level + 2;
        for (var i = 0; i < length; i++) {
            var idx = Math.floor(Math.random() * this.colors.length);
            this.colorSequence.push(this.colors[idx]);
        }
        console.log("생성된 색상 순서:", this.colorSequence);
        // ─── 멀티용 “sequence-generated” 이벤트 전송 ───
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        if (!cc.sys.isNative && window.socket && roomId) {
            window.socket.emit("game-event", {
                type: "sequence-generated",
                roomId: roomId,
                payload: {
                    level: this.level,
                    sequence: this.colorSequence.slice(),
                },
            });
        }
    };
    GameController.prototype.setInitialButtonState = function () {
        Object.values(this.buttonMap).forEach(function (btn) {
            btn.node.opacity = 100;
            btn.interactable = false;
        });
    };
    GameController.prototype.showColorSequence = function () {
        var _this = this;
        this.setFrogState("neutral");
        this.setInitialButtonState();
        var delay = 0;
        this.colorSequence.forEach(function (color) {
            var btn = _this.buttonMap[color];
            _this.scheduleOnce(function () { return _this.activateButtonForBlink(btn); }, delay);
            delay += 1.0;
        });
        this.scheduleOnce(function () {
            _this.enableAnswerInput();
        }, delay);
    };
    GameController.prototype.activateButtonForBlink = function (button) {
        var originalScale = button.node.scale;
        button.node.opacity = 100;
        button.interactable = false;
        cc.tween(button.node)
            .to(0.15, { opacity: 255, scale: originalScale * 1.05 }, { easing: "quadOut" })
            .to(0.15, { opacity: 100, scale: originalScale }, { easing: "quadIn" })
            .start();
    };
    GameController.prototype.enableAnswerInput = function () {
        Object.values(this.buttonMap).forEach(function (btn) {
            var bg = btn.node.getChildByName("Background");
            if (bg) {
                btn.node.setContentSize(bg.getContentSize());
            }
            btn.node.opacity = 255;
            btn.interactable = true;
            console.log(btn.node.name + " size:", btn.node.width, btn.node.height);
        });
    };
    GameController.prototype.updateScore = function () {
        if (this.scoreLabel) {
            this.scoreLabel.string = "" + this.score;
        }
    };
    GameController.prototype.disableButtons = function (disable) {
        Object.values(this.buttonMap).forEach(function (btn) {
            btn.interactable = !disable;
        });
    };
    // loadList() {
    //     cc.director.loadScene("SingleGameList");
    // }
    /**
     * MultiGameFlowController.endGame(this) 을 호출할 수 있도록 하는 헬퍼 메서드입니다.
     * - isGameOver 플래그 세팅
     * - 모든 스케줄러 해제
     * - 서버에 game-end emit
     */
    GameController.prototype.endGame = function () {
        MultiFlowController_1.default.endGame(this);
    };
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "startButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "redButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "yellowButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "greenButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "blueButton", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameController.prototype, "frogSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "scoreUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "timerUIPrefab", void 0);
    GameController = __decorate([
        ccclass
    ], GameController);
    return GameController;
}(cc.Component));
exports.default = GameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/BlockCountGame/BlockCountGameManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6261fun9LFBEqfVgT7AVufD', 'BlockCountGameManager');
// scripts/Sim/BlockCountGame/BlockCountGameManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameManager = /** @class */ (function (_super) {
    __extends(GameManager, _super);
    function GameManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.optionButtons = [];
        _this.resultLabel = null;
        _this.blockParent = null;
        _this.blockPrefab = null;
        _this.nextButton = null;
        _this.gameStartOverlayPrefab = null;
        _this.gameOverUIPrefab = null;
        _this.exitButton = null;
        // 추가된 프리팹 속성
        _this.scoreUIPrefab = null;
        _this.timeUIPrefab = null;
        // 내부에서 연결될 Label 컴포넌트
        _this.scoreLabel = null;
        _this.timeLabel = null;
        _this.correctCount = 0;
        _this.score = 0;
        _this.answered = false;
        _this.timeLeft = 60;
        _this.blockTextures = [
            "Images/Sim/navyBlock",
            "Images/Sim/darkBlueBlock",
            "Images/Sim/blueBlock",
            "Images/Sim/whiteblueBlock"
        ];
        return _this;
    }
    GameManager.prototype.onLoad = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        cc.debug.setDisplayStats(false);
        // Score UI 프리팹 인스턴스화
        if (this.scoreUIPrefab) {
            var scoreUI = cc.instantiate(this.scoreUIPrefab);
            this.node.addChild(scoreUI);
            var scoreLabelNode = scoreUI.getChildByName("ScoreLabel");
            if (scoreLabelNode) {
                this.scoreLabel = scoreLabelNode.getComponent(cc.Label);
            }
            if (!this.scoreLabel) {
                console.warn("⚠️ ScoreLabel 연결 실패! 프리팹 구조 또는 노드 이름을 확인하세요.");
            }
        }
        // Time UI 프리팹 인스턴스화
        if (this.timeUIPrefab) {
            var timeUI = cc.instantiate(this.timeUIPrefab);
            this.node.addChild(timeUI);
            var timeLabelNode = timeUI.getComponentInChildren(cc.Label); // 일반적인 구조
            if (timeLabelNode) {
                this.timeLabel = timeLabelNode;
            }
            if (!this.timeLabel) {
                console.warn("⚠️ TimeLabel 연결 실패! 프리팹 구조 또는 컴포넌트 확인하세요.");
            }
        }
        if (this.nextButton) {
            this.nextButton.node.on('click', this.nextQuestion, this);
        }
        this.score = 0;
        if (this.scoreLabel)
            this.scoreLabel.string = "" + this.score;
        this.timeLeft = 100;
        if (this.timeLabel)
            this.timeLabel.string = "" + this.timeLeft;
        if (this.gameStartOverlayPrefab) {
            var overlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(overlay);
            overlay.setPosition(0, 0);
            this.scheduleOnce(function () { return _this.startGame(); }, 2);
        }
        else {
            this.startGame();
        }
    };
    GameManager.prototype.startGame = function () {
        this.startTimer();
        this.generateQuestion();
    };
    GameManager.prototype.startTimer = function () {
        this.unschedule(this.updateTimer);
        this.timeLeft = 30;
        if (this.timeLabel)
            this.timeLabel.string = "" + this.timeLeft;
        this.schedule(this.updateTimer, 1);
    };
    GameManager.prototype.updateTimer = function () {
        this.timeLeft--;
        if (this.timeLabel)
            this.timeLabel.string = "" + this.timeLeft;
        if (this.timeLeft <= 0) {
            this.unschedule(this.updateTimer);
            this.onTimeout();
        }
    };
    GameManager.prototype.onTimeout = function () {
        this.optionButtons.forEach(function (btn) { return btn.interactable = false; });
        if (this.nextButton)
            this.nextButton.interactable = false;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "block-count-game";
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI);
        gameOverUI.setPosition(0, 0);
    };
    GameManager.prototype.generateQuestion = function () {
        var _this = this;
        this.answered = false;
        if (this.nextButton) {
            var lbl = this.nextButton.node.getComponentInChildren(cc.Label);
            lbl.string = '건너뛰기';
            this.nextButton.interactable = true;
        }
        this.resultLabel.string = '';
        this.correctCount = Math.floor(Math.random() * 20) + 1;
        this.spawnBlocks(this.correctCount);
        var options = new Set([this.correctCount]);
        while (options.size < this.optionButtons.length) {
            options.add(Math.floor(Math.random() * 30) + 1);
        }
        var list = Array.from(options);
        this.shuffleArray(list);
        this.optionButtons.forEach(function (btn, i) {
            btn.interactable = true;
            var lbl = btn.node.getComponentInChildren(cc.Label);
            lbl.string = list[i].toString();
            btn.node.off('click');
            btn.node.on('click', function () { return _this.checkAnswer(list[i]); });
        });
    };
    /** 답안 확인 */
    GameManager.prototype.checkAnswer = function (selected) {
        if (this.answered)
            return;
        // 정답인 경우
        if (selected === this.correctCount) {
            this.answered = true;
            this.resultLabel.string = '🎉 정답입니다!';
            this.score += 20; // 맞았을 때 +10
            if (this.scoreLabel) {
                this.scoreLabel.string = "" + this.score;
            }
            if (this.nextButton) {
                var lbl = this.nextButton.node.getComponentInChildren(cc.Label);
                lbl.string = '다음으로';
            }
        }
        // 오답인 경우
        else {
            this.resultLabel.string = '❌ 틀렸습니다!';
            this.score -= 10; // 틀렸을 때 -10
            if (this.scoreLabel) {
                this.scoreLabel.string = "" + this.score;
            }
            if (this.nextButton) {
                var lbl = this.nextButton.node.getComponentInChildren(cc.Label);
                lbl.string = '건너뛰기';
            }
        }
    };
    GameManager.prototype.nextQuestion = function () {
        if (this.timeLeft > 0) {
            this.generateQuestion();
        }
    };
    GameManager.prototype.spawnBlocks = function (count) {
        var _this = this;
        if (!this.blockParent) {
            console.error('[GameManager] blockParent가 연결되지 않았습니다!');
            return;
        }
        this.blockParent.removeAllChildren();
        var blockW = 100, blockH = 50, blockD = 50;
        var maxSize = 4, maxHeight = 4;
        var xzList = [];
        for (var x = 0; x < maxSize; x++) {
            for (var z = 0; z < maxSize; z++) {
                xzList.push({ x: x, z: z });
            }
        }
        this.shuffleArray(xzList);
        var placedCoords = [];
        var placed = 0;
        outer: for (var _i = 0, xzList_1 = xzList; _i < xzList_1.length; _i++) {
            var _a = xzList_1[_i], x = _a.x, z = _a.z;
            for (var y = 0; y < maxHeight && placed < count; y++) {
                placedCoords.push({ x: x, z: z, y: y });
                placed++;
            }
            if (placed >= count)
                break outer;
        }
        var layers = [];
        var maxY = 0;
        placedCoords.forEach(function (p) {
            maxY = Math.max(maxY, p.y);
            if (!layers[p.y])
                layers[p.y] = [];
            layers[p.y].push(p);
        });
        var dropH = 500;
        var dropDur = 0.15;
        var layerGap = dropDur + 0.08;
        var itemGap = 0.05;
        var _loop_1 = function (y) {
            var layer = layers[y] || [];
            layer.forEach(function (p, i) {
                var _a;
                var block = cc.instantiate(_this.blockPrefab);
                block.parent = _this.blockParent;
                block.zIndex = p.x + p.z + p.y * 10;
                var isoX = (p.x - p.z) * (blockW / 2);
                var floorY = -300;
                var baseY = floorY + blockH / 2;
                var targetY = -(p.x + p.z) * (blockH / 2) + baseY + p.y * blockD;
                block.setPosition(isoX, targetY + dropH, 0);
                var spr = block.getComponent(cc.Sprite);
                var texPath = (_a = _this.blockTextures[p.y]) !== null && _a !== void 0 ? _a : _this.blockTextures[0];
                cc.resources.load(texPath, cc.SpriteFrame, function (err, spriteFrame) {
                    if (!err && spriteFrame) {
                        spr.spriteFrame = spriteFrame;
                    }
                    else {
                        console.warn("\uBE14\uB85D \uD14D\uC2A4\uCC98 \uB85C\uB4DC \uC2E4\uD328: " + texPath, err);
                    }
                });
                var totalDelay = y * layerGap + i * itemGap;
                cc.tween(block)
                    .delay(totalDelay)
                    .to(dropDur, { position: cc.v3(isoX, targetY, 0) }, { easing: 'bounceOut' })
                    .start();
            });
        };
        for (var y = 0; y <= maxY; y++) {
            _loop_1(y);
        }
    };
    GameManager.prototype.shuffleArray = function (arr) {
        var _a;
        for (var i = arr.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            _a = [arr[j], arr[i]], arr[i] = _a[0], arr[j] = _a[1];
        }
    };
    GameManager.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        cc.director.loadScene('SingleGameList');
    };
    __decorate([
        property([cc.Button])
    ], GameManager.prototype, "optionButtons", void 0);
    __decorate([
        property(cc.Label)
    ], GameManager.prototype, "resultLabel", void 0);
    __decorate([
        property(cc.Node)
    ], GameManager.prototype, "blockParent", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "blockPrefab", void 0);
    __decorate([
        property(cc.Button)
    ], GameManager.prototype, "nextButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Button)
    ], GameManager.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "scoreUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameManager.prototype, "timeUIPrefab", void 0);
    GameManager = __decorate([
        ccclass
    ], GameManager);
    return GameManager;
}(cc.Component));
exports.default = GameManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/MultiReversecorrect/Multiplayer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e0b84fKovhGYYoLlzb6J7OF', 'Multiplayer');
// scripts/Song/MultiReversecorrect/Multiplayer.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Multiplayer = /** @class */ (function (_super) {
    __extends(Multiplayer, _super);
    function Multiplayer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scoreDisplayPrefab = null;
        _this.timerDisplayPrefab = null;
        _this.correctSign = null;
        _this.wrongSign = null;
        _this.sequenceLabel = null;
        _this.input_label = null;
        _this.random_label = null;
        _this.layout = null;
        _this.reverseLabel = null;
        _this.verseLabel = null;
        _this.numbersToShow = [];
        _this.userInput = [];
        _this.isReverseMode = false;
        _this.correctCount = 0;
        _this.score = 0;
        _this.questionLength = 3;
        _this.timer = 30;
        _this.scoreLabel = null;
        _this.timerLabel = null;
        _this.inputEnabled = false;
        _this.isGameOver = false;
        _this.lastSentQuestion = null;
        return _this;
    }
    Multiplayer.prototype.startGame = function () {
        var _this = this;
        this.initScoreUI();
        this.initTimerUI();
        this.schedule(this.decreaseTimer, 1);
        this.showNewQuestion();
        this.registerButtons();
        window.socket.on("game-event", function (data) {
            if (data.type === "guest-ready") {
                var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
                if (GameState_1.default.isHost && _this.lastSentQuestion) {
                    console.log("[DEBUG] guest-ready 수신 → 마지막 문제 재전송");
                    window.socket.emit("game-event", {
                        type: "spawn-question",
                        roomId: roomId,
                        payload: _this.lastSentQuestion
                    });
                }
            }
        });
    };
    Multiplayer.prototype.initScoreUI = function () {
        var scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(scoreNode);
        this.scoreLabel = scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
    };
    Multiplayer.prototype.initTimerUI = function () {
        var timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(timerNode);
        this.timerLabel = timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
    };
    Multiplayer.prototype.updateScoreLabel = function () {
        if (this.scoreLabel)
            this.scoreLabel.string = "" + this.score;
    };
    Multiplayer.prototype.updateTimerLabel = function () {
        if (this.timerLabel)
            this.timerLabel.string = "" + this.timer;
    };
    Multiplayer.prototype.decreaseTimer = function () {
        if (--this.timer < 0) {
            this.endGame();
            return;
        }
        this.updateTimerLabel();
    };
    Multiplayer.prototype.registerButtons = function () {
        var _this = this;
        if (!this.layout) {
            cc.warn("layout이 설정되지 않았습니다.");
            return;
        }
        var buttons = this.layout.getComponentsInChildren(cc.Button);
        buttons.forEach(function (btn) {
            btn.node.on("touchend", _this.onButtonClicked, _this);
        });
    };
    Multiplayer.prototype.onButtonClicked = function (event) {
        if (!this.inputEnabled)
            return;
        var btnNode = event.target;
        var num = 0;
        switch (btnNode.name) {
            case "number1":
                num = 1;
                break;
            case "number2":
                num = 2;
                break;
            case "number3":
                num = 3;
                break;
            case "number4":
                num = 4;
                break;
            case "number5":
                num = 5;
                break;
            case "number6":
                num = 6;
                break;
            case "number7":
                num = 7;
                break;
            case "number8":
                num = 8;
                break;
            case "number9":
                num = 9;
                break;
            default:
                console.warn("알 수 없는 버튼 이름:", btnNode.name);
                return;
        }
        this.userInput.push(num);
        if (this.input_label) {
            this.input_label.string = this.userInput.join("");
        }
        var expected = this.isReverseMode ? __spreadArrays(this.numbersToShow).reverse() : this.numbersToShow;
        for (var i = 0; i < this.userInput.length; i++) {
            if (this.userInput[i] !== expected[i]) {
                this.handleWrongAnswer();
                return;
            }
        }
        if (this.userInput.length === expected.length) {
            this.handleCorrectAnswer();
        }
    };
    Multiplayer.prototype.handleCorrectAnswer = function () {
        var _this = this;
        this.inputEnabled = false;
        if (this.correctSign)
            this.correctSign.active = true;
        this.correctCount++;
        this.score += 10;
        this.updateScoreLabel();
        this.sendAnswerResult(true);
        this.scheduleOnce(function () {
            if (_this.correctSign)
                _this.correctSign.active = false;
            _this.showNewQuestion();
        }, 1.5);
    };
    Multiplayer.prototype.handleWrongAnswer = function () {
        var _this = this;
        this.inputEnabled = false;
        this.sendAnswerResult(false);
        if (this.wrongSign)
            this.wrongSign.active = true;
        this.scheduleOnce(function () {
            if (_this.wrongSign)
                _this.wrongSign.active = false;
            _this.showNewQuestion();
        }, 1.5);
    };
    Multiplayer.prototype.sendAnswerResult = function (isCorrect) {
        var inputSnapshot = this.userInput.slice();
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        window.socket.emit("game-event", {
            type: "answer-result",
            roomId: roomId,
            payload: {
                input: inputSnapshot,
                isCorrect: isCorrect
            }
        });
        if (isCorrect) {
            console.log("점수 emit 호출");
            window.socket.emit("game-event", {
                type: "score-update",
                roomId: roomId,
                payload: {
                    player: GameState_1.default.isHost ? "host" : "guest",
                    score: this.score
                }
            });
        }
    };
    Multiplayer.prototype.showNewQuestion = function () {
        var _this = this;
        this.inputEnabled = false;
        this.userInput = [];
        if (this.input_label)
            this.input_label.string = "";
        this.isReverseMode = Math.random() < 0.5;
        var milestone = Math.floor(this.correctCount / 3);
        this.questionLength = 3 + milestone;
        var hideDelay = Math.max(0.8, 1.5 - milestone * 0.2);
        this.numbersToShow = [];
        var candidate = [1, 2, 3, 4, 5, 6, 7, 8, 9];
        for (var i = 0; i < this.questionLength; i++) {
            var rand = candidate[Math.floor(Math.random() * candidate.length)];
            this.numbersToShow.push(rand);
        }
        if (this.random_label) {
            this.random_label.string = this.numbersToShow.join("");
            this.random_label.node.active = true;
        }
        if (this.reverseLabel)
            this.reverseLabel.node.active = false;
        if (this.verseLabel)
            this.verseLabel.node.active = false;
        this.scheduleOnce(function () {
            if (_this.random_label)
                _this.random_label.node.active = false;
            if (_this.isReverseMode && _this.reverseLabel) {
                _this.reverseLabel.node.active = true;
            }
            else if (!_this.isReverseMode && _this.verseLabel) {
                _this.verseLabel.node.active = true;
            }
            _this.inputEnabled = true;
        }, hideDelay);
        var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
        this.lastSentQuestion = {
            numbers: this.numbersToShow,
            direction: this.isReverseMode ? "reverse" : "forward"
        };
        window.socket.emit("game-event", {
            type: "spawn-question",
            roomId: roomId,
            payload: this.lastSentQuestion
        });
    };
    Multiplayer.prototype.endGame = function () {
        var _this = this;
        MultiFlowController_1.default.endGame({
            isGameOver: this.isGameOver,
            unscheduleAllCallbacks: function () { return _this.unscheduleAllCallbacks(); },
            score: this.score
        });
    };
    __decorate([
        property(cc.Prefab)
    ], Multiplayer.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], Multiplayer.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], Multiplayer.prototype, "correctSign", void 0);
    __decorate([
        property(cc.Node)
    ], Multiplayer.prototype, "wrongSign", void 0);
    __decorate([
        property(cc.Label)
    ], Multiplayer.prototype, "sequenceLabel", void 0);
    __decorate([
        property(cc.Label)
    ], Multiplayer.prototype, "input_label", void 0);
    __decorate([
        property(cc.Label)
    ], Multiplayer.prototype, "random_label", void 0);
    __decorate([
        property(cc.Node)
    ], Multiplayer.prototype, "layout", void 0);
    __decorate([
        property(cc.Sprite)
    ], Multiplayer.prototype, "reverseLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], Multiplayer.prototype, "verseLabel", void 0);
    Multiplayer = __decorate([
        ccclass
    ], Multiplayer);
    return Multiplayer;
}(cc.Component));
exports.default = Multiplayer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Sim/RememberGame/RememberGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '45b47OOq/pH4qjX1/B+5QI+', 'RememberGameController');
// scripts/Sim/RememberGame/RememberGameController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GameState_1 = require("../../Controller/CommonUI/GameState");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameController = /** @class */ (function (_super) {
    __extends(GameController, _super);
    function GameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startButton = null;
        _this.redButton = null;
        _this.yellowButton = null;
        _this.greenButton = null;
        _this.blueButton = null;
        _this.statusLabel = null;
        _this.hintLabel = null;
        _this.exitButton = null;
        _this.frogSprite = null;
        _this.gameStartOverlayPrefab = null;
        _this.gameOverUIPrefab = null;
        _this.scoreUIPrefab = null;
        _this.timerUIPrefab = null;
        _this.scoreLabel = null;
        _this.timerLabel = null;
        _this.colorSequence = [];
        _this.userInput = [];
        _this.score = 0;
        _this.level = 1;
        _this.isGameActive = false;
        _this.remainingTime = 0;
        _this.buttonMap = {};
        _this.colors = ["red", "yellow", "green", "blue"];
        return _this;
    }
    GameController.prototype.onLoad = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        // ✅ Score UI 프리팹 인스턴스화 및 Label 연결
        if (this.scoreUIPrefab) {
            var scoreUI = cc.instantiate(this.scoreUIPrefab);
            this.node.addChild(scoreUI);
            var scoreLabelNode = scoreUI.getChildByName("ScoreLabel");
            if (scoreLabelNode) {
                this.scoreLabel = scoreLabelNode.getComponent(cc.Label);
            }
            if (!this.scoreLabel) {
                console.warn("⚠️ ScoreLabel 연결 실패: 프리팹 구조를 확인하세요.");
            }
        }
        // ✅ Timer UI 프리팹 인스턴스화 및 Label 연결
        if (this.timerUIPrefab) {
            var timerUI = cc.instantiate(this.timerUIPrefab);
            this.node.addChild(timerUI);
            var timerLabelNode = timerUI.getChildByName("TimerLabel");
            if (timerLabelNode) {
                this.timerLabel = timerLabelNode.getComponent(cc.Label);
            }
            if (!this.timerLabel) {
                console.warn("⚠️ TimerLabel 연결 실패: 프리팹 구조를 확인하세요.");
            }
        }
        // ✅ 게임 시작 오버레이
        if (this.gameStartOverlayPrefab) {
            var overlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(overlay);
            overlay.setPosition(0, 0);
            this.scheduleOnce(function () {
                _this.beginGame();
            }, 2);
        }
        else {
            this.beginGame();
        }
        cc.debug.setDisplayStats(false);
        // 버튼 매핑 및 클릭 이벤트 설정
        this.buttonMap = {
            red: this.redButton,
            yellow: this.yellowButton,
            green: this.greenButton,
            blue: this.blueButton
        };
        this.startButton.node.on('click', this.onStartGame, this);
        this.redButton.node.on('click', function () { return _this.onColorButtonClick('red'); }, this);
        this.yellowButton.node.on('click', function () { return _this.onColorButtonClick('yellow'); }, this);
        this.greenButton.node.on('click', function () { return _this.onColorButtonClick('green'); }, this);
        this.blueButton.node.on('click', function () { return _this.onColorButtonClick('blue'); }, this);
        this.setInitialButtonState();
        this.startButton.node.active = false;
        // ✅ 더 이상 timerLabel.node.active = false 제거 (프리팹에서 직접 조절)
        this.tickCallback = this.updateTimer.bind(this);
        this.setFrogState("neutral");
        // 테스트용 콘솔 로그
        cc.find('Canvas/yellowButton').on('click', function () { return console.log('yellowButton 눌림'); });
        cc.find('Canvas/greenButton').on('click', function () { return console.log('greenButton 눌림'); });
        cc.find('Canvas/blueButton').on('click', function () { return console.log('blueButton 눌림'); });
        cc.find('Canvas/redButton').on('click', function () { return console.log('redButton 눌림'); });
    };
    GameController.prototype.beginGame = function () {
        if (this.isGameActive)
            return; // 중복 방지
        this.colorSequence = [];
        this.userInput = [];
        this.score = 0;
        this.level = 1;
        this.updateScore();
        this.setStatusMessage("게임 시작!");
        this.hintLabel.string = "";
        this.isGameActive = true;
        this.setFrogState("neutral");
        this.startTimer();
        this.generateColorSequence();
        this.showColorSequence();
    };
    GameController.prototype.setFrogState = function (state) {
        var _this = this;
        var spriteMap = {
            neutral: "무표정개굴",
            smile: "웃는개굴",
            cry: "우는개굴"
        };
        // 이미지마다 개별 사이즈 지정
        var sizeMap = {
            neutral: { width: 450, height: 510 },
            smile: { width: 450, height: 600 },
            cry: { width: 600, height: 500 }
        };
        var spriteName = spriteMap[state];
        var size = sizeMap[state];
        cc.resources.load("Images/Sim/" + spriteName, cc.SpriteFrame, function (err, spriteFrame) {
            if (err) {
                console.error("\uAC1C\uAD6C\uB9AC \uC774\uBBF8\uC9C0 \uB85C\uB4DC \uC2E4\uD328: " + spriteName, err);
                return;
            }
            _this.frogSprite.spriteFrame = spriteFrame;
            _this.frogSprite.type = cc.Sprite.Type.SIMPLE;
            _this.frogSprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
            _this.frogSprite.node.setContentSize(size.width, size.height);
        });
    };
    GameController.prototype.onStartGame = function () {
        var btnLabel = this.startButton.node.getComponentInChildren(cc.Label).string;
        if (btnLabel === "다시 도전") {
            this.userInput = [];
            this.setStatusMessage("현재 단계 다시 시작!");
            this.hintLabel.string = "";
            this.isGameActive = true;
            this.startButton.node.active = false;
            this.setFrogState("neutral");
            this.generateColorSequence();
            this.showColorSequence();
        }
    };
    GameController.prototype.onColorButtonClick = function (color) {
        if (!this.isGameActive)
            return;
        if (!this.buttonMap[color].interactable)
            return;
        var btn = this.buttonMap[color];
        var originalScale = btn.node.scale;
        var originalPos = btn.node.getPosition();
        // 연잎 클릭 효과 (강조 버전)
        cc.tween(btn.node)
            .parallel(cc.tween().to(0.1, { scale: originalScale * 0.85 }, { easing: 'quadIn' }), cc.tween().to(0.1, { opacity: 180 }), cc.tween().to(0.1, { position: cc.v3(originalPos.x, originalPos.y - 5) }))
            .parallel(cc.tween().to(0.1, { scale: originalScale }, { easing: 'quadOut' }), cc.tween().to(0.1, { opacity: 255 }), cc.tween().to(0.1, { position: originalPos }))
            .start();
        this.userInput.push(color);
        this.checkUserInput();
    };
    GameController.prototype.updateTimer = function () {
        this.remainingTime--;
        this.timerLabel.string = "" + this.remainingTime;
        if (this.remainingTime <= 0) {
            this.unschedule(this.tickCallback);
            this.onTimeUp();
        }
    };
    GameController.prototype.startTimer = function () {
        this.unschedule(this.tickCallback);
        this.remainingTime = 30;
        this.timerLabel.string = "" + this.remainingTime;
        this.timerLabel.node.active = true;
        this.schedule(this.tickCallback, 1);
    };
    GameController.prototype.onTimeUp = function () {
        this.isGameActive = false;
        this.disableButtons(true);
        this.startButton.interactable = false;
        // 게임 상태 저장
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "remember-game"; // 기억력 게임 고유 식별자
        // 게임종료 Prefab 생성
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI); // 또는 Canvas에 직접 붙여도 됨
        // 정중앙 배치
        gameOverUI.setPosition(0, 0);
    };
    GameController.prototype.checkUserInput = function () {
        var _this = this;
        var correct = true;
        var targetSequence = this.level === 3 ? __spreadArrays(this.colorSequence).reverse() : this.colorSequence;
        for (var i = 0; i < this.userInput.length; i++) {
            if (this.userInput[i] !== targetSequence[i]) {
                correct = false;
                break;
            }
        }
        if (correct && this.userInput.length === targetSequence.length) {
            this.setFrogState("smile");
            this.setStatusMessage("정답! 다음 단계로!");
            this.score += 10;
            this.updateScore();
            this.userInput = [];
            this.level++;
            this.scheduleOnce(function () {
                _this.generateColorSequence();
                _this.showColorSequence();
            }, 3);
        }
        else if (!correct) {
            this.setFrogState("cry");
            this.setStatusMessage("틀렸습니다! 다시 시도하세요.");
            this.userInput = [];
            this.startButton.node.getComponentInChildren(cc.Label).string = "다시 도전";
            this.startButton.node.active = true;
            this.isGameActive = false;
            this.disableButtons(true);
        }
    };
    GameController.prototype.generateColorSequence = function () {
        this.colorSequence = [];
        var length = this.level >= 5 ? 7 : this.level + 2;
        for (var i = 0; i < length; i++) {
            var idx = Math.floor(Math.random() * this.colors.length);
            this.colorSequence.push(this.colors[idx]);
        }
        this.hintLabel.string = this.level === 3 ? "불이 깜빡이는 순서를 반대로 입력하라." : "";
        console.log("생성된 색상 순서:", this.colorSequence);
    };
    GameController.prototype.setInitialButtonState = function () {
        Object.values(this.buttonMap).forEach(function (btn) {
            btn.node.opacity = 100;
            btn.interactable = false;
        });
    };
    GameController.prototype.showColorSequence = function () {
        var _this = this;
        this.setFrogState("neutral");
        this.setInitialButtonState();
        var delay = 0;
        this.colorSequence.forEach(function (color) {
            var btn = _this.buttonMap[color];
            _this.scheduleOnce(function () { return _this.activateButtonForBlink(btn); }, delay);
            delay += 1.0;
        });
        this.scheduleOnce(function () {
            _this.enableAnswerInput();
            _this.setStatusMessage("버튼 순서를 맞춰주세요!");
        }, delay);
    };
    GameController.prototype.activateButtonForBlink = function (button) {
        var originalScale = button.node.scale;
        button.node.opacity = 100;
        button.interactable = false;
        cc.tween(button.node)
            .to(0.15, { opacity: 255, scale: originalScale * 1.05 }, { easing: 'quadOut' })
            .to(0.15, { opacity: 100, scale: originalScale }, { easing: 'quadIn' })
            .start();
    };
    GameController.prototype.enableAnswerInput = function () {
        Object.values(this.buttonMap).forEach(function (btn) {
            var bg = btn.node.getChildByName('Background');
            if (bg) {
                // 💡 Background의 크기를 따라가게 맞춤
                btn.node.setContentSize(bg.getContentSize());
            }
            btn.node.opacity = 255;
            btn.interactable = true;
            console.log(btn.node.name + " size:", btn.node.width, btn.node.height);
        });
    };
    GameController.prototype.updateScore = function () {
        this.scoreLabel.string = "" + this.score;
    };
    GameController.prototype.setStatusMessage = function (message) {
        this.statusLabel.string = message;
    };
    GameController.prototype.disableButtons = function (disable) {
        Object.values(this.buttonMap).forEach(function (btn) {
            btn.interactable = !disable;
        });
    };
    GameController.prototype.loadList = function () {
        cc.director.loadScene('SingleGameList');
    };
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "startButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "redButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "yellowButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "greenButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "blueButton", void 0);
    __decorate([
        property(cc.Label)
    ], GameController.prototype, "statusLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameController.prototype, "hintLabel", void 0);
    __decorate([
        property(cc.Button)
    ], GameController.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameController.prototype, "frogSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "scoreUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameController.prototype, "timerUIPrefab", void 0);
    GameController = __decorate([
        ccclass
    ], GameController);
    return GameController;
}(cc.Component));
exports.default = GameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Show_QnA.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd5e77uqnYZN8Zczx4Uw6LMj', 'Reversecorrect_Show_QnA');
// scripts/Song/Reversecorrect_scripts/Reversecorrect_Show_QnA.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var show_QnA = /** @class */ (function (_super) {
    __extends(show_QnA, _super);
    function show_QnA() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.random_label = null;
        _this.buttonLayout = null;
        _this.reverse_label = null;
        _this.verse_label = null;
        _this.sequence_label = null;
        _this.cnt = 3; // 시작 문제 자리수
        _this.hideDelay = 1.5;
        _this.defaultHideDelay = 2;
        _this.minHideDelay = 0.1;
        _this.lastMilestone = 0; //
        return _this;
    }
    show_QnA_1 = show_QnA;
    show_QnA.prototype.start = function () {
        this.showNewQuestion();
    };
    // 문제 표시 및 방향 설정, 숨김 시간 조절
    show_QnA.prototype.showNewQuestion = function () {
        var _this = this;
        var roundIndex = show_QnA_1.correctCount % 3;
        this.hideDelay = 1.6 - (roundIndex * 0.2);
        // 랜덤 방향 결정
        show_QnA_1.isReverse = Math.random() < 0.5;
        // 문제 숫자 생성 및 표시
        var randomNum = this.print_randnum();
        this.random_label.string = "" + randomNum;
        this.random_label.node.active = true;
        this.setButtonsInteractable(false);
        // 방향 이미지 초기화
        this.reverse_label.node.active = false;
        this.verse_label.node.active = false;
        this.scheduleOnce(function () {
            // 숫자 숨기기
            _this.random_label.node.active = false;
            // 방향 이미지 표시
            if (show_QnA_1.isReverse) {
                _this.reverse_label.node.active = true;
            }
            else {
                _this.verse_label.node.active = true;
            }
            // 게임 오버 상태가 아니면 버튼 활성화
            _this.setButtonsInteractable(!show_QnA_1.isGameOver);
        }, this.hideDelay);
    };
    // 문제 숫자 배열 생성 + 자리수 조절
    show_QnA.prototype.make_randnum = function () {
        show_QnA_1.qa = [];
        var candid = [1, 2, 3, 4, 5, 6, 7, 8, 9];
        var milestone = Math.floor(show_QnA_1.correctCount / 3);
        if (milestone > this.lastMilestone) {
            this.cnt++;
            this.lastMilestone = milestone;
            this.hideDelay = this.defaultHideDelay;
        }
        for (var i = 0; i < this.cnt; i++) {
            var rand = candid[Math.floor(Math.random() * candid.length)];
            show_QnA_1.qa.push(rand);
        }
        return show_QnA_1.qa;
    };
    // 숫자 배열을 실제 숫자 값으로 출력
    show_QnA.prototype.print_randnum = function () {
        var numbers = this.make_randnum();
        var result = 0;
        for (var i = 0; i < numbers.length; i++) {
            result = result * 10 + numbers[i];
        }
        return result;
    };
    // 버튼 인터랙션 켜고 끄기
    show_QnA.prototype.setButtonsInteractable = function (state) {
        var buttons = this.buttonLayout.getComponentsInChildren(cc.Button);
        for (var _i = 0, buttons_1 = buttons; _i < buttons_1.length; _i++) {
            var btn = buttons_1[_i];
            btn.interactable = state;
            if (state) {
                btn.node.resumeSystemEvents(true);
            }
            else {
                btn.node.pauseSystemEvents(true);
            }
        }
    };
    var show_QnA_1;
    show_QnA.correctCount = 0;
    show_QnA.qa = [];
    show_QnA.isGameOver = false;
    show_QnA.isReverse = false;
    __decorate([
        property(cc.Label)
    ], show_QnA.prototype, "random_label", void 0);
    __decorate([
        property(cc.Node)
    ], show_QnA.prototype, "buttonLayout", void 0);
    __decorate([
        property(cc.Sprite)
    ], show_QnA.prototype, "reverse_label", void 0);
    __decorate([
        property(cc.Sprite)
    ], show_QnA.prototype, "verse_label", void 0);
    __decorate([
        property(cc.Label)
    ], show_QnA.prototype, "sequence_label", void 0);
    show_QnA = show_QnA_1 = __decorate([
        ccclass
    ], show_QnA);
    return show_QnA;
}(cc.Component));
exports.default = show_QnA;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn_manager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f5a9eAEZjtNuIymEkL0217h', 'Rottenacorn_acorn_manager');
// scripts/Song/Rottenacorn_scripts/Rottenacorn_acorn_manager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Rottenacorn_acorn_1 = require("./Rottenacorn_acorn");
var AcornManager = /** @class */ (function (_super) {
    __extends(AcornManager, _super);
    function AcornManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.acornPrefab = null;
        _this.acornParent = null;
        _this.pool = [];
        return _this;
    }
    AcornManager.prototype.onLoad = function () {
        this.initPool();
    };
    AcornManager.prototype.initPool = function () {
        for (var i = 0; i < 8; i++) {
            var acorn = cc.instantiate(this.acornPrefab);
            acorn.parent = this.acornParent;
            acorn.active = false;
            this.pool.push(acorn);
        }
    };
    AcornManager.prototype.getAcorn = function (isRotten) {
        for (var _i = 0, _a = this.pool; _i < _a.length; _i++) {
            var acorn = _a[_i];
            if (!acorn.active) {
                this.setupAcorn(acorn, isRotten);
                return acorn;
            }
        }
        return null;
    };
    AcornManager.prototype.setupAcorn = function (node, isRotten) {
        node.active = true;
        // activate() 호출로 물리 속도 + 벌레 처리
        var acornScript = node.getComponent(Rottenacorn_acorn_1.default);
        if (acornScript) {
            acornScript.activate(isRotten);
        }
        // 랜덤 위치 분산 배치
        var x = Math.random() * 400 - 200; // -200 ~ +200
        var y = Math.random() * 200 - 100; // -100 ~ +100
        node.setPosition(x, y);
    };
    AcornManager.prototype.resetAll = function () {
        for (var _i = 0, _a = this.pool; _i < _a.length; _i++) {
            var acorn = _a[_i];
            acorn.active = false;
        }
    };
    __decorate([
        property(cc.Prefab)
    ], AcornManager.prototype, "acornPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], AcornManager.prototype, "acornParent", void 0);
    AcornManager = __decorate([
        ccclass
    ], AcornManager);
    return AcornManager;
}(cc.Component));
exports.default = AcornManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUm90dGVuYWNvcm5fc2NyaXB0c1xcUm90dGVuYWNvcm5fYWNvcm5fbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUU1Qyx5REFBdUM7QUFHdkM7SUFBMEMsZ0NBQVk7SUFBdEQ7UUFBQSxxRUFzREM7UUFuREcsaUJBQVcsR0FBYyxJQUFJLENBQUM7UUFHOUIsaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFFcEIsVUFBSSxHQUFjLEVBQUUsQ0FBQzs7SUE4Q2pDLENBQUM7SUE1Q0csNkJBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsK0JBQVEsR0FBUjtRQUNJLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEIsSUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1lBQ2hDLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQUVELCtCQUFRLEdBQVIsVUFBUyxRQUFpQjtRQUN0QixLQUFrQixVQUFTLEVBQVQsS0FBQSxJQUFJLENBQUMsSUFBSSxFQUFULGNBQVMsRUFBVCxJQUFTLEVBQUU7WUFBeEIsSUFBSSxLQUFLLFNBQUE7WUFDVixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtnQkFDZixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztnQkFDakMsT0FBTyxLQUFLLENBQUM7YUFDaEI7U0FDSjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxpQ0FBVSxHQUFWLFVBQVcsSUFBYSxFQUFFLFFBQWlCO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBRW5CLCtCQUErQjtRQUMvQixJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLDJCQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLFdBQVcsRUFBRTtZQUNiLFdBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDbEM7UUFHRCxjQUFjO1FBQ2QsSUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBRSxjQUFjO1FBQ3BELElBQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUUsY0FBYztRQUNwRCxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsK0JBQVEsR0FBUjtRQUNJLEtBQWtCLFVBQVMsRUFBVCxLQUFBLElBQUksQ0FBQyxJQUFJLEVBQVQsY0FBUyxFQUFULElBQVMsRUFBRTtZQUF4QixJQUFJLEtBQUssU0FBQTtZQUNWLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQztJQWxERDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3FEQUNVO0lBRzlCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7cURBQ1U7SUFOWCxZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBc0RoQztJQUFELG1CQUFDO0NBdERELEFBc0RDLENBdER5QyxFQUFFLENBQUMsU0FBUyxHQXNEckQ7a0JBdERvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuaW1wb3J0IEFjb3JuIGZyb20gXCIuL1JvdHRlbmFjb3JuX2Fjb3JuXCJcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjb3JuTWFuYWdlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxuICAgIGFjb3JuUHJlZmFiOiBjYy5QcmVmYWIgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXG4gICAgYWNvcm5QYXJlbnQ6IGNjLk5vZGUgPSBudWxsO1xuXG4gICAgcHJpdmF0ZSBwb29sOiBjYy5Ob2RlW10gPSBbXTtcblxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgdGhpcy5pbml0UG9vbCgpO1xuICAgIH1cblxuICAgIGluaXRQb29sKCk6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgYWNvcm4gPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmFjb3JuUHJlZmFiKTtcbiAgICAgICAgICAgIGFjb3JuLnBhcmVudCA9IHRoaXMuYWNvcm5QYXJlbnQ7XG4gICAgICAgICAgICBhY29ybi5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucG9vbC5wdXNoKGFjb3JuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEFjb3JuKGlzUm90dGVuOiBib29sZWFuKTogY2MuTm9kZSB8IG51bGwge1xuICAgICAgICBmb3IgKGxldCBhY29ybiBvZiB0aGlzLnBvb2wpIHtcbiAgICAgICAgICAgIGlmICghYWNvcm4uYWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR1cEFjb3JuKGFjb3JuLCBpc1JvdHRlbik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjb3JuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHNldHVwQWNvcm4obm9kZTogY2MuTm9kZSwgaXNSb3R0ZW46IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgbm9kZS5hY3RpdmUgPSB0cnVlO1xuXG4gICAgICAgIC8vIGFjdGl2YXRlKCkg7Zi47Lac66GcIOusvOumrCDsho3rj4QgKyDrsozroIgg7LKY66asXG4gICAgICAgIGNvbnN0IGFjb3JuU2NyaXB0ID0gbm9kZS5nZXRDb21wb25lbnQoQWNvcm4pO1xuICAgICAgICBpZiAoYWNvcm5TY3JpcHQpIHtcbiAgICAgICAgICAgIGFjb3JuU2NyaXB0LmFjdGl2YXRlKGlzUm90dGVuKTtcbiAgICAgICAgfVxuICAgICAgICBcblxuICAgICAgICAvLyDrnpzrjaQg7JyE7LmYIOu2hOyCsCDrsLDsuZhcbiAgICAgICAgY29uc3QgeCA9IE1hdGgucmFuZG9tKCkgKiA0MDAgLSAyMDA7ICAvLyAtMjAwIH4gKzIwMFxuICAgICAgICBjb25zdCB5ID0gTWF0aC5yYW5kb20oKSAqIDIwMCAtIDEwMDsgIC8vIC0xMDAgfiArMTAwXG4gICAgICAgIG5vZGUuc2V0UG9zaXRpb24oeCwgeSk7XG4gICAgfVxuXG4gICAgcmVzZXRBbGwoKTogdm9pZCB7XG4gICAgICAgIGZvciAobGV0IGFjb3JuIG9mIHRoaXMucG9vbCkge1xuICAgICAgICAgICAgYWNvcm4uYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Load_Scene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c7b93ajJA1AFJpRaO4K/0k/', 'Reversecorrect_Load_Scene');
// scripts/Song/Reversecorrect_scripts/Reversecorrect_Load_Scene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.BackButton = null;
        return _this;
    }
    NewClass.prototype.start = function () {
        this.node.on("touchend", function () {
            cc.director.loadScene("Reversecorrect_mainscene");
        });
    };
    NewClass.prototype.onClickList = function () {
        cc.log("뒤로가기 버튼 클릭됨. SingleGameList 씬으로 이동.");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], NewClass.prototype, "BackButton", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUmV2ZXJzZWNvcnJlY3Rfc2NyaXB0c1xcUmV2ZXJzZWNvcnJlY3RfTG9hZF9TY2VuZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQWNDO1FBWkcsZ0JBQVUsR0FBYyxJQUFJLENBQUM7O0lBWWpDLENBQUM7SUFWRyx3QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO1lBQ3JCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDdEQsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsOEJBQVcsR0FBWDtRQUNBLEVBQUUsQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUM5QyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFYRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dEQUNTO0lBRlosUUFBUTtRQUQ1QixPQUFPO09BQ2EsUUFBUSxDQWM1QjtJQUFELGVBQUM7Q0FkRCxBQWNDLENBZHFDLEVBQUUsQ0FBQyxTQUFTLEdBY2pEO2tCQWRvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdDbGFzcyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KGNjLkJ1dHRvbilcbiAgICBCYWNrQnV0dG9uOiBjYy5CdXR0b24gPSBudWxsO1xuXG4gICAgc3RhcnQgKCkge1xuICAgICAgICB0aGlzLm5vZGUub24oXCJ0b3VjaGVuZFwiLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiUmV2ZXJzZWNvcnJlY3RfbWFpbnNjZW5lXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNsaWNrTGlzdCgpIHtcbiAgICBjYy5sb2coXCLrkqTroZzqsIDquLAg67KE7Yq8IO2BtOumreuQqC4gU2luZ2xlR2FtZUxpc3Qg7JSs7Jy866GcIOydtOuPmS5cIik7XG4gICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiU2luZ2xlR2FtZUxpc3RcIik7XG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_logic.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2c718aMM5FK8ZAbHIRNyguQ', 'Reversecorrect_Game_logic');
// scripts/Song/Reversecorrect_scripts/Reversecorrect_Game_logic.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Reversecorrect_Show_QnA_1 = require("./Reversecorrect_Show_QnA");
var Reversecorrect_Game_init_1 = require("./Reversecorrect_Game_init");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Game_logic = /** @class */ (function (_super) {
    __extends(Game_logic, _super);
    function Game_logic() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.player_label_display = null;
        _this.qna = null;
        _this.sequence_label = null;
        _this.reverse_label = null;
        _this.verse_label = null;
        return _this;
    }
    Game_logic_1 = Game_logic;
    //사용자가 입력하는 label 업데이트
    Game_logic.prototype.updateInputLabel = function () {
        var numString = Game_logic_1.player_label_arr.join("");
        this.player_label_display.string = numString;
    };
    //사용자가 입력하는 매 숫자가 맞는지 확인하는 함수 맞는다면 맞는 표시 틀리면 틀리는 표시 2초로 설정
    Game_logic.prototype.checkAnswer = function () {
        var _this = this;
        if (Reversecorrect_Show_QnA_1.default.isGameOver)
            return;
        var input = Game_logic_1.player_label_arr;
        var correct = Reversecorrect_Show_QnA_1.default.isReverse
            ? __spreadArrays(Reversecorrect_Show_QnA_1.default.qa).reverse()
            : __spreadArrays(Reversecorrect_Show_QnA_1.default.qa);
        for (var i = 0; i < input.length; i++) {
            if (input[i] !== correct[i]) {
                Reversecorrect_Game_init_1.default.instance.wrong_sign.active = true;
                this.qna.setButtonsInteractable(false);
                cc.director.pause();
                setTimeout(function () {
                    cc.director.resume();
                    Reversecorrect_Game_init_1.default.instance.wrong_sign.active = false;
                    _this.nextProblem(false);
                }, 1500);
                return;
            }
        }
        if (input.length === correct.length) {
            Reversecorrect_Game_init_1.default.instance.updateScore(10);
            Reversecorrect_Game_init_1.default.instance.correct_sign.active = true;
            this.qna.setButtonsInteractable(false);
            cc.director.pause();
            setTimeout(function () {
                cc.director.resume();
                Reversecorrect_Game_init_1.default.instance.correct_sign.active = false;
                _this.nextProblem(true);
            }, 1500);
        }
    };
    //맞았는지 틀렸는지 확인 후 카운트 세고 다음 문제로 넘어가는 함수
    Game_logic.prototype.nextProblem = function (isCorrect) {
        Game_logic_1.player_label_arr = [];
        Game_logic_1.count = 0;
        this.player_label_display.string = "";
        Reversecorrect_Show_QnA_1.default.qa = [];
        if (this.sequence_label) {
            this.sequence_label.string = "";
            this.sequence_label.node.active = false;
        }
        if (isCorrect) {
            Reversecorrect_Show_QnA_1.default.correctCount++;
        }
        if (this.qna) {
            this.qna.showNewQuestion();
        }
    };
    var Game_logic_1;
    Game_logic.player_label_arr = [];
    Game_logic.count = 0;
    __decorate([
        property(cc.Label)
    ], Game_logic.prototype, "player_label_display", void 0);
    __decorate([
        property(Reversecorrect_Show_QnA_1.default)
    ], Game_logic.prototype, "qna", void 0);
    __decorate([
        property(cc.Label)
    ], Game_logic.prototype, "sequence_label", void 0);
    __decorate([
        property(cc.Sprite)
    ], Game_logic.prototype, "reverse_label", void 0);
    __decorate([
        property(cc.Sprite)
    ], Game_logic.prototype, "verse_label", void 0);
    Game_logic = Game_logic_1 = __decorate([
        ccclass
    ], Game_logic);
    return Game_logic;
}(cc.Component));
exports.default = Game_logic;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUmV2ZXJzZWNvcnJlY3Rfc2NyaXB0c1xcUmV2ZXJzZWNvcnJlY3RfR2FtZV9sb2dpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEscUVBQWdEO0FBQ2hELHVFQUFrRDtBQUM1QyxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUF3Qyw4QkFBWTtJQUFwRDtRQUFBLHFFQWdGQztRQTlFRywwQkFBb0IsR0FBYSxJQUFJLENBQUM7UUFHdEMsU0FBRyxHQUFhLElBQUksQ0FBQztRQUdyQixvQkFBYyxHQUFjLElBQUksQ0FBQztRQUdqQyxtQkFBYSxHQUFlLElBQUksQ0FBQztRQUdqQyxpQkFBVyxHQUFlLElBQUksQ0FBQzs7SUFrRW5DLENBQUM7bUJBaEZvQixVQUFVO0lBa0IzQixzQkFBc0I7SUFDdEIscUNBQWdCLEdBQWhCO1FBQ0ksSUFBTSxTQUFTLEdBQUcsWUFBVSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsMERBQTBEO0lBQzFELGdDQUFXLEdBQVg7UUFBQSxpQkFrQ0M7UUFqQ0csSUFBSSxpQ0FBUSxDQUFDLFVBQVU7WUFBRSxPQUFPO1FBRWhDLElBQU0sS0FBSyxHQUFHLFlBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMxQyxJQUFNLE9BQU8sR0FBRyxpQ0FBUSxDQUFDLFNBQVM7WUFDOUIsQ0FBQyxDQUFDLGVBQUksaUNBQVEsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFO1lBQzVCLENBQUMsZ0JBQUssaUNBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUV2QixLQUFLLElBQUksQ0FBQyxHQUFHLENB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VSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaG93X1FuQSBmcm9tIFwiLi9SZXZlcnNlY29ycmVjdF9TaG93X1FuQVwiXG5pbXBvcnQgR2FtZV9pbml0IGZyb20gXCIuL1JldmVyc2Vjb3JyZWN0X0dhbWVfaW5pdFwiXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZV9sb2dpYyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIHBsYXllcl9sYWJlbF9kaXNwbGF5OiBjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoc2hvd19RbkEpXG4gICAgcW5hOiBzaG93X1FuQSA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXG4gICAgc2VxdWVuY2VfbGFiZWwgOiBjYy5MYWJlbCA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxuICAgIHJldmVyc2VfbGFiZWwgOiBjYy5TcHJpdGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZSlcbiAgICB2ZXJzZV9sYWJlbCA6IGNjLlNwcml0ZSA9IG51bGw7XG5cbiAgICBwdWJsaWMgc3RhdGljIHBsYXllcl9sYWJlbF9hcnI6IG51bWJlcltdID0gW107XG4gICAgcHVibGljIHN0YXRpYyBjb3VudDogbnVtYmVyID0gMDtcbiAgICAvL+yCrOyaqeyekOqwgCDsnoXroKXtlZjripQgbGFiZWwg7JeF642w7J207Yq4XG4gICAgdXBkYXRlSW5wdXRMYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbnVtU3RyaW5nID0gR2FtZV9sb2dpYy5wbGF5ZXJfbGFiZWxfYXJyLmpvaW4oXCJcIik7XG4gICAgICAgIHRoaXMucGxheWVyX2xhYmVsX2Rpc3BsYXkuc3RyaW5nID0gbnVtU3RyaW5nO1xuICAgIH1cblxuICAgIC8v7IKs7Jqp7J6Q6rCAIOyeheugpe2VmOuKlCDrp6Qg7Iir7J6Q6rCAIOunnuuKlOyngCDtmZXsnbjtlZjripQg7ZWo7IiYIOunnuuKlOuLpOuptCDrp57ripQg7ZGc7IucIO2LgOumrOuptCDti4DrpqzripQg7ZGc7IucIDLstIjroZwg7ISk7KCVXG4gICAgY2hlY2tBbnN3ZXIoKSB7XG4gICAgICAgIGlmIChzaG93X1FuQS5pc0dhbWVPdmVyKSByZXR1cm47XG5cbiAgICAgICAgY29uc3QgaW5wdXQgPSBHYW1lX2xvZ2ljLnBsYXllcl9sYWJlbF9hcnI7XG4gICAgICAgIGNvbnN0IGNvcnJlY3QgPSBzaG93X1FuQS5pc1JldmVyc2VcbiAgICAgICAgICAgID8gWy4uLnNob3dfUW5BLnFhXS5yZXZlcnNlKClcbiAgICAgICAgICAgIDogWy4uLnNob3dfUW5BLnFhXTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaW5wdXRbaV0gIT09IGNvcnJlY3RbaV0pIHtcbiAgICAgICAgICAgIEdhbWVfaW5pdC5pbnN0YW5jZS53cm9uZ19zaWduLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnFuYS5zZXRCdXR0b25zSW50ZXJhY3RhYmxlKGZhbHNlKTtcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLnBhdXNlKCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5yZXN1bWUoKTtcbiAgICAgICAgICAgICAgICBHYW1lX2luaXQuaW5zdGFuY2Uud3Jvbmdfc2lnbi5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRQcm9ibGVtKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9LCAxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGggPT09IGNvcnJlY3QubGVuZ3RoKSB7XG4gICAgICAgICAgICBHYW1lX2luaXQuaW5zdGFuY2UudXBkYXRlU2NvcmUoMTApO1xuICAgICAgICAgICAgR2FtZV9pbml0Lmluc3RhbmNlLmNvcnJlY3Rfc2lnbi5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5xbmEuc2V0QnV0dG9uc0ludGVyYWN0YWJsZShmYWxzZSk7XG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5wYXVzZSgpO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IucmVzdW1lKCk7XG4gICAgICAgICAgICAgICAgR2FtZV9pbml0Lmluc3RhbmNlLmNvcnJlY3Rfc2lnbi5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRQcm9ibGVtKHRydWUpO1xuICAgICAgICAgICAgfSwgMTUwMCk7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8v66ee7JWY64qU7KeAIO2LgOuguOuKlOyngCDtmZXsnbgg7ZuEIOy5tOyatO2KuCDshLjqs6Ag64uk7J2MIOusuOygnOuhnCDrhJjslrTqsIDripQg7ZWo7IiYXG4gICAgbmV4dFByb2JsZW0oaXNDb3JyZWN0OiBib29sZWFuKSB7XG4gICAgICAgIEdhbWVfbG9naWMucGxheWVyX2xhYmVsX2FyciA9IFtdO1xuICAgICAgICBHYW1lX2xvZ2ljLmNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5wbGF5ZXJfbGFiZWxfZGlzcGxheS5zdHJpbmcgPSBcIlwiO1xuICAgICAgICBzaG93X1FuQS5xYSA9IFtdO1xuXG4gICAgICAgIGlmICh0aGlzLnNlcXVlbmNlX2xhYmVsKSB7XG4gICAgICAgICAgICB0aGlzLnNlcXVlbmNlX2xhYmVsLnN0cmluZyA9IFwiXCI7XG4gICAgICAgICAgICB0aGlzLnNlcXVlbmNlX2xhYmVsLm5vZGUuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNDb3JyZWN0KSB7XG4gICAgICAgICAgICBzaG93X1FuQS5jb3JyZWN0Q291bnQrKztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5xbmEpIHtcbiAgICAgICAgICAgIHRoaXMucW5hLnNob3dOZXdRdWVzdGlvbigpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Reversecorrect_scripts/Reversecorrect_Button.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f919fmA72VKiZRgvUwx00zD', 'Reversecorrect_Button');
// scripts/Song/Reversecorrect_scripts/Reversecorrect_Button.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Reversecorrect_Game_logic_1 = require("./Reversecorrect_Game_logic");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameLogic = null;
        return _this;
    }
    Button.prototype.start = function () {
        var _this = this;
        this.node.children.forEach(function (child) {
            var btn = child.getComponent(cc.Button);
            if (btn) {
                btn.node.on('touchend', _this.ButtonClicked, _this);
            }
        });
    };
    Button.prototype.ButtonClicked = function (event) {
        var btnNode = event.target;
        var num = 0;
        switch (btnNode.name) {
            case "number1":
                num = 1;
                break;
            case "number2":
                num = 2;
                break;
            case "number3":
                num = 3;
                break;
            case "number4":
                num = 4;
                break;
            case "number5":
                num = 5;
                break;
            case "number6":
                num = 6;
                break;
            case "number7":
                num = 7;
                break;
            case "number8":
                num = 8;
                break;
            case "number9":
                num = 9;
                break;
        }
        Reversecorrect_Game_logic_1.default.player_label_arr.push(num);
        Reversecorrect_Game_logic_1.default.count++;
        if (this.gameLogic) {
            this.gameLogic.updateInputLabel();
            this.gameLogic.checkAnswer();
        }
    };
    __decorate([
        property(Reversecorrect_Game_logic_1.default)
    ], Button.prototype, "gameLogic", void 0);
    Button = __decorate([
        ccclass
    ], Button);
    return Button;
}(cc.Component));
exports.default = Button;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUmV2ZXJzZWNvcnJlY3Rfc2NyaXB0c1xcUmV2ZXJzZWNvcnJlY3RfQnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHlFQUFvRDtBQUM5QyxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUFvQywwQkFBWTtJQUFoRDtRQUFBLHFFQW9DQztRQWxDRyxlQUFTLEdBQWUsSUFBSSxDQUFDOztJQWtDakMsQ0FBQztJQWhDRyxzQkFBSyxHQUFMO1FBQUEsaUJBT0M7UUFORyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLO1lBQzVCLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzFDLElBQUksR0FBRyxFQUFFO2dCQUNMLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxLQUFJLENBQUMsYUFBYSxFQUFFLEtBQUksQ0FBQyxDQUFDO2FBQ3JEO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsOEJBQWEsR0FBYixVQUFjLEtBQWU7UUFDekIsSUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQWlCLENBQUM7UUFDeEMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ1osUUFBUSxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQ2xCLEtBQUssU0FBUztnQkFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUFDLE1BQU07WUFDL0IsS0FBSyxTQUFTO2dCQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBQUMsTUFBTTtZQUMvQixLQUFLLFNBQVM7Z0JBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFBQyxNQUFNO1lBQy9CLEtBQUssU0FBUztnQkFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUFDLE1BQU07WUFDL0IsS0FBSyxTQUFTO2dCQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBQUMsTUFBTTtZQUMvQixLQUFLLFNBQVM7Z0JBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFBQyxNQUFNO1lBQy9CLEtBQUssU0FBUztnQkFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUFDLE1BQU07WUFDL0IsS0FBSyxTQUFTO2dCQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBQUMsTUFBTTtZQUMvQixLQUFLLFNBQVM7Z0JBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFBQyxNQUFNO1NBQ2xDO1FBRUQsbUNBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsbUNBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVuQixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDaEM7SUFDTCxDQUFDO0lBakNEO1FBREMsUUFBUSxDQUFDLG1DQUFVLENBQUM7NkNBQ1E7SUFGWixNQUFNO1FBRDFCLE9BQU87T0FDYSxNQUFNLENBb0MxQjtJQUFELGFBQUM7Q0FwQ0QsQUFvQ0MsQ0FwQ21DLEVBQUUsQ0FBQyxTQUFTLEdBb0MvQztrQkFwQ29CLE1BQU0iLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2FtZV9sb2dpYyBmcm9tIFwiLi9SZXZlcnNlY29ycmVjdF9HYW1lX2xvZ2ljXCJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdXR0b24gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIEBwcm9wZXJ0eShHYW1lX2xvZ2ljKVxuICAgIGdhbWVMb2dpYzogR2FtZV9sb2dpYyA9IG51bGw7XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5ub2RlLmNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xuICAgICAgICAgICAgY29uc3QgYnRuID0gY2hpbGQuZ2V0Q29tcG9uZW50KGNjLkJ1dHRvbik7XG4gICAgICAgICAgICBpZiAoYnRuKSB7XG4gICAgICAgICAgICAgICAgYnRuLm5vZGUub24oJ3RvdWNoZW5kJywgdGhpcy5CdXR0b25DbGlja2VkLCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgQnV0dG9uQ2xpY2tlZChldmVudDogY2MuRXZlbnQpIHtcbiAgICAgICAgY29uc3QgYnRuTm9kZSA9IGV2ZW50LnRhcmdldCBhcyBjYy5Ob2RlO1xuICAgICAgICBsZXQgbnVtID0gMDtcbiAgICAgICAgc3dpdGNoIChidG5Ob2RlLm5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJudW1iZXIxXCI6IG51bSA9IDE7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm51bWJlcjJcIjogbnVtID0gMjsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibnVtYmVyM1wiOiBudW0gPSAzOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJudW1iZXI0XCI6IG51bSA9IDQ7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm51bWJlcjVcIjogbnVtID0gNTsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibnVtYmVyNlwiOiBudW0gPSA2OyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJudW1iZXI3XCI6IG51bSA9IDc7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm51bWJlcjhcIjogbnVtID0gODsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibnVtYmVyOVwiOiBudW0gPSA5OyBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIEdhbWVfbG9naWMucGxheWVyX2xhYmVsX2Fyci5wdXNoKG51bSk7XG4gICAgICAgIEdhbWVfbG9naWMuY291bnQrKztcblxuICAgICAgICBpZiAodGhpcy5nYW1lTG9naWMpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUxvZ2ljLnVwZGF0ZUlucHV0TGFiZWwoKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUxvZ2ljLmNoZWNrQW5zd2VyKCk7XG4gICAgICAgIH0gXG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/MultiReversecorrect/MultiReversecorrectGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '434e5TEHZNAmLNPx69T1Tev', 'MultiReversecorrectGameController');
// scripts/Song/MultiReversecorrect/MultiReversecorrectGameController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Multiplayer_1 = require("./Multiplayer");
var MultiOpponent_1 = require("./MultiOpponent");
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiReversecorrectGameController = /** @class */ (function (_super) {
    __extends(MultiReversecorrectGameController, _super);
    function MultiReversecorrectGameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myGameArea = null;
        _this.opponentGameArea = null;
        _this.exitButton = null;
        _this.myNameLabel = null;
        _this.myCharacterNode = null;
        _this.guestNameLabel = null;
        _this.guestCharacterNode = null;
        _this.myGame = null;
        _this.opponent = null;
        return _this;
    }
    MultiReversecorrectGameController.prototype.start = function () {
        if (this.exitButton) {
            this.exitButton.on(cc.Node.EventType.TOUCH_END, this.loadMain, this);
        }
        this.setPlayerInfoFromGameState();
    };
    MultiReversecorrectGameController.prototype.onLoad = function () {
        var _this = this;
        this.myGame = this.myGameArea.getComponent(Multiplayer_1.default);
        this.opponent = this.opponentGameArea.getComponent(MultiOpponent_1.default);
        MultiFlowController_1.default.initializeSocketListeners();
        console.log("[DEBUG] initializeSocketListeners 호출됨");
        cc.director.on("spawn-question", function (payload) {
            _this.opponent.showQuestion(payload.numbers, payload.direction);
        });
        cc.director.on("answer-result", function (payload) {
            _this.opponent.showResult(payload.input, payload.isCorrect);
        });
        cc.director.on("score-update", function (payload) {
            var isHost = GameState_1.default.isHost;
            if ((isHost && payload.player === "guest") || (!isHost && payload.player === "host")) {
                _this.opponent.updateScore(payload.score);
            }
        });
        if (!GameState_1.default.isHost) {
            var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
            window.socket.emit("game-event", {
                type: "guest-ready",
                roomId: roomId,
                payload: {}
            });
        }
        this.myGame.startGame();
    };
    MultiReversecorrectGameController.prototype.setPlayerInfoFromGameState = function () {
        var isHost = GameState_1.default.isHost;
        var myName = GameState_1.default.nickname || "나";
        var myChar = GameState_1.default.character || "dog";
        var guestName = GameState_1.default.guestNickname || "게스트";
        var guestChar = GameState_1.default.guestCharacter || "rabbit";
        var hostName = GameState_1.default.hostNickname || "호스트";
        var hostChar = GameState_1.default.hostCharacter || "tiger";
        console.log("[DEBUG] 내 캐릭터 키:", myChar);
        console.log("[DEBUG] 상대 캐릭터 키:", guestChar);
        if (isHost) {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = guestName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, guestChar);
        }
        else {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = hostName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, hostChar);
        }
    };
    // 공통 -> 복붙해도됌
    MultiReversecorrectGameController.prototype.setCharacterSprite = function (node, characterKey) {
        var sprite = node.getComponent(cc.Sprite);
        if (!sprite) {
            console.log("[DEBUG] 스프라이트 컴포넌트 없음:", node.name);
            return;
        }
        var path = "Images/Common/characters/" + characterKey + "Head";
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            console.log("[DEBUG] \uACBD\uB85C: " + path);
            console.log("[DEBUG] 로드 에러:", err);
            console.log("[DEBUG] 로드된 spriteFrame:", spriteFrame);
            if (!err && spriteFrame)
                sprite.spriteFrame = spriteFrame;
        });
    };
    // 공통 -> 복붙해도됌
    MultiReversecorrectGameController.prototype.loadMain = function () {
        var roomId = GameState_1.default.incomingRoomId || GameState_1.default.createdRoomId;
        var playerId = GameState_1.default.browserId;
        if (!cc.sys.isNative && window.socket && roomId && playerId) {
            console.log("[MMGC] 'leave-room' emit →", { roomId: roomId, playerId: playerId });
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        GameState_1.default.resetMultiplay();
        cc.sys.localStorage.removeItem("isHost");
        cc.director.loadScene("MainScene");
    };
    MultiReversecorrectGameController.prototype.onDestroy = function () {
        cc.director.off("spawn-question");
        cc.director.off("answer-result");
        cc.director.off("score-update");
    };
    __decorate([
        property(cc.Node)
    ], MultiReversecorrectGameController.prototype, "myGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiReversecorrectGameController.prototype, "opponentGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiReversecorrectGameController.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiReversecorrectGameController.prototype, "myNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiReversecorrectGameController.prototype, "myCharacterNode", void 0);
    __decorate([
        property(cc.Label)
    ], MultiReversecorrectGameController.prototype, "guestNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiReversecorrectGameController.prototype, "guestCharacterNode", void 0);
    MultiReversecorrectGameController = __decorate([
        ccclass
    ], MultiReversecorrectGameController);
    return MultiReversecorrectGameController;
}(cc.Component));
exports.default = MultiReversecorrectGameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/3Match/3MExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ddbf2moTLBDGblD7mcwmW3A', '3MExplain');
// scripts/Yu/3Match/3MExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("3M_GameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcWXVcXDNNYXRjaFxcM01FeHBsYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQThDLG9DQUFZO0lBQTFEO1FBQUEscUVBcUNDO1FBbkNHLHFCQUFlLEdBQWMsSUFBSSxDQUFDO1FBR2xDLGdDQUEwQixHQUFjLElBQUksQ0FBQzs7SUFnQ2pELENBQUM7SUE5QkcsaUNBQU0sR0FBTjtRQUFBLGlCQW1CQztRQWxCRyxTQUFTO1FBQ1QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFbkUseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7WUFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUMvQixFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRO2FBQ2hDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztRQUVILHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3hELEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDL0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsU0FBUzthQUNqQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsMkNBQWdCLEdBQWhCO1FBQ0ksRUFBRSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN2QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsb0RBQXlCLEdBQXpCO1FBQ0ksRUFBRSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN4QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFsQ0Q7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzs2REFDYztJQUdsQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3dFQUN5QjtJQUw1QixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQXFDcEM7SUFBRCx1QkFBQztDQXJDRCxBQXFDQyxDQXJDNkMsRUFBRSxDQUFDLFNBQVMsR0FxQ3pEO2tCQXJDb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVUaXRsZU1hbmFnZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgZ2FtZVN0YXJ0QnV0dG9uOiBjYy5CdXR0b24gPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkJ1dHRvbilcbiAgICBCYWNrVG9TaW5nbGVHYW1lTGlzdEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgLy8g7YG066atIOydtOuypO2KuFxuICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLm9uKCdjbGljaycsIHRoaXMub25DbGlja1N0YXJ0R2FtZSwgdGhpcyk7XG5cbiAgICAgICAgLy8g66eI7Jqw7IqkIOynhOyehSDsi5wg7Luk7IScIOuwjyBob3ZlciDtmqjqs7xcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9FTlRFUiwgKCkgPT4ge1xuICAgICAgICAgICAgY2MuZ2FtZS5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLnJ1bkFjdGlvbihcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4xKSAvLyDslb3qsIQg7ZmV64yAXG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyDrp4jsmrDsiqQg64KY6rCQIOyLnCDsu6TshJwg67CPIO2aqOqzvCDrs7Xqt4BcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9MRUFWRSwgKCkgPT4ge1xuICAgICAgICAgICAgY2MuZ2FtZS5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJkZWZhdWx0XCI7XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLnJ1bkFjdGlvbihcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4wKSAvLyDsm5Drnpgg7YGs6riw66GcXG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNsaWNrU3RhcnRHYW1lKCkge1xuICAgICAgICBjYy5sb2coXCLqsozsnoQg7Iuc7J6RIOuyhO2KvCDtgbTrpq3rkKhcIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIjNNX0dhbWVTY2VuZVwiKTtcbiAgICB9XG5cbiAgICBvbkNsaWNrQmFja1NpbmdsZUdhbWVMaXN0KCkge1xuICAgICAgICBjYy5sb2coXCLsi7HquIDqsozsnoTrpqzsiqTtirjroZwg64+M7JWE6rCA6riwXCIpO1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJTaW5nbGVHYW1lTGlzdFwiKTtcbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_game_init.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '51d5eam6QRMlYtW5l10P8xH', 'Rottenacorn_game_init');
// scripts/Song/Rottenacorn_scripts/Rottenacorn_game_init.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameState_1 = require("../../Controller/CommonUI/GameState");
var GameInit = /** @class */ (function (_super) {
    __extends(GameInit, _super);
    function GameInit() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.acornPrefab = null;
        _this.correct_sign = null;
        _this.wrong_sign = null;
        _this.exitButton = null;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.gameStartOverlayPrefab = null;
        _this.gameOverUIPrefab = null;
        _this.totalTime = 30;
        _this.currentTime = 30;
        _this.score = 0;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        return _this;
    }
    GameInit.prototype.onLoad = function () {
        var _this = this;
        var manager = cc.director.getPhysicsManager();
        manager.enabled = true;
        manager.gravity = cc.v2(0, 0);
        this.correct_sign.active = false;
        this.wrong_sign.active = false;
        if (this.gameStartOverlayPrefab) {
            var startOverlay_1 = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay_1);
            startOverlay_1.setPosition(0, 0);
            cc.tween(startOverlay_1)
                .delay(1.5)
                .to(0.5, { opacity: 0 })
                .call(function () {
                startOverlay_1.destroy();
                _this.startGameLogic();
            })
                .start();
        }
        else {
            this.startGameLogic();
        }
    };
    GameInit.prototype.startGameLogic = function () {
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        var sceneName = cc.director.getScene().name;
        // 타이머 프리팹 인스턴스화
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.timerLabel.string = "" + this.currentTime;
        this.schedule(this.updateTimer, 1);
        if (sceneName === 'Rottenacorn_Mainscene') {
            this.timerNode.setPosition(cc.v2(180, 1700));
        }
        else if (sceneName === 'Rottenacorn_Multiscene') {
            this.timerNode.setPosition(cc.v2(900, 1825));
        }
        // 점수 프리팹 인스턴스화
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScore(0);
        // if (sceneName === 'Rottenacorn_Mainscene') {
        //     this.scoreNode.setPosition(cc.v2(850, 1700));
        // } else if (sceneName === 'Rottenacorn_Multiscene') {
        //     this.scoreNode.setPosition(cc.v2(750, 125));
        // }
    };
    GameInit.prototype.updateTimer = function () {
        this.currentTime--;
        if (this.currentTime <= 0) {
            this.currentTime = 0;
            this.unschedule(this.updateTimer);
            this.onGameOver();
        }
        this.timerLabel.string = "" + this.currentTime;
    };
    GameInit.prototype.updateScore = function (amount) {
        this.score += amount;
        this.scoreLabel.string = "" + this.score;
    };
    GameInit.prototype.onGameOver = function () {
        cc.log("게임 종료!");
        // GameState 저장
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "RottenAcorn"; // 원하는 고유 ID로 설정
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI);
        gameOverUI.setPosition(0, 0);
    };
    GameInit.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        cc.director.loadScene('SingleGameList');
    };
    __decorate([
        property(cc.Prefab)
    ], GameInit.prototype, "acornPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], GameInit.prototype, "correct_sign", void 0);
    __decorate([
        property(cc.Node)
    ], GameInit.prototype, "wrong_sign", void 0);
    __decorate([
        property(cc.Button)
    ], GameInit.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameInit.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameInit.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameInit.prototype, "gameStartOverlayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameInit.prototype, "gameOverUIPrefab", void 0);
    GameInit = __decorate([
        ccclass
    ], GameInit);
    return GameInit;
}(cc.Component));
exports.default = GameInit;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_game_logic.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d79f0nZ65IBbE0bW75SBoI', 'Rottenacorn_game_logic');
// scripts/Song/Rottenacorn_scripts/Rottenacorn_game_logic.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Rottenacorn_acorn_manager_1 = require("./Rottenacorn_acorn_manager");
var Rottenacorn_acorn_1 = require("./Rottenacorn_acorn");
var Rottenacorn_game_init_1 = require("./Rottenacorn_game_init");
var RottenacornGameLogic = /** @class */ (function (_super) {
    __extends(RottenacornGameLogic, _super);
    function RottenacornGameLogic() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.game_init = null;
        _this.acornManager = null;
        _this.frontbutton = null;
        _this.backbutton = null;
        _this.choicebutton = null;
        _this.timeLimit = 60;
        _this.sign = null;
        _this.remainingTime = 0;
        _this.isGameOver = false;
        _this.score = 0;
        _this.normalCount = 2;
        _this.rottenCount = 1;
        _this.correctStreak = 0;
        _this.currentAcorns = [];
        _this.selectedIndex = 0;
        _this.rottenIndices = [];
        _this.selectedIndices = new Set();
        return _this;
    }
    RottenacornGameLogic.prototype.onLoad = function () {
        var _a, _b, _c;
        (_a = this.frontbutton) === null || _a === void 0 ? void 0 : _a.on(cc.Node.EventType.TOUCH_END, this.onNext, this);
        (_b = this.backbutton) === null || _b === void 0 ? void 0 : _b.on(cc.Node.EventType.TOUCH_END, this.onPrev, this);
        (_c = this.choicebutton) === null || _c === void 0 ? void 0 : _c.on(cc.Node.EventType.TOUCH_END, this.onConfirm, this);
    };
    RottenacornGameLogic.prototype.start = function () {
        this.remainingTime = this.timeLimit;
        this.isGameOver = false;
        this.score = 0;
        this.startRound();
    };
    RottenacornGameLogic.prototype.update = function (dt) {
        if (this.isGameOver)
            return;
        this.remainingTime -= dt;
        if (this.remainingTime <= 0) {
            this.remainingTime = 0;
            this.endGame();
        }
    };
    RottenacornGameLogic.prototype.startRound = function () {
        var _this = this;
        this.acornManager.resetAll();
        var total = this.normalCount + this.rottenCount;
        this.rottenIndices = this.pickRandomIndices(total, this.rottenCount);
        this.selectedIndices.clear();
        this.currentAcorns = [];
        for (var i = 0; i < total; i++) {
            var isRotten = this.rottenIndices.includes(i);
            var acorn = this.acornManager.getAcorn(isRotten);
            if (acorn) {
                var x = -((total - 1) * 60) + i * 120;
                var y = 100;
                acorn.setPosition(x, y);
                // selected_pic을 먼저 무조건 숨겨서 깜빡임 방지
                var selected_pic = acorn.getChildByName("selected_pic");
                if (selected_pic) {
                    selected_pic.active = false;
                }
                this.currentAcorns.push(acorn);
            }
        }
        this.selectedIndex = 0;
        this.frontbutton.pauseSystemEvents(true);
        this.backbutton.pauseSystemEvents(true);
        this.choicebutton.pauseSystemEvents(true);
        // 1초 후 선택된 도토리만 selected_pic을 표시
        this.scheduleOnce(function () {
            _this.updateSelectionVisual();
            _this.frontbutton.resumeSystemEvents(false);
            _this.backbutton.resumeSystemEvents(false);
            _this.choicebutton.resumeSystemEvents(false);
        }, 1);
    };
    RottenacornGameLogic.prototype.updateSelectionVisual = function () {
        for (var i = 0; i < this.currentAcorns.length; i++) {
            var acorn = this.currentAcorns[i];
            var selected_pic = acorn.getChildByName("selected_pic");
            if (selected_pic) {
                // 현재 선택된 인덱스면 보이고, 아니면 숨기기
                selected_pic.active = (i === this.selectedIndex);
            }
        }
    };
    RottenacornGameLogic.prototype.onNext = function () {
        if (this.currentAcorns.length === 0)
            return;
        var nextIndex = this.selectedIndex;
        var total = this.currentAcorns.length;
        do {
            nextIndex = (nextIndex + 1) % total;
        } while (this.selectedIndices.has(nextIndex) && nextIndex !== this.selectedIndex);
        this.selectedIndex = nextIndex;
        this.updateSelectionVisual();
    };
    RottenacornGameLogic.prototype.onPrev = function () {
        if (this.currentAcorns.length === 0)
            return;
        var prevIndex = this.selectedIndex;
        var total = this.currentAcorns.length;
        do {
            prevIndex = (prevIndex - 1 + total) % total;
        } while (this.selectedIndices.has(prevIndex) && prevIndex !== this.selectedIndex);
        this.selectedIndex = prevIndex;
        this.updateSelectionVisual();
    };
    RottenacornGameLogic.prototype.onConfirm = function () {
        var _this = this;
        if (this.currentAcorns.length === 0 || this.isGameOver)
            return;
        var index = this.selectedIndex;
        if (this.selectedIndices.has(index)) {
            return;
        }
        this.selectedIndices.add(index);
        var isCorrect = this.rottenIndices.includes(index);
        var selected = this.currentAcorns[index];
        var acornScript = selected.getComponent(Rottenacorn_acorn_1.default);
        if (isCorrect) {
            this.game_init.updateScore(10);
            // 벌레 보이기 유지
            if (acornScript === null || acornScript === void 0 ? void 0 : acornScript.bugNode) {
                acornScript.unscheduleAllCallbacks();
                acornScript.bugNode.active = true;
            }
        }
        else { // 틀렸을 경우 
            this.frontbutton.pauseSystemEvents(true);
            this.backbutton.pauseSystemEvents(true);
            this.choicebutton.pauseSystemEvents(true);
            this.sign.wrong_sign.active = true;
            this.scheduleOnce(function () {
                _this.sign.wrong_sign.active = false;
                _this.frontbutton.resumeSystemEvents(true);
                _this.backbutton.resumeSystemEvents(true);
                _this.choicebutton.resumeSystemEvents(true);
                _this.startRound();
            }, 1);
            return;
        }
        if (this.selectedIndices.size === this.rottenIndices.length) { //맞았을 경우
            this.sign.correct_sign.active = true;
            this.frontbutton.pauseSystemEvents(true);
            this.backbutton.pauseSystemEvents(true);
            this.choicebutton.pauseSystemEvents(true);
            this.scheduleOnce(function () {
                _this.sign.correct_sign.active = false;
                _this.frontbutton.resumeSystemEvents(true);
                _this.backbutton.resumeSystemEvents(true);
                _this.choicebutton.resumeSystemEvents(true);
                _this.handleCorrectAnswer(); // 다음 문제로 진행
            }, 1); // 1초 후 실행
            return;
        }
    };
    RottenacornGameLogic.prototype.handleCorrectAnswer = function () {
        this.correctStreak++;
        if (this.correctStreak >= 2 && this.normalCount < 4) {
            this.normalCount++;
            this.correctStreak = 0;
        }
        else {
            if (this.rottenCount < this.normalCount && this.rottenCount < 4) {
                this.rottenCount++;
            }
        }
        this.startRound();
    };
    RottenacornGameLogic.prototype.endGame = function () {
        if (this.isGameOver)
            return;
        this.isGameOver = true;
        this.frontbutton.active = false;
        this.backbutton.active = false;
        this.choicebutton.active = false;
        this.currentAcorns = [];
    };
    RottenacornGameLogic.prototype.pickRandomIndices = function (total, count) {
        var _a;
        var indices = Array.from(Array(total).keys());
        for (var i = indices.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            _a = [indices[j], indices[i]], indices[i] = _a[0], indices[j] = _a[1];
        }
        return indices.slice(0, count);
    };
    __decorate([
        property(Rottenacorn_game_init_1.default)
    ], RottenacornGameLogic.prototype, "game_init", void 0);
    __decorate([
        property(Rottenacorn_acorn_manager_1.default)
    ], RottenacornGameLogic.prototype, "acornManager", void 0);
    __decorate([
        property(cc.Node)
    ], RottenacornGameLogic.prototype, "frontbutton", void 0);
    __decorate([
        property(cc.Node)
    ], RottenacornGameLogic.prototype, "backbutton", void 0);
    __decorate([
        property(cc.Node)
    ], RottenacornGameLogic.prototype, "choicebutton", void 0);
    __decorate([
        property
    ], RottenacornGameLogic.prototype, "timeLimit", void 0);
    __decorate([
        property(Rottenacorn_game_init_1.default)
    ], RottenacornGameLogic.prototype, "sign", void 0);
    RottenacornGameLogic = __decorate([
        ccclass
    ], RottenacornGameLogic);
    return RottenacornGameLogic;
}(cc.Component));
exports.default = RottenacornGameLogic;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUm90dGVuYWNvcm5fc2NyaXB0c1xcUm90dGVuYWNvcm5fZ2FtZV9sb2dpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUU1Qyx5RUFBdUQ7QUFDdkQseURBQXVDO0FBQ3ZDLGlFQUErQztBQUcvQztJQUFrRCx3Q0FBWTtJQUE5RDtRQUFBLHFFQXFPQztRQW5PRyxlQUFTLEdBQWEsSUFBSSxDQUFDO1FBRzNCLGtCQUFZLEdBQWlCLElBQUksQ0FBQztRQUdsQyxpQkFBVyxHQUFZLElBQUksQ0FBQztRQUc1QixnQkFBVSxHQUFZLElBQUksQ0FBQztRQUczQixrQkFBWSxHQUFZLElBQUksQ0FBQztRQUc3QixlQUFTLEdBQVcsRUFBRSxDQUFDO1FBR3ZCLFVBQUksR0FBYSxJQUFJLENBQUM7UUFHZCxtQkFBYSxHQUFXLENBQUMsQ0FBQztRQUMxQixnQkFBVSxHQUFZLEtBQUssQ0FBQztRQUM1QixXQUFLLEdBQVcsQ0FBQyxDQUFDO1FBRWxCLGlCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLGlCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLG1CQUFhLEdBQVcsQ0FBQyxDQUFDO1FBRTFCLG1CQUFhLEdBQWMsRUFBRSxDQUFDO1FBQzlCLG1CQUFhLEdBQVcsQ0FBQyxDQUFDO1FBRTFCLG1CQUFhLEdBQWEsRUFBRSxDQUFDO1FBQzdCLHFCQUFlLEdBQWdCLElBQUksR0FBRyxFQUFFLENBQUM7O0lBa01yRCxDQUFDO0lBaE1HLHFDQUFNLEdBQU47O1FBQ0ksTUFBQSxJQUFJLENBQUMsV0FBVywwQ0FBRSxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFB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QUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzs0REFDUztJQUczQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzhEQUNXO0lBRzdCO1FBREMsUUFBUTsyREFDYztJQUd2QjtRQURDLFFBQVEsQ0FBQywrQkFBUSxDQUFDO3NEQUNHO0lBcEJMLG9CQUFvQjtRQUR4QyxPQUFPO09BQ2Esb0JBQW9CLENBcU94QztJQUFELDJCQUFDO0NBck9ELEFBcU9DLENBck9pRCxFQUFFLENBQUMsU0FBUyxHQXFPN0Q7a0JBck9vQixvQkFBb0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xuXG5pbXBvcnQgQWNvcm5NYW5hZ2VyIGZyb20gXCIuL1JvdHRlbmFjb3JuX2Fjb3JuX21hbmFnZXJcIjtcbmltcG9ydCBBY29ybiBmcm9tIFwiLi9Sb3R0ZW5hY29ybl9hY29yblwiXG5pbXBvcnQgR2FtZUluaXQgZnJvbSBcIi4vUm90dGVuYWNvcm5fZ2FtZV9pbml0XCI7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb3R0ZW5hY29ybkdhbWVMb2dpYyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KEdhbWVJbml0KVxuICAgIGdhbWVfaW5pdDogR2FtZUluaXQgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KEFjb3JuTWFuYWdlcilcbiAgICBhY29ybk1hbmFnZXI6IEFjb3JuTWFuYWdlciA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBmcm9udGJ1dHRvbjogY2MuTm9kZSA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBiYWNrYnV0dG9uOiBjYy5Ob2RlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGNob2ljZWJ1dHRvbjogY2MuTm9kZSA9IG51bGw7XG5cbiAgICBAcHJvcGVydHlcbiAgICB0aW1lTGltaXQ6IG51bWJlciA9IDYwO1xuXG4gICAgQHByb3BlcnR5KEdhbWVJbml0KVxuICAgIHNpZ246IEdhbWVJbml0ID0gbnVsbDtcblxuXG4gICAgcHJpdmF0ZSByZW1haW5pbmdUaW1lOiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgaXNHYW1lT3ZlcjogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByaXZhdGUgc2NvcmU6IG51bWJlciA9IDA7XG5cbiAgICBwcml2YXRlIG5vcm1hbENvdW50OiBudW1iZXIgPSAyO1xuICAgIHByaXZhdGUgcm90dGVuQ291bnQ6IG51bWJlciA9IDE7XG4gICAgcHJpdmF0ZSBjb3JyZWN0U3RyZWFrOiBudW1iZXIgPSAwO1xuXG4gICAgcHJpdmF0ZSBjdXJyZW50QWNvcm5zOiBjYy5Ob2RlW10gPSBbXTtcbiAgICBwcml2YXRlIHNlbGVjdGVkSW5kZXg6IG51bWJlciA9IDA7XG5cbiAgICBwcml2YXRlIHJvdHRlbkluZGljZXM6IG51bWJlcltdID0gW107XG4gICAgcHJpdmF0ZSBzZWxlY3RlZEluZGljZXM6IFNldDxudW1iZXI+ID0gbmV3IFNldCgpO1xuXG4gICAgb25Mb2FkKCkge1xuICAgICAgICB0aGlzLmZyb250YnV0dG9uPy5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsIHRoaXMub25OZXh0LCB0aGlzKTtcbiAgICAgICAgdGhpcy5iYWNrYnV0dG9uPy5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsIHRoaXMub25QcmV2LCB0aGlzKTtcbiAgICAgICAgdGhpcy5jaG9pY2VidXR0b24/Lm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy5vbkNvbmZpcm0sIHRoaXMpO1xuICAgIH1cblxuICAgIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLnJlbWFpbmluZ1RpbWUgPSB0aGlzLnRpbWVMaW1pdDtcbiAgICAgICAgdGhpcy5pc0dhbWVPdmVyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2NvcmUgPSAwO1xuICAgICAgICB0aGlzLnN0YXJ0Um91bmQoKTtcbiAgICB9XG5cbiAgICB1cGRhdGUoZHQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5pc0dhbWVPdmVyKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5yZW1haW5pbmdUaW1lIC09IGR0O1xuICAgICAgICBpZiAodGhpcy5yZW1haW5pbmdUaW1lIDw9IDApIHtcbiAgICAgICAgICAgIHRoaXMucmVtYWluaW5nVGltZSA9IDA7XG4gICAgICAgICAgICB0aGlzLmVuZEdhbWUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgc3RhcnRSb3VuZCgpOiB2b2lkIHtcbiAgICB0aGlzLmFjb3JuTWFuYWdlci5yZXNldEFsbCgpO1xuXG4gICAgY29uc3QgdG90YWwgPSB0aGlzLm5vcm1hbENvdW50ICsgdGhpcy5yb3R0ZW5Db3VudDtcbiAgICB0aGlzLnJvdHRlbkluZGljZXMgPSB0aGlzLnBpY2tSYW5kb21JbmRpY2VzKHRvdGFsLCB0aGlzLnJvdHRlbkNvdW50KTtcbiAgICB0aGlzLnNlbGVjdGVkSW5kaWNlcy5jbGVhcigpO1xuICAgIHRoaXMuY3VycmVudEFjb3JucyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b3RhbDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGlzUm90dGVuID0gdGhpcy5yb3R0ZW5JbmRpY2VzLmluY2x1ZGVzKGkpO1xuICAgICAgICBjb25zdCBhY29ybiA9IHRoaXMuYWNvcm5NYW5hZ2VyLmdldEFjb3JuKGlzUm90dGVuKTtcblxuICAgICAgICBpZiAoYWNvcm4pIHtcbiAgICAgICAgICAgIGNvbnN0IHggPSAtKCh0b3RhbCAtIDEpICogNjApICsgaSAqIDEyMDtcbiAgICAgICAgICAgIGNvbnN0IHkgPSAxMDA7XG4gICAgICAgICAgICBhY29ybi5zZXRQb3NpdGlvbih4LCB5KTtcblxuICAgICAgICAgICAgLy8gc2VsZWN0ZWRfcGlj7J2EIOuovOyggCDrrLTsobDqsbQg7Iio6rKo7IScIOq5nOu5oeyehCDrsKnsp4BcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkX3BpYyA9IGFjb3JuLmdldENoaWxkQnlOYW1lKFwic2VsZWN0ZWRfcGljXCIpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdGVkX3BpYykge1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkX3BpYy5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY3VycmVudEFjb3Jucy5wdXNoKGFjb3JuKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSAwO1xuICAgIHRoaXMuZnJvbnRidXR0b24ucGF1c2VTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgdGhpcy5iYWNrYnV0dG9uLnBhdXNlU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgIHRoaXMuY2hvaWNlYnV0dG9uLnBhdXNlU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgIC8vIDHstIgg7ZuEIOyEoO2DneuQnCDrj4TthqDrpqzrp4wgc2VsZWN0ZWRfcGlj7J2EIO2RnOyLnFxuICAgIHRoaXMuc2NoZWR1bGVPbmNlKCgpID0+IHtcbiAgICAgICAgdGhpcy51cGRhdGVTZWxlY3Rpb25WaXN1YWwoKTtcbiAgICAgICAgdGhpcy5mcm9udGJ1dHRvbi5yZXN1bWVTeXN0ZW1FdmVudHMoZmFsc2UpO1xuICAgICAgICB0aGlzLmJhY2tidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKGZhbHNlKTtcbiAgICAgICAgdGhpcy5jaG9pY2VidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKGZhbHNlKTtcbiAgICB9LCAxKTtcbn1cblxuXG4gICAgdXBkYXRlU2VsZWN0aW9uVmlzdWFsKCk6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY3VycmVudEFjb3Jucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgYWNvcm4gPSB0aGlzLmN1cnJlbnRBY29ybnNbaV07XG4gICAgICAgICAgICBsZXQgc2VsZWN0ZWRfcGljID0gYWNvcm4uZ2V0Q2hpbGRCeU5hbWUoXCJzZWxlY3RlZF9waWNcIilcbiAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkX3BpYykge1xuICAgICAgICAgICAgLy8g7ZiE7J6sIOyEoO2DneuQnCDsnbjrjbHsiqTrqbQg67O07J206rOgLCDslYTri4jrqbQg7Iio6riw6riwXG4gICAgICAgICAgICBzZWxlY3RlZF9waWMuYWN0aXZlID0gKGkgPT09IHRoaXMuc2VsZWN0ZWRJbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbk5leHQoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRBY29ybnMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgICAgbGV0IG5leHRJbmRleCA9IHRoaXMuc2VsZWN0ZWRJbmRleDtcbiAgICAgICAgY29uc3QgdG90YWwgPSB0aGlzLmN1cnJlbnRBY29ybnMubGVuZ3RoO1xuXG4gICAgICAgIGRvIHtcbiAgICAgICAgICAgIG5leHRJbmRleCA9IChuZXh0SW5kZXggKyAxKSAlIHRvdGFsO1xuICAgICAgICB9IHdoaWxlICh0aGlzLnNlbGVjdGVkSW5kaWNlcy5oYXMobmV4dEluZGV4KSAmJiBuZXh0SW5kZXggIT09IHRoaXMuc2VsZWN0ZWRJbmRleCk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gbmV4dEluZGV4O1xuICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGlvblZpc3VhbCgpO1xuICAgIH1cblxuICAgIG9uUHJldigpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudEFjb3Jucy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgICAgICBsZXQgcHJldkluZGV4ID0gdGhpcy5zZWxlY3RlZEluZGV4O1xuICAgICAgICBjb25zdCB0b3RhbCA9IHRoaXMuY3VycmVudEFjb3Jucy5sZW5ndGg7XG5cbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgcHJldkluZGV4ID0gKHByZXZJbmRleCAtIDEgKyB0b3RhbCkgJSB0b3RhbDtcbiAgICAgICAgfSB3aGlsZSAodGhpcy5zZWxlY3RlZEluZGljZXMuaGFzKHByZXZJbmRleCkgJiYgcHJldkluZGV4ICE9PSB0aGlzLnNlbGVjdGVkSW5kZXgpO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IHByZXZJbmRleDtcbiAgICAgICAgdGhpcy51cGRhdGVTZWxlY3Rpb25WaXN1YWwoKTtcbiAgICB9XG5cbiAgICBvbkNvbmZpcm0oKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRBY29ybnMubGVuZ3RoID09PSAwIHx8IHRoaXMuaXNHYW1lT3ZlcikgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5zZWxlY3RlZEluZGV4O1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGljZXMuaGFzKGluZGV4KSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZEluZGljZXMuYWRkKGluZGV4KTtcblxuICAgICAgICBjb25zdCBpc0NvcnJlY3QgPSB0aGlzLnJvdHRlbkluZGljZXMuaW5jbHVkZXMoaW5kZXgpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZCA9IHRoaXMuY3VycmVudEFjb3Juc1tpbmRleF07XG4gICAgICAgIGNvbnN0IGFjb3JuU2NyaXB0ID0gc2VsZWN0ZWQuZ2V0Q29tcG9uZW50KEFjb3JuKTtcblxuICAgICAgICBpZiAoaXNDb3JyZWN0KSB7XG4gICAgICAgICAgICB0aGlzLmdhbWVfaW5pdC51cGRhdGVTY29yZSgxMCk7XG5cbiAgICAgICAgICAgIC8vIOuyjOugiCDrs7TsnbTquLAg7Jyg7KeAXG4gICAgICAgICAgICBpZiAoYWNvcm5TY3JpcHQ/LmJ1Z05vZGUpIHtcbiAgICAgICAgICAgICAgICBhY29yblNjcmlwdC51bnNjaGVkdWxlQWxsQ2FsbGJhY2tzKCk7XG4gICAgICAgICAgICAgICAgYWNvcm5TY3JpcHQuYnVnTm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IFxuICAgICAgICBcbiAgICAgICAgZWxzZSB7IC8vIO2LgOuguOydhCDqsr3smrAgXG4gICAgICAgICAgICB0aGlzLmZyb250YnV0dG9uLnBhdXNlU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgdGhpcy5iYWNrYnV0dG9uLnBhdXNlU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgdGhpcy5jaG9pY2VidXR0b24ucGF1c2VTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnNpZ24ud3Jvbmdfc2lnbi5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2lnbi53cm9uZ19zaWduLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuZnJvbnRidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFja2J1dHRvbi5yZXN1bWVTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jaG9pY2VidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRSb3VuZCgpO1xuICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGljZXMuc2l6ZSA9PT0gdGhpcy5yb3R0ZW5JbmRpY2VzLmxlbmd0aCkgeyAvL+unnuyVmOydhCDqsr3smrBcbiAgICAgICAgICAgIHRoaXMuc2lnbi5jb3JyZWN0X3NpZ24uYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuZnJvbnRidXR0b24ucGF1c2VTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLmJhY2tidXR0b24ucGF1c2VTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLmNob2ljZWJ1dHRvbi5wYXVzZVN5c3RlbUV2ZW50cyh0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNpZ24uY29ycmVjdF9zaWduLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuZnJvbnRidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFja2J1dHRvbi5yZXN1bWVTeXN0ZW1FdmVudHModHJ1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jaG9pY2VidXR0b24ucmVzdW1lU3lzdGVtRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29ycmVjdEFuc3dlcigpOyAvLyDri6TsnYwg66y47KCc66GcIOynhO2WiVxuICAgICAgICAgICAgfSwgMSk7IC8vIDHstIgg7ZuEIOyLpO2WiVxuICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNvcnJlY3RBbnN3ZXIoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29ycmVjdFN0cmVhaysrO1xuXG4gICAgICAgIGlmICh0aGlzLmNvcnJlY3RTdHJlYWsgPj0gMiAmJiB0aGlzLm5vcm1hbENvdW50IDwgNCkge1xuICAgICAgICAgICAgdGhpcy5ub3JtYWxDb3VudCsrO1xuICAgICAgICAgICAgdGhpcy5jb3JyZWN0U3RyZWFrID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnJvdHRlbkNvdW50IDwgdGhpcy5ub3JtYWxDb3VudCAmJiB0aGlzLnJvdHRlbkNvdW50IDwgNCkge1xuICAgICAgICAgICAgICAgIHRoaXMucm90dGVuQ291bnQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RhcnRSb3VuZCgpO1xuICAgIH1cblxuICAgIGVuZEdhbWUoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmlzR2FtZU92ZXIpIHJldHVybjtcbiAgICAgICAgdGhpcy5pc0dhbWVPdmVyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5mcm9udGJ1dHRvbi5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5iYWNrYnV0dG9uLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNob2ljZWJ1dHRvbi5hY3RpdmUgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLmN1cnJlbnRBY29ybnMgPSBbXTtcbiAgICB9XG5cbiAgICBwaWNrUmFuZG9tSW5kaWNlcyh0b3RhbDogbnVtYmVyLCBjb3VudDogbnVtYmVyKTogbnVtYmVyW10ge1xuICAgICAgICBjb25zdCBpbmRpY2VzID0gQXJyYXkuZnJvbShBcnJheSh0b3RhbCkua2V5cygpKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IGluZGljZXMubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xuICAgICAgICAgICAgY29uc3QgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChpICsgMSkpO1xuICAgICAgICAgICAgW2luZGljZXNbaV0sIGluZGljZXNbal1dID0gW2luZGljZXNbal0sIGluZGljZXNbaV1dO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbmRpY2VzLnNsaWNlKDAsIGNvdW50KTtcbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/MoleGame/MoleExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1bc47lQa+RGArsLQImdmSIc', 'MoleExplain');
// scripts/Yu/MoleGame/MoleExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("MoleGameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcWXVcXE1vbGVHYW1lXFxNb2xlRXhwbGFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUE4QyxvQ0FBWTtJQUExRDtRQUFBLHFFQXFDQztRQW5DRyxxQkFBZSxHQUFjLElBQUksQ0FBQztRQUdsQyxnQ0FBMEIsR0FBYyxJQUFJLENBQUM7O0lBZ0NqRCxDQUFDO0lBOUJHLGlDQUFNLEdBQU47UUFBQSxpQkFtQkM7UUFsQkcsU0FBUztRQUNULElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO1FBRW5FLHlCQUF5QjtRQUN6QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3hELEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDL0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUTthQUNoQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFSCxzQkFBc0I7UUFDdEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRTtZQUN4RCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQy9CLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFNBQVM7YUFDakMsQ0FBQztRQUNOLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELDJDQUFnQixHQUFoQjtRQUNJLEVBQUUsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdkIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELG9EQUF5QixHQUF6QjtRQUNJLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDeEIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBbENEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkRBQ2M7SUFHbEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzt3RUFDeUI7SUFMNUIsZ0JBQWdCO1FBRHBDLE9BQU87T0FDYSxnQkFBZ0IsQ0FxQ3BDO0lBQUQsdUJBQUM7Q0FyQ0QsQUFxQ0MsQ0FyQzZDLEVBQUUsQ0FBQyxTQUFTLEdBcUN6RDtrQkFyQ29CLGdCQUFnQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lVGl0bGVNYW5hZ2VyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxuICAgIGdhbWVTdGFydEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXG4gICAgQmFja1RvU2luZ2xlR2FtZUxpc3RCdXR0b246IGNjLkJ1dHRvbiA9IG51bGw7XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIC8vIO2BtOumrSDsnbTrsqTtirhcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbignY2xpY2snLCB0aGlzLm9uQ2xpY2tTdGFydEdhbWUsIHRoaXMpO1xuXG4gICAgICAgIC8vIOuniOyasOyKpCDsp4TsnoUg7IucIOy7pOyEnCDrsI8gaG92ZXIg7Zqo6rO8XG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfRU5URVIsICgpID0+IHtcbiAgICAgICAgICAgIGNjLmdhbWUuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXG4gICAgICAgICAgICAgICAgY2Muc2NhbGVUbygwLjEsIDEuMSkgLy8g7JW96rCEIO2ZleuMgFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8g66eI7Jqw7IqkIOuCmOqwkCDsi5wg7Luk7IScIOuwjyDtmqjqs7wg67O16reAXG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfTEVBVkUsICgpID0+IHtcbiAgICAgICAgICAgIGNjLmdhbWUuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXG4gICAgICAgICAgICAgICAgY2Muc2NhbGVUbygwLjEsIDEuMCkgLy8g7JuQ656YIO2BrOq4sOuhnFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25DbGlja1N0YXJ0R2FtZSgpIHtcbiAgICAgICAgY2MubG9nKFwi6rKM7J6EIOyLnOyekSDrsoTtirwg7YG066at65CoXCIpO1xuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJNb2xlR2FtZVNjZW5lXCIpO1xuICAgIH1cblxuICAgIG9uQ2xpY2tCYWNrU2luZ2xlR2FtZUxpc3QoKSB7XG4gICAgICAgIGNjLmxvZyhcIuyLseq4gOqyjOyehOumrOyKpO2KuOuhnCDrj4zslYTqsIDquLBcIik7XG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Song/Rottenacorn_scripts/Rottenacorn_Load_Scene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b721eHUF69GJ5l+EVPPoFUJ', 'Rottenacorn_Load_Scene');
// scripts/Song/Rottenacorn_scripts/Rottenacorn_Load_Scene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.BackButton = null;
        return _this;
    }
    NewClass.prototype.start = function () {
        this.node.on("touchend", function () {
            cc.director.loadScene("Rottenacorn_mainscene");
        });
    };
    NewClass.prototype.onClickList = function () {
        cc.log("뒤로가기 버튼 클릭됨. SingleGameList 씬으로 이동.");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], NewClass.prototype, "BackButton", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU29uZ1xcUm90dGVuYWNvcm5fc2NyaXB0c1xcUm90dGVuYWNvcm5fTG9hZF9TY2VuZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQWFDO1FBWEcsZ0JBQVUsR0FBYyxJQUFJLENBQUM7O0lBV2pDLENBQUM7SUFWRyx3QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO1lBQ3JCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDbkQsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsOEJBQVcsR0FBWDtRQUNBLEVBQUUsQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUM5QyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFWRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dEQUNTO0lBRlosUUFBUTtRQUQ1QixPQUFPO09BQ2EsUUFBUSxDQWE1QjtJQUFELGVBQUM7Q0FiRCxBQWFDLENBYnFDLEVBQUUsQ0FBQyxTQUFTLEdBYWpEO2tCQWJvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdDbGFzcyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgQHByb3BlcnR5KGNjLkJ1dHRvbilcbiAgICBCYWNrQnV0dG9uOiBjYy5CdXR0b24gPSBudWxsO1xuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy5ub2RlLm9uKFwidG91Y2hlbmRcIiwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlJvdHRlbmFjb3JuX21haW5zY2VuZVwiKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25DbGlja0xpc3QoKSB7XG4gICAgY2MubG9nKFwi65Kk66Gc6rCA6riwIOuyhO2KvCDtgbTrpq3rkKguIFNpbmdsZUdhbWVMaXN0IOyUrOycvOuhnCDsnbTrj5kuXCIpO1xuICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/MultiMoleGame/MultiplayerGameScene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '39361Z4/QNCY6Lou5YFmse+', 'MultiplayerGameScene');
// scripts/Yu/MultiMoleGame/MultiplayerGameScene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// MultiplayerMoleController.ts
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PlayerMoleGameScene = /** @class */ (function (_super) {
    __extends(PlayerMoleGameScene, _super);
    function PlayerMoleGameScene() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        _this.hammerSprite = null;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.moleHoles = [];
        _this.holeStates = [];
        _this.hammerNode = null;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        _this.score = 0;
        _this.timer = 30;
        _this.isGameOver = false;
        _this.moleSpawnCallback = null;
        return _this;
    }
    /**
     * MultiGameFlowController에서 game-start 이벤트를 받으면
     * cc.director.emit("multi-game-start")를 트리거.
     * 여기서 startGame()이 호출됨
     */
    PlayerMoleGameScene.prototype.startGame = function () {
        this.initGame();
    };
    PlayerMoleGameScene.prototype.initGame = function () {
        this.moleHoles = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.holeStates = new Array(9).fill(false);
        this.score = 0;
        this.timer = 10;
        this.isGameOver = false;
        this.createHammer();
        this.initTimer();
        this.initScore();
        this.schedule(this.decreaseTimer, 1);
        this.spawnMoles();
    };
    PlayerMoleGameScene.prototype.createHammer = function () {
        this.hammerNode = new cc.Node("Hammer");
        var sprite = this.hammerNode.addComponent(cc.Sprite);
        sprite.spriteFrame = this.hammerSprite;
        this.hammerNode.parent = this.node;
        this.hammerNode.zIndex = 999;
        this.hammerNode.setContentSize(200, 200);
        this.hammerNode.anchorX = 0.2;
        this.hammerNode.anchorY = 0.2;
        this.hammerNode.active = false;
    };
    PlayerMoleGameScene.prototype.initTimer = function () {
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
    };
    PlayerMoleGameScene.prototype.initScore = function () {
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
    };
    PlayerMoleGameScene.prototype.updateTimerLabel = function () {
        this.timerLabel.string = "" + this.timer;
    };
    PlayerMoleGameScene.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    PlayerMoleGameScene.prototype.decreaseTimer = function () {
        if (this.isGameOver)
            return;
        this.timer--;
        this.updateTimerLabel();
        if (this.timer <= 0) {
            this.endGame();
        }
    };
    PlayerMoleGameScene.prototype.spawnMoles = function () {
        var _this = this;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.moleSpawnCallback = function () {
            if (_this.isGameOver)
                return;
            var available = _this.holeStates
                .map(function (v, i) { return (!v ? i : -1); })
                .filter(function (i) { return i !== -1; });
            if (available.length === 0)
                return;
            var idx = available[Math.floor(Math.random() * available.length)];
            var hole = _this.moleHoles[idx];
            var isGoodMole = Math.random() < 0.3;
            var mole = cc.instantiate(isGoodMole ? _this.molePrefabGood : _this.molePrefab);
            mole.name = "Mole";
            hole.addChild(mole);
            mole.setPosition(0, -130);
            mole.active = true;
            _this.holeStates[idx] = true;
            // (A) 터치 이벤트 등록: 두더지 터치 시 동작
            mole.on(cc.Node.EventType.TOUCH_END, function (e) {
                e.stopPropagation();
                if (!mole.active || _this.isGameOver)
                    return;
                // (1) 햄머 이펙트 재생
                var worldPos = mole.convertToWorldSpaceAR(cc.v2(0, 0));
                var localPos = _this.node.convertToNodeSpaceAR(worldPos);
                _this.showHammerEffect(localPos);
                // (2) 히트 스프라이트로 교체
                var sprite = mole.getComponent(cc.Sprite);
                if (sprite) {
                    sprite.spriteFrame = isGoodMole ? _this.goodMoleHitSprite : _this.moleHitSprite;
                }
                // (3) 점수 계산 및 UI 업데이트
                _this.score += isGoodMole ? -10 : 10;
                _this.updateScoreLabel();
                // (4) “hit-mole”과 “score-update” 네트워크 전송
                var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
                if (!cc.sys.isNative && window.socket && roomId) {
                    window.socket.emit("game-event", {
                        type: "hit-mole",
                        roomId: roomId,
                        payload: {
                            index: idx,
                            moleType: isGoodMole ? "good" : "bad"
                        }
                    });
                    // 공통 이벤트
                    window.socket.emit("game-event", {
                        type: "score-update",
                        roomId: roomId,
                        payload: {
                            player: GameState_1.default.isHost ? "host" : "guest",
                            score: _this.score
                        }
                    });
                }
                // (5) 동일 두더지에 터치 이벤트 중복 발생 방지
                mole.off(cc.Node.EventType.TOUCH_END, null, _this);
                // (6) 히트 애니메이션 후 두더지 제거
                cc.tween(mole)
                    .repeat(3, cc.tween()
                    .by(0.05, { angle: 15 })
                    .by(0.05, { angle: -30 })
                    .by(0.05, { angle: 15 }))
                    .delay(0.8)
                    .call(function () {
                    if (mole && mole.isValid) {
                        mole.destroy();
                        _this.holeStates[idx] = false;
                    }
                })
                    .start();
            }, _this);
            // (B) 기본 스폰 애니메이션 후 타임아웃 시 제거
            cc.tween(mole)
                .to(0.2, { position: cc.v3(0, -20) }, { easing: "sineOut" })
                .delay(1.0)
                .call(function () {
                if (mole.isValid) {
                    mole.off(cc.Node.EventType.TOUCH_END, null, _this);
                    mole.destroy();
                    _this.holeStates[idx] = false;
                }
            })
                .start();
            // (C) “spawn-mole” 네트워크 브로드캐스트
            var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "spawn-mole",
                    roomId: roomId,
                    payload: {
                        index: idx,
                        type: isGoodMole ? "good" : "bad",
                        spawnTime: Date.now()
                    }
                });
            }
        };
        this.schedule(this.moleSpawnCallback, 1, cc.macro.REPEAT_FOREVER);
    };
    PlayerMoleGameScene.prototype.showHammerEffect = function (pos) {
        var _this = this;
        this.hammerNode.setPosition(pos);
        this.hammerNode.active = true;
        cc.tween(this.hammerNode)
            .set({ scale: 1.0 })
            .parallel(cc.tween().to(0.05, { scale: 1.2 }, { easing: "cubicOut" }), cc.tween().by(0.05, { position: cc.v3(0, -30) }))
            .parallel(cc.tween().to(0.1, { scale: 1.0 }, { easing: "bounceOut" }), cc.tween().by(0.1, { position: cc.v3(0, 30) }))
            .call(function () {
            _this.hammerNode.active = false;
        })
            .start();
    };
    /**
     *  타이머가 0이 되거나 다른 종료 조건일 때 호출
     *  → 공통 FlowController로 이관
     */
    PlayerMoleGameScene.prototype.endGame = function () {
        MultiFlowController_1.default.endGame(this);
    };
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "hammerSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "scoreDisplayPrefab", void 0);
    PlayerMoleGameScene = __decorate([
        ccclass
    ], PlayerMoleGameScene);
    return PlayerMoleGameScene;
}(cc.Component));
exports.default = PlayerMoleGameScene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/3Match/3MatchBoard.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '07eaclfpAxKkpP44S5qySwG', '3MatchBoard');
// scripts/Yu/3Match/3MatchBoard.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var _3MatchManager_1 = require("./3MatchManager");
var Tile_1 = require("./Tile");
var ThreeMatchBoard = /** @class */ (function (_super) {
    __extends(ThreeMatchBoard, _super);
    function ThreeMatchBoard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tilePrefab = null;
        _this.gameManager = null;
        _this.boardSize = 7; // 항상 8x8 고정
        _this.tileSize = 100;
        _this.gap = 10;
        _this.board = [];
        _this.isSwapping = false;
        return _this;
    }
    ThreeMatchBoard.prototype.start = function () {
        var _this = this;
        this.node.color = cc.Color.GRAY;
        this.createBoard();
        this.scheduleOnce(function () {
            _this.checkAndExplodeMatches(); // 게임 시작 후 첫 매칭 탐지
        }, 0.1);
    };
    ThreeMatchBoard.prototype.createBoard = function () {
        this.board = [];
        var totalTileSize = this.tileSize + this.gap;
        var startX = -(this.boardSize - 1) * totalTileSize / 2;
        var startY = (this.boardSize - 1) * totalTileSize / 2;
        for (var row = 0; row < this.boardSize; row++) {
            this.board[row] = [];
            for (var col = 0; col < this.boardSize; col++) {
                var tileNode = cc.instantiate(this.tilePrefab);
                tileNode.parent = this.node;
                var posX = startX + col * totalTileSize;
                var posY = startY - row * totalTileSize;
                tileNode.setPosition(posX, posY);
                var tile = tileNode.getComponent(Tile_1.default);
                tile.row = row;
                tile.col = col;
                // 1. bannedColors를 bannedIndices로
                var bannedIndices = [];
                if (col >= 2) {
                    var left1 = this.board[row][col - 1];
                    var left2 = this.board[row][col - 2];
                    if (left1 && left2 && left1['fruitIndex'] === left2['fruitIndex']) {
                        bannedIndices.push(left1['fruitIndex']);
                    }
                }
                if (row >= 2) {
                    var top1 = this.board[row - 1][col];
                    var top2 = this.board[row - 2][col];
                    if (top1 && top2 && top1['fruitIndex'] === top2['fruitIndex']) {
                        bannedIndices.push(top1['fruitIndex']);
                    }
                }
                // 2. 랜덤 과일 설정
                tile.setRandomFruitExcluding(bannedIndices);
                tile.addOutline();
                this.board[row][col] = tile;
            }
        }
    };
    ThreeMatchBoard.prototype.colorsAreEqual = function (c1, c2) {
        return c1.r === c2.r && c1.g === c2.g && c1.b === c2.b;
    };
    ThreeMatchBoard.prototype.checkAndExplodeMatches = function () {
        var _this = this;
        var matchedTiles = [];
        for (var row = 0; row < this.boardSize; row++) {
            for (var col = 0; col < this.boardSize; col++) {
                var tile = this.board[row][col];
                if (!tile)
                    continue;
                // 가로 검사
                if (col <= this.boardSize - 3) {
                    var t1 = this.board[row][col + 1];
                    var t2 = this.board[row][col + 2];
                    // 색상 비교 → 과일 인덱스 비교
                    if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                        matchedTiles.push(tile, t1, t2);
                    }
                }
                // 세로 검사
                if (row <= this.boardSize - 3) {
                    var t1 = this.board[row + 1][col];
                    var t2 = this.board[row + 2][col];
                    // 색상 비교 → 과일 인덱스 비교
                    if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                        matchedTiles.push(tile, t1, t2);
                    }
                }
            }
        }
        matchedTiles = Array.from(new Set(matchedTiles));
        if (matchedTiles.length > 0) {
            if (this.gameManager) {
                this.gameManager.addMatchScore(matchedTiles.length);
            }
            for (var _i = 0, matchedTiles_1 = matchedTiles; _i < matchedTiles_1.length; _i++) {
                var tile = matchedTiles_1[_i];
                tile.explode();
                this.board[tile.row][tile.col] = null;
            }
            this.scheduleOnce(function () {
                _this.fillEmptySpaces();
                _this.scheduleOnce(function () {
                    _this.spawnNewTiles();
                    _this.scheduleOnce(function () {
                        // **다시 매칭이 일어날 수 있으므로 재귀 호출**
                        _this.checkAndExplodeMatches();
                    }, 0.3);
                }, 0.3);
            }, 0.3);
        }
        else {
            // 폭발된 타일이 없으면 다음 행동 없음
            this.isSwapping = false;
        }
    };
    ThreeMatchBoard.prototype.swapTiles = function (tileA, tileB) {
        var _this = this;
        if (this.isSwapping)
            return;
        var rowDiff = Math.abs(tileA.row - tileB.row);
        var colDiff = Math.abs(tileA.col - tileB.col);
        if (!((rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1))) {
            console.log("인접한 타일이 아닙니다! 교환 불가");
            return;
        }
        this.isSwapping = true;
        // 보드에서 교환
        var tempRow = tileA.row;
        var tempCol = tileA.col;
        this.board[tileA.row][tileA.col] = tileB;
        this.board[tileB.row][tileB.col] = tileA;
        tileA.row = tileB.row;
        tileA.col = tileB.col;
        tileB.row = tempRow;
        tileB.col = tempCol;
        var posA = this.getTilePosition(tileA.row, tileA.col);
        var posB = this.getTilePosition(tileB.row, tileB.col);
        cc.tween(tileA.node).to(0.2, { position: posA }).start();
        cc.tween(tileB.node).to(0.2, { position: posB }).call(function () {
            // 임시로 매칭 탐지
            var matchedTiles = [];
            var detectTempMatch = function () {
                for (var row = 0; row < _this.boardSize; row++) {
                    for (var col = 0; col < _this.boardSize; col++) {
                        var tile = _this.board[row][col];
                        if (!tile)
                            continue;
                        // 가로
                        if (col <= _this.boardSize - 3) {
                            var t1 = _this.board[row][col + 1];
                            var t2 = _this.board[row][col + 2];
                            if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                                return true;
                            }
                        }
                        // 세로
                        if (row <= _this.boardSize - 3) {
                            var t1 = _this.board[row + 1][col];
                            var t2 = _this.board[row + 2][col];
                            if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                                return true;
                            }
                        }
                    }
                }
                return false;
            };
            if (detectTempMatch()) {
                _this.checkAndExplodeMatches(); // 매칭이 있으면 계속 진행
            }
            else {
                // 없으면 되돌리기
                // 위치, 보드 정보 다시 교환
                _this.board[tileA.row][tileA.col] = tileB;
                _this.board[tileB.row][tileB.col] = tileA;
                var tempRow2 = tileA.row;
                var tempCol2 = tileA.col;
                tileA.row = tileB.row;
                tileA.col = tileB.col;
                tileB.row = tempRow2;
                tileB.col = tempCol2;
                var resetPosA = _this.getTilePosition(tileA.row, tileA.col);
                var resetPosB = _this.getTilePosition(tileB.row, tileB.col);
                cc.tween(tileA.node).to(0.2, { position: resetPosA }).start();
                cc.tween(tileB.node).to(0.2, { position: resetPosB }).call(function () {
                    _this.isSwapping = false;
                }).start();
            }
        }).start();
    };
    ThreeMatchBoard.prototype.fillEmptySpaces = function () {
        for (var col = 0; col < this.boardSize; col++) {
            for (var row = this.boardSize - 1; row >= 0; row--) {
                if (!this.board[row][col]) {
                    for (var upperRow = row - 1; upperRow >= 0; upperRow--) {
                        if (this.board[upperRow][col]) {
                            var fallingTile = this.board[upperRow][col];
                            this.board[row][col] = fallingTile;
                            this.board[upperRow][col] = null;
                            fallingTile.row = row;
                            fallingTile.col = col;
                            var targetPos = this.getTilePosition(row, col);
                            cc.tween(fallingTile.node)
                                .to(0.2, { position: targetPos })
                                .start();
                            break;
                        }
                    }
                }
            }
        }
    };
    ThreeMatchBoard.prototype.spawnNewTiles = function () {
        for (var row = 0; row < this.boardSize; row++) {
            for (var col = 0; col < this.boardSize; col++) {
                if (!this.board[row][col]) {
                    var tileNode = cc.instantiate(this.tilePrefab);
                    tileNode.parent = this.node;
                    var pos = this.getTilePosition(row, col);
                    tileNode.setPosition(pos);
                    var tile = tileNode.getComponent(Tile_1.default);
                    tile.row = row;
                    tile.col = col;
                    tile.setRandomFruit(); // 이전의 setRandomColor()에서 교체
                    tile.addOutline();
                    this.board[row][col] = tile;
                }
            }
        }
    };
    ThreeMatchBoard.prototype.getTilePosition = function (row, col) {
        var totalTileSize = this.tileSize + this.gap;
        var startX = -(this.boardSize - 1) * totalTileSize / 2;
        var startY = (this.boardSize - 1) * totalTileSize / 2;
        var x = startX + col * totalTileSize;
        var y = startY - row * totalTileSize;
        return new cc.Vec3(x, y, 0);
    };
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchBoard.prototype, "tilePrefab", void 0);
    __decorate([
        property(_3MatchManager_1.default)
    ], ThreeMatchBoard.prototype, "gameManager", void 0);
    ThreeMatchBoard = __decorate([
        ccclass
    ], ThreeMatchBoard);
    return ThreeMatchBoard;
}(cc.Component));
exports.default = ThreeMatchBoard;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/3Match/Tile.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '947a7GdqIFKf7Gh40q0Goe1', 'Tile');
// scripts/Yu/3Match/Tile.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var _3MatchBoard_1 = require("./3MatchBoard");
var Tile = /** @class */ (function (_super) {
    __extends(Tile, _super);
    function Tile() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sprite = null; // 기존 sprite 속성 복구
        _this.explosionPrefabs = [];
        _this.fruitSprites = [];
        _this.row = 0;
        _this.col = 0;
        _this.touchStartPos = null;
        _this.fruitIndex = 0; // 현재 과일 인덱스
        return _this;
    }
    Tile_1 = Tile;
    // 노드가 씬에 생성되면서 초기화 단계.
    // 이 시점에 컴포넌트, 스프라이트, 이벤트 리스너 등을 등록
    Tile.prototype.onLoad = function () {
        // 스프라이트 컴포넌트가 없으면 추가
        if (!this.sprite) {
            this.sprite = this.node.addComponent(cc.Sprite);
        }
        // this.node.on(cc.Node.EventType.TOUCH_END, this.onTileClicked, this);
        // 드래그 감지용 이벤트 등록
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
    };
    Tile.prototype.setRandomFruit = function () {
        var randomIndex = Math.floor(Math.random() * this.fruitSprites.length);
        this.fruitIndex = randomIndex;
        this.sprite.spriteFrame = this.fruitSprites[randomIndex];
    };
    Tile.prototype.setRandomFruitExcluding = function (excludeIndices) {
        var availableIndices = this.fruitSprites
            .map(function (_, index) { return index; })
            .filter(function (index) { return !excludeIndices.includes(index); });
        if (availableIndices.length === 0) {
            availableIndices = this.fruitSprites.map(function (_, index) { return index; });
        }
        var randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];
        this.fruitIndex = randomIndex;
        this.sprite.spriteFrame = this.fruitSprites[randomIndex];
    };
    Tile.prototype.addOutline = function () {
        // 기존에 있던 Graphics가 있으면 제거
        var existingGraphics = this.node.getComponent(cc.Graphics);
        if (existingGraphics) {
            this.node.removeComponent(existingGraphics);
        }
        // 새 Graphics 노드 생성
        var graphicsNode = new cc.Node();
        graphicsNode.parent = this.node;
        graphicsNode.setPosition(0, 0);
        var graphics = graphicsNode.addComponent(cc.Graphics);
        graphics.lineWidth = 5; // 테두리 두께
        graphics.strokeColor = cc.Color.BLACK; // 테두리 색상
        var size = this.node.getContentSize();
        console.log("Tile Size:", size); // 디버깅 로그
        // 테두리 그리기
        graphics.rect(-size.width / 2, -size.height / 2, size.width, size.height);
        graphics.stroke();
    };
    Tile.prototype.onTouchStart = function (event) {
        this.touchStartPos = event.getLocation();
        // 또는 this.touchStartPos = this.node.convertToNodeSpaceAR(event.getLocation());
        console.log("드래그 시작 위치:", this.touchStartPos);
    };
    Tile.prototype.onTouchEnd = function (event) {
        var endPos = event.getLocation();
        var delta = endPos.sub(this.touchStartPos);
        console.log("드래그 끝 위치:", endPos);
        console.log("드래그 거리:", delta);
        // 최소 거리 체크 (조금 더 유연하게, 예: 3픽셀 이상이면 처리)
        if (delta.len() < 3) {
            console.log("드래그 너무 짧아서 무시됨");
            return;
        }
        var absX = Math.abs(delta.x);
        var absY = Math.abs(delta.y);
        // 아주 작은 delta.x나 delta.y일 경우, 방향 보정
        if (absX < 1 && absY < 1) {
            console.log("움직임이 너무 작아서 무시됨");
            return;
        }
        var direction = "";
        if (absX > absY) {
            direction = delta.x > 0 ? "right" : "left";
        }
        else {
            direction = delta.y > 0 ? "up" : "down";
        }
        console.log("드래그 방향:", direction);
        var board = this.node.parent.getComponent(_3MatchBoard_1.default);
        if (!board || !board["board"]) {
            console.warn("ThreeMatchBoard를 찾을 수 없음");
            return;
        }
        var targetTile = null;
        var row = this.row;
        var col = this.col;
        switch (direction) {
            case "up":
                if (row > 0)
                    targetTile = board["board"][row - 1][col];
                break;
            case "down":
                if (row < board["boardSize"] - 1)
                    targetTile = board["board"][row + 1][col];
                break;
            case "left":
                if (col > 0)
                    targetTile = board["board"][row][col - 1];
                break;
            case "right":
                if (col < board["boardSize"] - 1)
                    targetTile = board["board"][row][col + 1];
                break;
        }
        if (targetTile) {
            console.log("\uD0C0\uC77C \uAD50\uD658: (" + row + ", " + col + ") <-> (" + targetTile.row + ", " + targetTile.col + ")");
            board.swapTiles(this, targetTile);
        }
    };
    Tile.prototype.explode = function () {
        var _this = this;
        console.log("explode() \uC2E4\uD589: (" + this.row + ", " + this.col + ")");
        var prefab = this.explosionPrefabs[this.fruitIndex];
        if (prefab) {
            console.log("\uD3ED\uBC1C \uC774\uD399\uD2B8 \uC0DD\uC131 (fruitIndex " + this.fruitIndex + "): (" + this.row + ", " + this.col + ")");
            var effect_1 = cc.instantiate(prefab);
            effect_1.parent = this.node.parent;
            effect_1.setPosition(this.node.getPosition());
            effect_1.setScale(1.2);
            effect_1.angle = Math.random() * 360;
            var ps = effect_1.getComponent(cc.ParticleSystem);
            if (ps) {
                ps.startSize = 160; // 파티클 자체 크기 키움
                ps.startSizeVar = 80; // 다양한 크기 조합
                ps.life = 0.25;
                ps.lifeVar = 0.05;
                ps.resetSystem();
            }
            this.scheduleOnce(function () {
                effect_1.destroy();
            }, 1);
        }
        this.node.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.1, 1.8).easing(cc.easeCubicActionOut()), cc.fadeOut(0.15)), cc.callFunc(function () {
            if (Tile_1.selectedTile === _this) {
                Tile_1.selectedTile = null;
            }
            _this.node.destroy();
        })));
    };
    var Tile_1;
    Tile.selectedTile = null;
    __decorate([
        property(cc.Sprite) // 스프라이트 컴포넌트 연결
    ], Tile.prototype, "sprite", void 0);
    __decorate([
        property([cc.Prefab])
    ], Tile.prototype, "explosionPrefabs", void 0);
    __decorate([
        property([cc.SpriteFrame])
    ], Tile.prototype, "fruitSprites", void 0);
    Tile = Tile_1 = __decorate([
        ccclass
    ], Tile);
    return Tile;
}(cc.Component));
exports.default = Tile;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Yu/MultiMoleGame/MultiplayerMoleGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2606exnLdFO95st+A2RI+AQ', 'MultiplayerMoleGameController');
// scripts/Yu/MultiMoleGame/MultiplayerMoleGameController.ts

"use strict";
// File: MultiplayerMoleGameController.ts
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var MultiplayerGameScene_1 = require("./MultiplayerGameScene");
var MultiGuestViewer_1 = require("./MultiGuestViewer");
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiplayerMoleGameController = /** @class */ (function (_super) {
    __extends(MultiplayerMoleGameController, _super);
    function MultiplayerMoleGameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myGameArea = null;
        _this.opponentGameArea = null;
        _this.exitButton = null;
        _this.myNameLabel = null;
        _this.myCharacterNode = null;
        _this.guestNameLabel = null;
        _this.guestCharacterNode = null;
        _this.myGameCtrl = null;
        _this.opponentView = null;
        _this._alreadyStarted = false;
        return _this;
    }
    MultiplayerMoleGameController.prototype.start = function () {
        var _this = this;
        console.log("[MMGC] myGameArea 연결 상태:", !!this.myGameArea);
        console.log("[MMGC] myGameArea에 PlayerMoleGameScene이 붙었는가:", !!(this.myGameArea && this.myGameArea.getComponent(MultiplayerGameScene_1.default)));
        if (this._alreadyStarted)
            return;
        this._alreadyStarted = true;
        // ─── 1) “multi-game-start” 리스너를 제일 먼저 등록 ───
        cc.director.on("multi-game-start", function () {
            console.log("[MMGC] 'multi-game-start' 수신 → myGameCtrl:", _this.myGameCtrl);
            if (_this.myGameCtrl) {
                _this.myGameCtrl.startGame();
            }
            else {
                cc.error("[MMGC] myGameCtrl이 null이라 startGame을 호출할 수 없습니다.");
            }
        });
        console.log("[MMGC] 'multi-game-start' 리스너 등록 완료");
        // ─── 2) GameState 복구 ───
        // const savedSequence = cc.sys.localStorage.getItem("selectedGameSequence");
        // const savedIndex = cc.sys.localStorage.getItem("currentGameIndex");
        // if (savedSequence) {
        //     try {
        //         GameState.selectedGameSequence = JSON.parse(savedSequence);
        //         GameState.currentGameIndex = Number(savedIndex) || 0;
        //         cc.log("GameState 복구 완료:", GameState.selectedGameSequence, GameState.currentGameIndex);
        //     } catch (e) {
        //         cc.warn("selectedGameSequence 복구 실패:", e);
        //     }
        // }
        var savedHost = cc.sys.localStorage.getItem("isHost");
        GameState_1.default.isHost = savedHost === "true";
        cc.log("복원된 isHost 값:", GameState_1.default.isHost);
        // ─── 3) 상대편 뷰어/내 화면 컨트롤러 연결 ───
        this.myGameCtrl = this.myGameArea ? this.myGameArea.getComponent(MultiplayerGameScene_1.default) : null;
        console.log("[MMGC] myGameArea 노드:", this.myGameArea);
        console.log("[MMGC] 할당된 myGameCtrl:", this.myGameCtrl);
        if (!this.myGameArea) {
            cc.error("[MMGC] 에러: myGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.myGameCtrl) {
            cc.error("[MMGC] 에러: myGameArea 노드에 PlayerMoleGameScene 컴포넌트가 붙어 있는지 확인하세요.");
        }
        this.opponentView = this.opponentGameArea ? this.opponentGameArea.getComponent(MultiGuestViewer_1.default) : null;
        console.log("[MMGC] opponentGameArea 노드:", this.opponentGameArea);
        console.log("[MMGC] 할당된 opponentView:", this.opponentView);
        if (!this.opponentGameArea) {
            cc.error("[MMGC] 에러: opponentGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.opponentView) {
            cc.error("[MMGC] 에러: opponentGameArea 노드에 OpponentMoleViewer 컴포넌트가 붙어 있는지 확인하세요.");
        }
        // ─── 4) 화면에 닉네임·캐릭터 세팅 ───
        this.setPlayerInfoFromGameState();
        // 이걸 작성해주시면 됩니다.
        // ─── 5) 공통 소켓 초기화 + 리스너 등록 ───
        MultiFlowController_1.default.initializeSocketListeners();
        // ─── 6) 상대편 spawn/히트/점수 업데이트 이벤트 바인딩 ───
        cc.director.on("spawn-mole", function (data) {
            console.log("[MMGC] 'spawn-mole' 이벤트 수신 →", data);
            if (_this.opponentView) {
                _this.opponentView.spawnMoleFromData(data);
            }
        });
        cc.director.on("hit-mole", function (data) {
            console.log("[MMGC] 'hit-mole' 이벤트 수신 →", data);
            if (_this.opponentView) {
                _this.opponentView.hitMoleAnimation(data.index, data.moleType);
            }
        });
        // ─── 6-1) score-update 리스너 수정 ───
        cc.director.on("score-update", function (data) {
            // "내가 보낸 점수"는 무시하고, 상대방 점수만 UI에 표시!
            var isHost = GameState_1.default.isHost;
            if (isHost && data.player === "guest") {
                _this.opponentView.setScore(data.score);
            }
            else if (!isHost && data.player === "host") {
                _this.opponentView.setScore(data.score);
            }
            // 만약 내 점수인데 여기서 내 opponentView도 바꾸면 UI 꼬임 발생!
        });
        // ─── 7) 종료 버튼 연결 (메인으로) ───
        if (this.exitButton) {
            this.exitButton.on(cc.Node.EventType.TOUCH_END, this.loadMain, this);
        }
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.setPlayerInfoFromGameState = function () {
        var isHost = GameState_1.default.isHost;
        var myName = GameState_1.default.nickname || "나";
        var myChar = GameState_1.default.character || "dog";
        var guestName = GameState_1.default.guestNickname || "게스트";
        var guestChar = GameState_1.default.guestCharacter || "rabbit";
        var hostName = GameState_1.default.hostNickname || "호스트";
        var hostChar = GameState_1.default.hostCharacter || "tiger";
        if (isHost) {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = guestName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, guestChar);
        }
        else {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = hostName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, hostChar);
        }
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.setCharacterSprite = function (node, characterKey) {
        var sprite = node.getComponent(cc.Sprite);
        if (!sprite)
            return;
        var path = "Images/Common/characters/" + characterKey + "Head";
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            if (!err && spriteFrame)
                sprite.spriteFrame = spriteFrame;
        });
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.loadMain = function () {
        var roomId = GameState_1.default.incomingRoomId || GameState_1.default.createdRoomId;
        var playerId = GameState_1.default.browserId;
        if (!cc.sys.isNative && window.socket && roomId && playerId) {
            console.log("[MMGC] 'leave-room' emit →", { roomId: roomId, playerId: playerId });
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        GameState_1.default.resetMultiplay();
        cc.sys.localStorage.removeItem("isHost");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "myGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "opponentGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMoleGameController.prototype, "myNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "myCharacterNode", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMoleGameController.prototype, "guestNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "guestCharacterNode", void 0);
    MultiplayerMoleGameController = __decorate([
        ccclass
    ], MultiplayerMoleGameController);
    return MultiplayerMoleGameController;
}(cc.Component));
exports.default = MultiplayerMoleGameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/3Match/3MExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '47031C8yUdJybh/T2EMl8MH', '3MExplain');
// scenes/Yu/3Match/3MExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("3M_GameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NlbmVzXFxZdVxcM01hdGNoXFwzTUV4cGxhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBOEMsb0NBQVk7SUFBMUQ7UUFBQSxxRUFxQ0M7UUFuQ0cscUJBQWUsR0FBYyxJQUFJLENBQUM7UUFHbEMsZ0NBQTBCLEdBQWMsSUFBSSxDQUFDOztJQWdDakQsQ0FBQztJQTlCRyxpQ0FBTSxHQUFOO1FBQUEsaUJBbUJDO1FBbEJHLFNBQVM7UUFDVCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVuRSx5QkFBeUI7UUFDekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRTtZQUN4RCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQy9CLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVE7YUFDaEMsQ0FBQztRQUNOLENBQUMsQ0FBQyxDQUFDO1FBRUgsc0JBQXNCO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7WUFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUMvQixFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxTQUFTO2FBQ2pDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCwyQ0FBZ0IsR0FBaEI7UUFDSSxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxvREFBeUIsR0FBekI7UUFDSSxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3hCLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDNUMsQ0FBQztJQWxDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzZEQUNjO0lBR2xDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7d0VBQ3lCO0lBTDVCLGdCQUFnQjtRQURwQyxPQUFPO09BQ2EsZ0JBQWdCLENBcUNwQztJQUFELHVCQUFDO0NBckNELEFBcUNDLENBckM2QyxFQUFFLENBQUMsU0FBUyxHQXFDekQ7a0JBckNvQixnQkFBZ0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVRpdGxlTWFuYWdlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxyXG4gICAgZ2FtZVN0YXJ0QnV0dG9uOiBjYy5CdXR0b24gPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXHJcbiAgICBCYWNrVG9TaW5nbGVHYW1lTGlzdEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgICAgLy8g7YG066atIOydtOuypO2KuFxyXG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oJ2NsaWNrJywgdGhpcy5vbkNsaWNrU3RhcnRHYW1lLCB0aGlzKTtcclxuXHJcbiAgICAgICAgLy8g66eI7Jqw7IqkIOynhOyehSDsi5wg7Luk7IScIOuwjyBob3ZlciDtmqjqs7xcclxuICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLk1PVVNFX0VOVEVSLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNjLmdhbWUuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xyXG4gICAgICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLnJ1bkFjdGlvbihcclxuICAgICAgICAgICAgICAgIGNjLnNjYWxlVG8oMC4xLCAxLjEpIC8vIOyVveqwhCDtmZXrjIBcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8g66eI7Jqw7IqkIOuCmOqwkCDsi5wg7Luk7IScIOuwjyDtmqjqs7wg67O16reAXHJcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9MRUFWRSwgKCkgPT4ge1xyXG4gICAgICAgICAgICBjYy5nYW1lLmNhbnZhcy5zdHlsZS5jdXJzb3IgPSBcImRlZmF1bHRcIjtcclxuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXHJcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4wKSAvLyDsm5Drnpgg7YGs6riw66GcXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja1N0YXJ0R2FtZSgpIHtcclxuICAgICAgICBjYy5sb2coXCLqsozsnoQg7Iuc7J6RIOuyhO2KvCDtgbTrpq3rkKhcIik7XHJcbiAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiM01fR2FtZVNjZW5lXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xpY2tCYWNrU2luZ2xlR2FtZUxpc3QoKSB7XHJcbiAgICAgICAgY2MubG9nKFwi7Iux6riA6rKM7J6E66as7Iqk7Yq466GcIOuPjOyVhOqwgOq4sFwiKTtcclxuICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJTaW5nbGVHYW1lTGlzdFwiKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/MultiMoleGame/MultiplayerGameScene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f09f8mp3lBBQYiP3QFem2cx', 'MultiplayerGameScene');
// scenes/Yu/MultiMoleGame/MultiplayerGameScene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// MultiplayerMoleController.ts
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PlayerMoleGameScene = /** @class */ (function (_super) {
    __extends(PlayerMoleGameScene, _super);
    function PlayerMoleGameScene() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Hole1 = null;
        _this.Hole2 = null;
        _this.Hole3 = null;
        _this.Hole4 = null;
        _this.Hole5 = null;
        _this.Hole6 = null;
        _this.Hole7 = null;
        _this.Hole8 = null;
        _this.Hole9 = null;
        _this.molePrefab = null;
        _this.molePrefabGood = null;
        _this.moleHitSprite = null;
        _this.goodMoleHitSprite = null;
        _this.hammerSprite = null;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.moleHoles = [];
        _this.holeStates = [];
        _this.hammerNode = null;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        _this.score = 0;
        _this.timer = 30;
        _this.isGameOver = false;
        _this.moleSpawnCallback = null;
        return _this;
    }
    /**
     * MultiGameFlowController에서 game-start 이벤트를 받으면
     * cc.director.emit("multi-game-start")를 트리거.
     * 여기서 startGame()이 호출됨
     */
    PlayerMoleGameScene.prototype.startGame = function () {
        this.initGame();
    };
    PlayerMoleGameScene.prototype.initGame = function () {
        this.moleHoles = [
            this.Hole1, this.Hole2, this.Hole3,
            this.Hole4, this.Hole5, this.Hole6,
            this.Hole7, this.Hole8, this.Hole9
        ];
        this.holeStates = new Array(9).fill(false);
        this.score = 0;
        this.timer = 10;
        this.isGameOver = false;
        this.createHammer();
        this.initTimer();
        this.initScore();
        this.schedule(this.decreaseTimer, 1);
        this.spawnMoles();
    };
    PlayerMoleGameScene.prototype.createHammer = function () {
        this.hammerNode = new cc.Node("Hammer");
        var sprite = this.hammerNode.addComponent(cc.Sprite);
        sprite.spriteFrame = this.hammerSprite;
        this.hammerNode.parent = this.node;
        this.hammerNode.zIndex = 999;
        this.hammerNode.setContentSize(200, 200);
        this.hammerNode.anchorX = 0.2;
        this.hammerNode.anchorY = 0.2;
        this.hammerNode.active = false;
    };
    PlayerMoleGameScene.prototype.initTimer = function () {
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimerLabel();
    };
    PlayerMoleGameScene.prototype.initScore = function () {
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScoreLabel();
    };
    PlayerMoleGameScene.prototype.updateTimerLabel = function () {
        this.timerLabel.string = "" + this.timer;
    };
    PlayerMoleGameScene.prototype.updateScoreLabel = function () {
        this.scoreLabel.string = "" + this.score;
    };
    PlayerMoleGameScene.prototype.decreaseTimer = function () {
        if (this.isGameOver)
            return;
        this.timer--;
        this.updateTimerLabel();
        if (this.timer <= 0) {
            this.endGame();
        }
    };
    PlayerMoleGameScene.prototype.spawnMoles = function () {
        var _this = this;
        if (this.moleSpawnCallback)
            this.unschedule(this.moleSpawnCallback);
        this.moleSpawnCallback = function () {
            if (_this.isGameOver)
                return;
            var available = _this.holeStates
                .map(function (v, i) { return (!v ? i : -1); })
                .filter(function (i) { return i !== -1; });
            if (available.length === 0)
                return;
            var idx = available[Math.floor(Math.random() * available.length)];
            var hole = _this.moleHoles[idx];
            var isGoodMole = Math.random() < 0.3;
            var mole = cc.instantiate(isGoodMole ? _this.molePrefabGood : _this.molePrefab);
            mole.name = "Mole";
            hole.addChild(mole);
            mole.setPosition(0, -130);
            mole.active = true;
            _this.holeStates[idx] = true;
            // (A) 터치 이벤트 등록: 두더지 터치 시 동작
            mole.on(cc.Node.EventType.TOUCH_END, function (e) {
                e.stopPropagation();
                if (!mole.active || _this.isGameOver)
                    return;
                // (1) 햄머 이펙트 재생
                var worldPos = mole.convertToWorldSpaceAR(cc.v2(0, 0));
                var localPos = _this.node.convertToNodeSpaceAR(worldPos);
                _this.showHammerEffect(localPos);
                // (2) 히트 스프라이트로 교체
                var sprite = mole.getComponent(cc.Sprite);
                if (sprite) {
                    sprite.spriteFrame = isGoodMole ? _this.goodMoleHitSprite : _this.moleHitSprite;
                }
                // (3) 점수 계산 및 UI 업데이트
                _this.score += isGoodMole ? -10 : 10;
                _this.updateScoreLabel();
                // (4) “hit-mole”과 “score-update” 네트워크 전송
                var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
                if (!cc.sys.isNative && window.socket && roomId) {
                    window.socket.emit("game-event", {
                        type: "hit-mole",
                        roomId: roomId,
                        payload: {
                            index: idx,
                            moleType: isGoodMole ? "good" : "bad"
                        }
                    });
                    // 공통 이벤트
                    window.socket.emit("game-event", {
                        type: "score-update",
                        roomId: roomId,
                        payload: {
                            player: GameState_1.default.isHost ? "host" : "guest",
                            score: _this.score
                        }
                    });
                }
                // (5) 동일 두더지에 터치 이벤트 중복 발생 방지
                mole.off(cc.Node.EventType.TOUCH_END, null, _this);
                // (6) 히트 애니메이션 후 두더지 제거
                cc.tween(mole)
                    .repeat(3, cc.tween()
                    .by(0.05, { angle: 15 })
                    .by(0.05, { angle: -30 })
                    .by(0.05, { angle: 15 }))
                    .delay(0.8)
                    .call(function () {
                    if (mole && mole.isValid) {
                        mole.destroy();
                        _this.holeStates[idx] = false;
                    }
                })
                    .start();
            }, _this);
            // (B) 기본 스폰 애니메이션 후 타임아웃 시 제거
            cc.tween(mole)
                .to(0.2, { position: cc.v3(0, -20) }, { easing: "sineOut" })
                .delay(1.0)
                .call(function () {
                if (mole.isValid) {
                    mole.off(cc.Node.EventType.TOUCH_END, null, _this);
                    mole.destroy();
                    _this.holeStates[idx] = false;
                }
            })
                .start();
            // (C) “spawn-mole” 네트워크 브로드캐스트
            var roomId = GameState_1.default.createdRoomId || GameState_1.default.incomingRoomId;
            if (!cc.sys.isNative && window.socket && roomId) {
                window.socket.emit("game-event", {
                    type: "spawn-mole",
                    roomId: roomId,
                    payload: {
                        index: idx,
                        type: isGoodMole ? "good" : "bad",
                        spawnTime: Date.now()
                    }
                });
            }
        };
        this.schedule(this.moleSpawnCallback, 1, cc.macro.REPEAT_FOREVER);
    };
    PlayerMoleGameScene.prototype.showHammerEffect = function (pos) {
        var _this = this;
        this.hammerNode.setPosition(pos);
        this.hammerNode.active = true;
        cc.tween(this.hammerNode)
            .set({ scale: 1.0 })
            .parallel(cc.tween().to(0.05, { scale: 1.2 }, { easing: "cubicOut" }), cc.tween().by(0.05, { position: cc.v3(0, -30) }))
            .parallel(cc.tween().to(0.1, { scale: 1.0 }, { easing: "bounceOut" }), cc.tween().by(0.1, { position: cc.v3(0, 30) }))
            .call(function () {
            _this.hammerNode.active = false;
        })
            .start();
    };
    /**
     *  타이머가 0이 되거나 다른 종료 조건일 때 호출
     *  → 공통 FlowController로 이관
     */
    PlayerMoleGameScene.prototype.endGame = function () {
        MultiFlowController_1.default.endGame(this);
    };
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole1", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole2", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole3", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole4", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole5", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole6", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole7", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole8", void 0);
    __decorate([
        property(cc.Node)
    ], PlayerMoleGameScene.prototype, "Hole9", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "molePrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "molePrefabGood", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "moleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "goodMoleHitSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PlayerMoleGameScene.prototype, "hammerSprite", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], PlayerMoleGameScene.prototype, "scoreDisplayPrefab", void 0);
    PlayerMoleGameScene = __decorate([
        ccclass
    ], PlayerMoleGameScene);
    return PlayerMoleGameScene;
}(cc.Component));
exports.default = PlayerMoleGameScene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NlbmVzXFxZdVxcTXVsdGlNb2xlR2FtZVxcTXVsdGlwbGF5ZXJHYW1lU2NlbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0JBQStCO0FBQy9CLGlFQUE0RDtBQUM1RCxrRkFBaUY7QUFDM0UsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBaUQsdUNBQVk7SUFBN0Q7UUFBQSxxRUE0UEM7UUEzUG9CLFdBQUssR0FBWSxJQUFJLENBQUM7UUFDdEIsV0FBSyxHQUFZLElBQUksQ0FBQztRQUN0QixXQUFLLEdBQVksSUFBSSxDQUFDO1FBQ3RCLFdBQUssR0FBWSxJQUFJLENBQUM7UUFDdEIsV0FBSyxHQUFZLElBQUksQ0FBQztRQUN0QixXQUFLLEdBQVksSUFBSSxDQUFDO1FBQ3RCLFdBQUssR0FBWSxJQUFJLENBQUM7UUFDdEIsV0FBSyxHQUFZLElBQUksQ0FBQztRQUN0QixXQUFLLEdBQVksSUFBSSxDQUFDO1FBRXBCLGdCQUFVLEdBQWMsSUFBSSxDQUFDO1FBQzdCLG9CQUFjLEdBQWMsSUFBSSxDQUFDO1FBQzVCLG1CQUFhLEdBQW1CLElBQUksQ0FBQztRQUNyQyx1QkFBaUIsR0FBbUIsSUFBSSxDQUFDO1FBRXpDLGtCQUFZLEdBQW1CLElBQUksQ0FBQztRQUN6Qyx3QkFBa0IsR0FBYyxJQUFJLENBQUM7UUFDckMsd0JBQWtCLEdBQWMsSUFBSSxDQUFDO1FBRWxELGVBQVMsR0FBYyxFQUFFLENBQUM7UUFDMUIsZ0JBQVUsR0FBYyxFQUFFLENBQUM7UUFDM0IsZ0JBQVUsR0FBWSxJQUFJLENBQUM7UUFDM0IsZUFBUyxHQUFZLElBQUksQ0FBQztRQUMxQixlQUFTLEdBQVksSUFBSSxDQUFDO1FBQzFCLGdCQUFVLEdBQWEsSUFBSSxDQUFDO1FBQzVCLGdCQUFVLEdBQWEsSUFBSSxD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c291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNdWx0aXBsYXllck1vbGVDb250cm9sbGVyLnRzXHJcbmltcG9ydCBHYW1lU3RhdGUgZnJvbSBcIi4uLy4uL0NvbnRyb2xsZXIvQ29tbW9uVUkvR2FtZVN0YXRlXCI7XHJcbmltcG9ydCBNdWx0aUdhbWVGbG93Q29udHJvbGxlciBmcm9tIFwiLi4vLi4vQ29udHJvbGxlci9NdWx0aS9NdWx0aUZsb3dDb250cm9sbGVyXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXJNb2xlR2FtZVNjZW5lIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuICBAcHJvcGVydHkoY2MuTm9kZSkgSG9sZTE6IGNjLk5vZGUgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKSBIb2xlMjogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpIEhvbGUzOiBjYy5Ob2RlID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuTm9kZSkgSG9sZTQ6IGNjLk5vZGUgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKSBIb2xlNTogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpIEhvbGU2OiBjYy5Ob2RlID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuTm9kZSkgSG9sZTc6IGNjLk5vZGUgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5Ob2RlKSBIb2xlODogY2MuTm9kZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLk5vZGUpIEhvbGU5OiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgQHByb3BlcnR5KGNjLlByZWZhYikgbW9sZVByZWZhYjogY2MuUHJlZmFiID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuUHJlZmFiKSBtb2xlUHJlZmFiR29vZDogY2MuUHJlZmFiID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpIG1vbGVIaXRTcHJpdGU6IGNjLlNwcml0ZUZyYW1lID0gbnVsbDtcclxuICBAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpIGdvb2RNb2xlSGl0U3ByaXRlOiBjYy5TcHJpdGVGcmFtZSA9IG51bGw7XHJcblxyXG4gIEBwcm9wZXJ0eShjYy5TcHJpdGVGcmFtZSkgaGFtbWVyU3ByaXRlOiBjYy5TcHJpdGVGcmFtZSA9IG51bGw7XHJcbiAgQHByb3BlcnR5KGNjLlByZWZhYikgdGltZXJEaXNwbGF5UHJlZmFiOiBjYy5QcmVmYWIgPSBudWxsO1xyXG4gIEBwcm9wZXJ0eShjYy5QcmVmYWIpIHNjb3JlRGlzcGxheVByZWZhYjogY2MuUHJlZmFiID0gbnVsbDtcclxuXHJcbiAgcHJpdmF0ZSBtb2xlSG9sZXM6IGNjLk5vZGVbXSA9IFtdO1xyXG4gIHByaXZhdGUgaG9sZVN0YXRlczogYm9vbGVhbltdID0gW107XHJcbiAgcHJpdmF0ZSBoYW1tZXJOb2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuICBwcml2YXRlIHRpbWVyTm9kZTogY2MuTm9kZSA9IG51bGw7XHJcbiAgcHJpdmF0ZSBzY29yZU5vZGU6IGNjLk5vZGUgPSBudWxsO1xyXG4gIHByaXZhdGUgdGltZXJMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xyXG4gIHByaXZhdGUgc2NvcmVMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICBwdWJsaWMgc2NvcmU6IG51bWJlciA9IDA7XHJcbiAgcHJpdmF0ZSB0aW1lcjogbnVtYmVyID0gMzA7XHJcbiAgcHVibGljIGlzR2FtZU92ZXI6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIG1vbGVTcGF3bkNhbGxiYWNrOiBGdW5jdGlvbiA9IG51bGw7XHJcblxyXG4gIC8qKiBcclxuICAgKiBNdWx0aUdhbWVGbG93Q29udHJvbGxlcuyXkOyEnCBnYW1lLXN0YXJ0IOydtOuypO2KuOulvCDrsJvsnLzrqbRcclxuICAgKiBjYy5kaXJlY3Rvci5lbWl0KFwibXVsdGktZ2FtZS1zdGFydFwiKeulvCDtirjrpqzqsbAuIFxyXG4gICAqIOyXrOq4sOyEnCBzdGFydEdhbWUoKeydtCDtmLjstpzrkKhcclxuICAgKi9cclxuICBwdWJsaWMgc3RhcnRHYW1lKCkge1xyXG4gICAgdGhpcy5pbml0R2FtZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0R2FtZSgpIHtcclxuICAgIHRoaXMubW9sZUhvbGVzID0gW1xyXG4gICAgICB0aGlzLkhvbGUxLCB0aGlzLkhvbGUyLCB0aGlzLkhvbGUzLFxyXG4gICAgICB0aGlzLkhvbGU0LCB0aGlzLkhvbGU1LCB0aGlzLkhvbGU2LFxyXG4gICAgICB0aGlzLkhvbGU3LCB0aGlzLkhvbGU4LCB0aGlzLkhvbGU5XHJcbiAgICBdO1xyXG4gICAgdGhpcy5ob2xlU3RhdGVzID0gbmV3IEFycmF5KDkpLmZpbGwoZmFsc2UpO1xyXG4gICAgdGhpcy5zY29yZSA9IDA7XHJcbiAgICB0aGlzLnRpbWVyID0gMTA7XHJcbiAgICB0aGlzLmlzR2FtZU92ZXIgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmNyZWF0ZUhhbW1lcigpO1xyXG4gICAgdGhpcy5pbml0VGltZXIoKTtcclxuICAgIHRoaXMuaW5pdFNjb3JlKCk7XHJcblxyXG4gICAgdGhpcy5zY2hlZHVsZSh0aGlzLmRlY3JlYXNlVGltZXIsIDEpO1xyXG4gICAgdGhpcy5zcGF3bk1vbGVzKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNyZWF0ZUhhbW1lcigpIHtcclxuICAgIHRoaXMuaGFtbWVyTm9kZSA9IG5ldyBjYy5Ob2RlKFwiSGFtbWVyXCIpO1xyXG4gICAgY29uc3Qgc3ByaXRlID0gdGhpcy5oYW1tZXJOb2RlLmFkZENvbXBvbmVudChjYy5TcHJpdGUpO1xyXG4gICAgc3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5oYW1tZXJTcHJpdGU7XHJcbiAgICB0aGlzLmhhbW1lck5vZGUucGFyZW50ID0gdGhpcy5ub2RlO1xyXG4gICAgdGhpcy5oYW1tZXJOb2RlLnpJbmRleCA9IDk5OTtcclxuICAgIHRoaXMuaGFtbWVyTm9kZS5zZXRDb250ZW50U2l6ZSgyMDAsIDIwMCk7XHJcbiAgICB0aGlzLmhhbW1lck5vZGUuYW5jaG9yWCA9IDAuMjtcclxuICAgIHRoaXMuaGFtbWVyTm9kZS5hbmNob3JZID0gMC4yO1xyXG4gICAgdGhpcy5oYW1tZXJOb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0VGltZXIoKSB7XHJcbiAgICB0aGlzLnRpbWVyTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMudGltZXJEaXNwbGF5UHJlZmFiKTtcclxuICAgIHRoaXMubm9kZS5hZGRDaGlsZCh0aGlzLnRpbWVyTm9kZSk7XHJcbiAgICB0aGlzLnRpbWVyTGFiZWwgPSB0aGlzLnRpbWVyTm9kZS5nZXRDaGlsZEJ5TmFtZShcIlRpbWVyTGFiZWxcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcclxuICAgIHRoaXMudXBkYXRlVGltZXJMYWJlbCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0U2NvcmUoKSB7XHJcbiAgICB0aGlzLnNjb3JlTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuc2NvcmVEaXNwbGF5UHJlZmFiKTtcclxuICAgIHRoaXMubm9kZS5hZGRDaGlsZCh0aGlzLnNjb3JlTm9kZSk7XHJcbiAgICB0aGlzLnNjb3JlTGFiZWwgPSB0aGlzLnNjb3JlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIlNjb3JlTGFiZWxcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcclxuICAgIHRoaXMudXBkYXRlU2NvcmVMYWJlbCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB1cGRhdGVUaW1lckxhYmVsKCkge1xyXG4gICAgdGhpcy50aW1lckxhYmVsLnN0cmluZyA9IGAke3RoaXMudGltZXJ9YDtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgdXBkYXRlU2NvcmVMYWJlbCgpIHtcclxuICAgIHRoaXMuc2NvcmVMYWJlbC5zdHJpbmcgPSBgJHt0aGlzLnNjb3JlfWA7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRlY3JlYXNlVGltZXIoKSB7XHJcbiAgICBpZiAodGhpcy5pc0dhbWVPdmVyKSByZXR1cm47XHJcbiAgICB0aGlzLnRpbWVyLS07XHJcbiAgICB0aGlzLnVwZGF0ZVRpbWVyTGFiZWwoKTtcclxuXHJcbiAgICBpZiAodGhpcy50aW1lciA8PSAwKSB7XHJcbiAgICAgIHRoaXMuZW5kR2FtZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzcGF3bk1vbGVzKCkge1xyXG4gICAgaWYgKHRoaXMubW9sZVNwYXduQ2FsbGJhY2spIHRoaXMudW5zY2hlZHVsZSh0aGlzLm1vbGVTcGF3bkNhbGxiYWNrKTtcclxuXHJcbiAgICB0aGlzLm1vbGVTcGF3bkNhbGxiYWNrID0gKCkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5pc0dhbWVPdmVyKSByZXR1cm47XHJcblxyXG4gICAgICBjb25zdCBhdmFpbGFibGUgPSB0aGlzLmhvbGVTdGF0ZXNcclxuICAgICAgICAubWFwKCh2LCBpKSA9PiAoIXYgPyBpIDogLTEpKVxyXG4gICAgICAgIC5maWx0ZXIoaSA9PiBpICE9PSAtMSk7XHJcbiAgICAgIGlmIChhdmFpbGFibGUubGVuZ3RoID09PSAwKSByZXR1cm47XHJcblxyXG4gICAgICBjb25zdCBpZHggPSBhdmFpbGFibGVbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXZhaWxhYmxlLmxlbmd0aCldO1xyXG4gICAgICBjb25zdCBob2xlID0gdGhpcy5tb2xlSG9sZXNbaWR4XTtcclxuICAgICAgY29uc3QgaXNHb29kTW9sZSA9IE1hdGgucmFuZG9tKCkgPCAwLjM7XHJcbiAgICAgIGNvbnN0IG1vbGUgPSBjYy5pbnN0YW50aWF0ZShpc0dvb2RNb2xlID8gdGhpcy5tb2xlUHJlZmFiR29vZCA6IHRoaXMubW9sZVByZWZhYik7XHJcbiAgICAgIG1vbGUubmFtZSA9IFwiTW9sZVwiO1xyXG4gICAgICBob2xlLmFkZENoaWxkKG1vbGUpO1xyXG4gICAgICBtb2xlLnNldFBvc2l0aW9uKDAsIC0xMzApO1xyXG4gICAgICBtb2xlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgIHRoaXMuaG9sZVN0YXRlc1tpZHhdID0gdHJ1ZTtcclxuXHJcbiAgICAgIC8vIChBKSDthLDsuZgg7J2067Kk7Yq4IOuTseuhnTog65GQ642U7KeAIO2EsOy5mCDsi5wg64+Z7J6RXHJcbiAgICAgIG1vbGUub24oXHJcbiAgICAgICAgY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELFxyXG4gICAgICAgIChlOiBjYy5FdmVudC5FdmVudFRvdWNoKSA9PiB7XHJcbiAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgaWYgKCFtb2xlLmFjdGl2ZSB8fCB0aGlzLmlzR2FtZU92ZXIpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAvLyAoMSkg7ZaE66i4IOydtO2Ome2KuCDsnqzsg51cclxuICAgICAgICAgIGNvbnN0IHdvcmxkUG9zID0gbW9sZS5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoMCwgMCkpO1xyXG4gICAgICAgICAgY29uc3QgbG9jYWxQb3MgPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIod29ybGRQb3MpO1xyXG4gICAgICAgICAgdGhpcy5zaG93SGFtbWVyRWZmZWN0KGxvY2FsUG9zKTtcclxuXHJcbiAgICAgICAgICAvLyAoMikg7Z6I7Yq4IOyKpO2UhOudvOydtO2KuOuhnCDqtZDssrRcclxuICAgICAgICAgIGNvbnN0IHNwcml0ZSA9IG1vbGUuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSk7XHJcbiAgICAgICAgICBpZiAoc3ByaXRlKSB7XHJcbiAgICAgICAgICAgIHNwcml0ZS5zcHJpdGVGcmFtZSA9IGlzR29vZE1vbGUgPyB0aGlzLmdvb2RNb2xlSGl0U3ByaXRlIDogdGhpcy5tb2xlSGl0U3ByaXRlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC8vICgzKSDsoJDsiJgg6rOE7IKwIOuwjyBVSSDsl4XrjbDsnbTtirhcclxuICAgICAgICAgIHRoaXMuc2NvcmUgKz0gaXNHb29kTW9sZSA/IC0xMCA6IDEwO1xyXG4gICAgICAgICAgdGhpcy51cGRhdGVTY29yZUxhYmVsKCk7XHJcblxyXG4gICAgICAgICAgLy8gKDQpIOKAnGhpdC1tb2xl4oCd6rO8IOKAnHNjb3JlLXVwZGF0ZeKAnSDrhKTtirjsm4ztgawg7KCE7IahXHJcbiAgICAgICAgICBjb25zdCByb29tSWQgPSBHYW1lU3RhdGUuY3JlYXRlZFJvb21JZCB8fCBHYW1lU3RhdGUuaW5jb21pbmdSb29tSWQ7XHJcbiAgICAgICAgICBpZiAoIWNjLnN5cy5pc05hdGl2ZSAmJiB3aW5kb3cuc29ja2V0ICYmIHJvb21JZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cuc29ja2V0LmVtaXQoXCJnYW1lLWV2ZW50XCIsIHtcclxuICAgICAgICAgICAgICB0eXBlOiBcImhpdC1tb2xlXCIsXHJcbiAgICAgICAgICAgICAgcm9vbUlkLCAvLyDsnbTqsbAg67m866i57Jy866m0IOyViOuQjFxyXG4gICAgICAgICAgICAgIHBheWxvYWQ6IHtcclxuICAgICAgICAgICAgICAgIGluZGV4OiBpZHgsXHJcbiAgICAgICAgICAgICAgICBtb2xlVHlwZTogaXNHb29kTW9sZSA/IFwiZ29vZFwiIDogXCJiYWRcIlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8vIOqzte2GtSDsnbTrsqTtirhcclxuICAgICAgICAgICAgd2luZG93LnNvY2tldC5lbWl0KFwiZ2FtZS1ldmVudFwiLCB7XHJcbiAgICAgICAgICAgICAgdHlwZTogXCJzY29yZS11cGRhdGVcIixcclxuICAgICAgICAgICAgICByb29tSWQsXHJcbiAgICAgICAgICAgICAgcGF5bG9hZDoge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyOiBHYW1lU3RhdGUuaXNIb3N0ID8gXCJob3N0XCIgOiBcImd1ZXN0XCIsXHJcbiAgICAgICAgICAgICAgICBzY29yZTogdGhpcy5zY29yZVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gKDUpIOuPmeydvCDrkZDrjZTsp4Dsl5Ag7YSw7LmYIOydtOuypO2KuCDspJHrs7Ug67Cc7IOdIOuwqeyngFxyXG4gICAgICAgICAgbW9sZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCBudWxsLCB0aGlzKTtcclxuXHJcbiAgICAgICAgICAvLyAoNikg7Z6I7Yq4IOyVoOuLiOuplOydtOyFmCDtm4Qg65GQ642U7KeAIOygnOqxsFxyXG4gICAgICAgICAgY2MudHdlZW4obW9sZSlcclxuICAgICAgICAgICAgLnJlcGVhdChcclxuICAgICAgICAgICAgICAzLFxyXG4gICAgICAgICAgICAgIGNjLnR3ZWVuKClcclxuICAgICAgICAgICAgICAgIC5ieSgwLjA1LCB7IGFuZ2xlOiAxNSB9KVxyXG4gICAgICAgICAgICAgICAgLmJ5KDAuMDUsIHsgYW5nbGU6IC0zMCB9KVxyXG4gICAgICAgICAgICAgICAgLmJ5KDAuMDUsIHsgYW5nbGU6IDE1IH0pXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLmRlbGF5KDAuOClcclxuICAgICAgICAgICAgLmNhbGwoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChtb2xlICYmIG1vbGUuaXNWYWxpZCkge1xyXG4gICAgICAgICAgICAgICAgbW9sZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhvbGVTdGF0ZXNbaWR4XSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0aGlzXHJcbiAgICAgICk7XHJcblxyXG4gICAgICAvLyAoQikg6riw67O4IOyKpO2PsCDslaDri4jrqZTsnbTshZgg7ZuEIO2DgOyehOyVhOybgyDsi5wg7KCc6rGwXHJcbiAgICAgIGNjLnR3ZWVuKG1vbGUpXHJcbiAgICAgICAgLnRvKDAuMiwgeyBwb3NpdGlvbjogY2MudjMoMCwgLTIwKSB9LCB7IGVhc2luZzogXCJzaW5lT3V0XCIgfSlcclxuICAgICAgICAuZGVsYXkoMS4wKVxyXG4gICAgICAgIC5jYWxsKCgpID0+IHtcclxuICAgICAgICAgIGlmIChtb2xlLmlzVmFsaWQpIHtcclxuICAgICAgICAgICAgbW9sZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCBudWxsLCB0aGlzKTtcclxuICAgICAgICAgICAgbW9sZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIHRoaXMuaG9sZVN0YXRlc1tpZHhdID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuc3RhcnQoKTtcclxuXHJcbiAgICAgIC8vIChDKSDigJxzcGF3bi1tb2xl4oCdIOuEpO2KuOybjO2BrCDruIzroZzrk5zsupDsiqTtirhcclxuICAgICAgY29uc3Qgcm9vbUlkID0gR2FtZVN0YXRlLmNyZWF0ZWRSb29tSWQgfHwgR2FtZVN0YXRlLmluY29taW5nUm9vbUlkO1xyXG4gICAgICBpZiAoIWNjLnN5cy5pc05hdGl2ZSAmJiB3aW5kb3cuc29ja2V0ICYmIHJvb21JZCkge1xyXG4gICAgICAgIHdpbmRvdy5zb2NrZXQuZW1pdChcImdhbWUtZXZlbnRcIiwge1xyXG4gICAgICAgICAgdHlwZTogXCJzcGF3bi1tb2xlXCIsXHJcbiAgICAgICAgICByb29tSWQsXHJcbiAgICAgICAgICBwYXlsb2FkOiB7XHJcbiAgICAgICAgICAgIGluZGV4OiBpZHgsXHJcbiAgICAgICAgICAgIHR5cGU6IGlzR29vZE1vbGUgPyBcImdvb2RcIiA6IFwiYmFkXCIsXHJcbiAgICAgICAgICAgIHNwYXduVGltZTogRGF0ZS5ub3coKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuc2NoZWR1bGUodGhpcy5tb2xlU3Bhd25DYWxsYmFjaywgMSwgY2MubWFjcm8uUkVQRUFUX0ZPUkVWRVIpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzaG93SGFtbWVyRWZmZWN0KHBvczogY2MuVmVjMikge1xyXG4gICAgdGhpcy5oYW1tZXJOb2RlLnNldFBvc2l0aW9uKHBvcyk7XHJcbiAgICB0aGlzLmhhbW1lck5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICBjYy50d2Vlbih0aGlzLmhhbW1lck5vZGUpXHJcbiAgICAgIC5zZXQoeyBzY2FsZTogMS4wIH0pXHJcbiAgICAgIC5wYXJhbGxlbChcclxuICAgICAgICBjYy50d2VlbigpLnRvKDAuMDUsIHsgc2NhbGU6IDEuMiB9LCB7IGVhc2luZzogXCJjdWJpY091dFwiIH0pLFxyXG4gICAgICAgIGNjLnR3ZWVuKCkuYnkoMC4wNSwgeyBwb3NpdGlvbjogY2MudjMoMCwgLTMwKSB9KVxyXG4gICAgICApXHJcbiAgICAgIC5wYXJhbGxlbChcclxuICAgICAgICBjYy50d2VlbigpLnRvKDAuMSwgeyBzY2FsZTogMS4wIH0sIHsgZWFzaW5nOiBcImJvdW5jZU91dFwiIH0pLFxyXG4gICAgICAgIGNjLnR3ZWVuKCkuYnkoMC4xLCB7IHBvc2l0aW9uOiBjYy52MygwLCAzMCkgfSlcclxuICAgICAgKVxyXG4gICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5oYW1tZXJOb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICB9KVxyXG4gICAgICAuc3RhcnQoKTtcclxuICB9XHJcblxyXG4gIC8qKiBcclxuICAgKiAg7YOA7J2066i46rCAIDDsnbQg65CY6rGw64KYIOuLpOuluCDsooXro4wg7KGw6rG07J28IOuVjCDtmLjstpxcclxuICAgKiAg4oaSIOqzte2GtSBGbG93Q29udHJvbGxlcuuhnCDsnbTqtIBcclxuICAgKi9cclxuICBwcml2YXRlIGVuZEdhbWUoKSB7XHJcbiAgICBNdWx0aUdhbWVGbG93Q29udHJvbGxlci5lbmRHYW1lKHRoaXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/MultiMoleGame/MultiplayerMoleGameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1ff7cpA9TFEG7L6+q66EBB4', 'MultiplayerMoleGameController');
// scenes/Yu/MultiMoleGame/MultiplayerMoleGameController.ts

"use strict";
// File: MultiplayerMoleGameController.ts
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var MultiplayerGameScene_1 = require("./MultiplayerGameScene");
var MultiGuestViewer_1 = require("./MultiGuestViewer");
var GameState_1 = require("../../Controller/CommonUI/GameState");
var MultiFlowController_1 = require("../../Controller/Multi/MultiFlowController");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MultiplayerMoleGameController = /** @class */ (function (_super) {
    __extends(MultiplayerMoleGameController, _super);
    function MultiplayerMoleGameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myGameArea = null;
        _this.opponentGameArea = null;
        _this.exitButton = null;
        _this.myNameLabel = null;
        _this.myCharacterNode = null;
        _this.guestNameLabel = null;
        _this.guestCharacterNode = null;
        _this.myGameCtrl = null;
        _this.opponentView = null;
        _this._alreadyStarted = false;
        return _this;
    }
    MultiplayerMoleGameController.prototype.start = function () {
        var _this = this;
        console.log("[MMGC] myGameArea 연결 상태:", !!this.myGameArea);
        console.log("[MMGC] myGameArea에 PlayerMoleGameScene이 붙었는가:", !!(this.myGameArea && this.myGameArea.getComponent(MultiplayerGameScene_1.default)));
        if (this._alreadyStarted)
            return;
        this._alreadyStarted = true;
        // ─── 1) “multi-game-start” 리스너를 제일 먼저 등록 ───
        cc.director.on("multi-game-start", function () {
            console.log("[MMGC] 'multi-game-start' 수신 → myGameCtrl:", _this.myGameCtrl);
            if (_this.myGameCtrl) {
                _this.myGameCtrl.startGame();
            }
            else {
                cc.error("[MMGC] myGameCtrl이 null이라 startGame을 호출할 수 없습니다.");
            }
        });
        console.log("[MMGC] 'multi-game-start' 리스너 등록 완료");
        // ─── 2) GameState 복구 ───
        var savedSequence = cc.sys.localStorage.getItem("selectedGameSequence");
        var savedIndex = cc.sys.localStorage.getItem("currentGameIndex");
        if (savedSequence) {
            try {
                GameState_1.default.selectedGameSequence = JSON.parse(savedSequence);
                GameState_1.default.currentGameIndex = Number(savedIndex) || 0;
                cc.log("GameState 복구 완료:", GameState_1.default.selectedGameSequence, GameState_1.default.currentGameIndex);
            }
            catch (e) {
                cc.warn("selectedGameSequence 복구 실패:", e);
            }
        }
        var savedHost = cc.sys.localStorage.getItem("isHost");
        GameState_1.default.isHost = savedHost === "true";
        cc.log("복원된 isHost 값:", GameState_1.default.isHost);
        // ─── 3) 상대편 뷰어/내 화면 컨트롤러 연결 ───
        this.myGameCtrl = this.myGameArea ? this.myGameArea.getComponent(MultiplayerGameScene_1.default) : null;
        console.log("[MMGC] myGameArea 노드:", this.myGameArea);
        console.log("[MMGC] 할당된 myGameCtrl:", this.myGameCtrl);
        if (!this.myGameArea) {
            cc.error("[MMGC] 에러: myGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.myGameCtrl) {
            cc.error("[MMGC] 에러: myGameArea 노드에 PlayerMoleGameScene 컴포넌트가 붙어 있는지 확인하세요.");
        }
        this.opponentView = this.opponentGameArea ? this.opponentGameArea.getComponent(MultiGuestViewer_1.default) : null;
        console.log("[MMGC] opponentGameArea 노드:", this.opponentGameArea);
        console.log("[MMGC] 할당된 opponentView:", this.opponentView);
        if (!this.opponentGameArea) {
            cc.error("[MMGC] 에러: opponentGameArea 프로퍼티가 반드시 Inspector에서 연결되어야 합니다.");
        }
        if (!this.opponentView) {
            cc.error("[MMGC] 에러: opponentGameArea 노드에 OpponentMoleViewer 컴포넌트가 붙어 있는지 확인하세요.");
        }
        // ─── 4) 화면에 닉네임·캐릭터 세팅 ───
        this.setPlayerInfoFromGameState();
        // 이걸 작성해주시면 됩니다.
        // ─── 5) 공통 소켓 초기화 + 리스너 등록 ───
        MultiFlowController_1.default.initializeSocketListeners();
        // ─── 6) 상대편 spawn/히트/점수 업데이트 이벤트 바인딩 ───
        cc.director.on("spawn-mole", function (data) {
            console.log("[MMGC] 'spawn-mole' 이벤트 수신 →", data);
            if (_this.opponentView) {
                _this.opponentView.spawnMoleFromData(data);
            }
        });
        cc.director.on("hit-mole", function (data) {
            console.log("[MMGC] 'hit-mole' 이벤트 수신 →", data);
            if (_this.opponentView) {
                _this.opponentView.hitMoleAnimation(data.index, data.moleType);
            }
        });
        // ─── 6-1) score-update 리스너 수정 ───
        cc.director.on("score-update", function (data) {
            // "내가 보낸 점수"는 무시하고, 상대방 점수만 UI에 표시!
            var isHost = GameState_1.default.isHost;
            if (isHost && data.player === "guest") {
                _this.opponentView.setScore(data.score);
            }
            else if (!isHost && data.player === "host") {
                _this.opponentView.setScore(data.score);
            }
            // 만약 내 점수인데 여기서 내 opponentView도 바꾸면 UI 꼬임 발생!
        });
        // ─── 7) 종료 버튼 연결 (메인으로) ───
        if (this.exitButton) {
            this.exitButton.on(cc.Node.EventType.TOUCH_END, this.loadMain, this);
        }
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.setPlayerInfoFromGameState = function () {
        var isHost = GameState_1.default.isHost;
        var myName = GameState_1.default.nickname || "나";
        var myChar = GameState_1.default.character || "dog";
        var guestName = GameState_1.default.guestNickname || "게스트";
        var guestChar = GameState_1.default.guestCharacter || "rabbit";
        var hostName = GameState_1.default.hostNickname || "호스트";
        var hostChar = GameState_1.default.hostCharacter || "tiger";
        if (isHost) {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = guestName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, guestChar);
        }
        else {
            if (this.myNameLabel)
                this.myNameLabel.string = myName;
            if (this.guestNameLabel)
                this.guestNameLabel.string = hostName;
            this.setCharacterSprite(this.myCharacterNode, myChar);
            this.setCharacterSprite(this.guestCharacterNode, hostChar);
        }
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.setCharacterSprite = function (node, characterKey) {
        var sprite = node.getComponent(cc.Sprite);
        if (!sprite)
            return;
        var path = "Images/Common/characters/" + characterKey + "Head";
        cc.resources.load(path, cc.SpriteFrame, function (err, spriteFrame) {
            if (!err && spriteFrame)
                sprite.spriteFrame = spriteFrame;
        });
    };
    // 공통 -> 복붙해도됌
    MultiplayerMoleGameController.prototype.loadMain = function () {
        var roomId = GameState_1.default.incomingRoomId || GameState_1.default.createdRoomId;
        var playerId = GameState_1.default.browserId;
        if (!cc.sys.isNative && window.socket && roomId && playerId) {
            console.log("[MMGC] 'leave-room' emit →", { roomId: roomId, playerId: playerId });
            window.socket.emit("leave-room", { roomId: roomId, playerId: playerId });
        }
        GameState_1.default.resetMultiplay();
        cc.sys.localStorage.removeItem("isHost");
        cc.director.loadScene("MainScene");
    };
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "myGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "opponentGameArea", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMoleGameController.prototype, "myNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "myCharacterNode", void 0);
    __decorate([
        property(cc.Label)
    ], MultiplayerMoleGameController.prototype, "guestNameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], MultiplayerMoleGameController.prototype, "guestCharacterNode", void 0);
    MultiplayerMoleGameController = __decorate([
        ccclass
    ], MultiplayerMoleGameController);
    return MultiplayerMoleGameController;
}(cc.Component));
exports.default = MultiplayerMoleGameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/3Match/3MatchBoard.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '04540WzUCdIWobTbZf++EPF', '3MatchBoard');
// scenes/Yu/3Match/3MatchBoard.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var _3MatchManager_1 = require("./3MatchManager");
var Tile_1 = require("./Tile");
var ThreeMatchBoard = /** @class */ (function (_super) {
    __extends(ThreeMatchBoard, _super);
    function ThreeMatchBoard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tilePrefab = null;
        _this.gameManager = null;
        _this.boardSize = 7; // 항상 8x8 고정
        _this.tileSize = 100;
        _this.gap = 10;
        _this.board = [];
        _this.isSwapping = false;
        return _this;
    }
    ThreeMatchBoard.prototype.start = function () {
        var _this = this;
        this.node.color = cc.Color.GRAY;
        this.createBoard();
        this.scheduleOnce(function () {
            _this.checkAndExplodeMatches(); // 게임 시작 후 첫 매칭 탐지
        }, 0.1);
    };
    ThreeMatchBoard.prototype.createBoard = function () {
        this.board = [];
        var totalTileSize = this.tileSize + this.gap;
        var startX = -(this.boardSize - 1) * totalTileSize / 2;
        var startY = (this.boardSize - 1) * totalTileSize / 2;
        for (var row = 0; row < this.boardSize; row++) {
            this.board[row] = [];
            for (var col = 0; col < this.boardSize; col++) {
                var tileNode = cc.instantiate(this.tilePrefab);
                tileNode.parent = this.node;
                var posX = startX + col * totalTileSize;
                var posY = startY - row * totalTileSize;
                tileNode.setPosition(posX, posY);
                var tile = tileNode.getComponent(Tile_1.default);
                tile.row = row;
                tile.col = col;
                // 1. bannedColors를 bannedIndices로
                var bannedIndices = [];
                if (col >= 2) {
                    var left1 = this.board[row][col - 1];
                    var left2 = this.board[row][col - 2];
                    if (left1 && left2 && left1['fruitIndex'] === left2['fruitIndex']) {
                        bannedIndices.push(left1['fruitIndex']);
                    }
                }
                if (row >= 2) {
                    var top1 = this.board[row - 1][col];
                    var top2 = this.board[row - 2][col];
                    if (top1 && top2 && top1['fruitIndex'] === top2['fruitIndex']) {
                        bannedIndices.push(top1['fruitIndex']);
                    }
                }
                // 2. 랜덤 과일 설정
                tile.setRandomFruitExcluding(bannedIndices);
                tile.addOutline();
                this.board[row][col] = tile;
            }
        }
    };
    ThreeMatchBoard.prototype.colorsAreEqual = function (c1, c2) {
        return c1.r === c2.r && c1.g === c2.g && c1.b === c2.b;
    };
    ThreeMatchBoard.prototype.checkAndExplodeMatches = function () {
        var _this = this;
        var matchedTiles = [];
        for (var row = 0; row < this.boardSize; row++) {
            for (var col = 0; col < this.boardSize; col++) {
                var tile = this.board[row][col];
                if (!tile)
                    continue;
                // 가로 검사
                if (col <= this.boardSize - 3) {
                    var t1 = this.board[row][col + 1];
                    var t2 = this.board[row][col + 2];
                    // 색상 비교 → 과일 인덱스 비교
                    if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                        matchedTiles.push(tile, t1, t2);
                    }
                }
                // 세로 검사
                if (row <= this.boardSize - 3) {
                    var t1 = this.board[row + 1][col];
                    var t2 = this.board[row + 2][col];
                    // 색상 비교 → 과일 인덱스 비교
                    if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                        matchedTiles.push(tile, t1, t2);
                    }
                }
            }
        }
        matchedTiles = Array.from(new Set(matchedTiles));
        if (matchedTiles.length > 0) {
            if (this.gameManager) {
                this.gameManager.addMatchScore(matchedTiles.length);
            }
            for (var _i = 0, matchedTiles_1 = matchedTiles; _i < matchedTiles_1.length; _i++) {
                var tile = matchedTiles_1[_i];
                tile.explode();
                this.board[tile.row][tile.col] = null;
            }
            this.scheduleOnce(function () {
                _this.fillEmptySpaces();
                _this.scheduleOnce(function () {
                    _this.spawnNewTiles();
                    _this.scheduleOnce(function () {
                        // **다시 매칭이 일어날 수 있으므로 재귀 호출**
                        _this.checkAndExplodeMatches();
                    }, 0.3);
                }, 0.3);
            }, 0.3);
        }
        else {
            // 폭발된 타일이 없으면 다음 행동 없음
            this.isSwapping = false;
        }
    };
    ThreeMatchBoard.prototype.swapTiles = function (tileA, tileB) {
        var _this = this;
        if (this.isSwapping)
            return;
        var rowDiff = Math.abs(tileA.row - tileB.row);
        var colDiff = Math.abs(tileA.col - tileB.col);
        if (!((rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1))) {
            console.log("인접한 타일이 아닙니다! 교환 불가");
            return;
        }
        this.isSwapping = true;
        // 보드에서 교환
        var tempRow = tileA.row;
        var tempCol = tileA.col;
        this.board[tileA.row][tileA.col] = tileB;
        this.board[tileB.row][tileB.col] = tileA;
        tileA.row = tileB.row;
        tileA.col = tileB.col;
        tileB.row = tempRow;
        tileB.col = tempCol;
        var posA = this.getTilePosition(tileA.row, tileA.col);
        var posB = this.getTilePosition(tileB.row, tileB.col);
        cc.tween(tileA.node).to(0.2, { position: posA }).start();
        cc.tween(tileB.node).to(0.2, { position: posB }).call(function () {
            // 임시로 매칭 탐지
            var matchedTiles = [];
            var detectTempMatch = function () {
                for (var row = 0; row < _this.boardSize; row++) {
                    for (var col = 0; col < _this.boardSize; col++) {
                        var tile = _this.board[row][col];
                        if (!tile)
                            continue;
                        // 가로
                        if (col <= _this.boardSize - 3) {
                            var t1 = _this.board[row][col + 1];
                            var t2 = _this.board[row][col + 2];
                            if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                                return true;
                            }
                        }
                        // 세로
                        if (row <= _this.boardSize - 3) {
                            var t1 = _this.board[row + 1][col];
                            var t2 = _this.board[row + 2][col];
                            if (t1 && t2 && tile['fruitIndex'] === t1['fruitIndex'] && tile['fruitIndex'] === t2['fruitIndex']) {
                                return true;
                            }
                        }
                    }
                }
                return false;
            };
            if (detectTempMatch()) {
                _this.checkAndExplodeMatches(); // 매칭이 있으면 계속 진행
            }
            else {
                // 없으면 되돌리기
                // 위치, 보드 정보 다시 교환
                _this.board[tileA.row][tileA.col] = tileB;
                _this.board[tileB.row][tileB.col] = tileA;
                var tempRow2 = tileA.row;
                var tempCol2 = tileA.col;
                tileA.row = tileB.row;
                tileA.col = tileB.col;
                tileB.row = tempRow2;
                tileB.col = tempCol2;
                var resetPosA = _this.getTilePosition(tileA.row, tileA.col);
                var resetPosB = _this.getTilePosition(tileB.row, tileB.col);
                cc.tween(tileA.node).to(0.2, { position: resetPosA }).start();
                cc.tween(tileB.node).to(0.2, { position: resetPosB }).call(function () {
                    _this.isSwapping = false;
                }).start();
            }
        }).start();
    };
    ThreeMatchBoard.prototype.fillEmptySpaces = function () {
        for (var col = 0; col < this.boardSize; col++) {
            for (var row = this.boardSize - 1; row >= 0; row--) {
                if (!this.board[row][col]) {
                    for (var upperRow = row - 1; upperRow >= 0; upperRow--) {
                        if (this.board[upperRow][col]) {
                            var fallingTile = this.board[upperRow][col];
                            this.board[row][col] = fallingTile;
                            this.board[upperRow][col] = null;
                            fallingTile.row = row;
                            fallingTile.col = col;
                            var targetPos = this.getTilePosition(row, col);
                            cc.tween(fallingTile.node)
                                .to(0.2, { position: targetPos })
                                .start();
                            break;
                        }
                    }
                }
            }
        }
    };
    ThreeMatchBoard.prototype.spawnNewTiles = function () {
        for (var row = 0; row < this.boardSize; row++) {
            for (var col = 0; col < this.boardSize; col++) {
                if (!this.board[row][col]) {
                    var tileNode = cc.instantiate(this.tilePrefab);
                    tileNode.parent = this.node;
                    var pos = this.getTilePosition(row, col);
                    tileNode.setPosition(pos);
                    var tile = tileNode.getComponent(Tile_1.default);
                    tile.row = row;
                    tile.col = col;
                    tile.setRandomFruit(); // 이전의 setRandomColor()에서 교체
                    tile.addOutline();
                    this.board[row][col] = tile;
                }
            }
        }
    };
    ThreeMatchBoard.prototype.getTilePosition = function (row, col) {
        var totalTileSize = this.tileSize + this.gap;
        var startX = -(this.boardSize - 1) * totalTileSize / 2;
        var startY = (this.boardSize - 1) * totalTileSize / 2;
        var x = startX + col * totalTileSize;
        var y = startY - row * totalTileSize;
        return new cc.Vec3(x, y, 0);
    };
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchBoard.prototype, "tilePrefab", void 0);
    __decorate([
        property(_3MatchManager_1.default)
    ], ThreeMatchBoard.prototype, "gameManager", void 0);
    ThreeMatchBoard = __decorate([
        ccclass
    ], ThreeMatchBoard);
    return ThreeMatchBoard;
}(cc.Component));
exports.default = ThreeMatchBoard;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/MoleGame/MoleExplain.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'afc55Gc2nZMuannl5wsNcAU', 'MoleExplain');
// scenes/Yu/MoleGame/MoleExplain.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameTitleManager = /** @class */ (function (_super) {
    __extends(GameTitleManager, _super);
    function GameTitleManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameStartButton = null;
        _this.BackToSingleGameListButton = null;
        return _this;
    }
    GameTitleManager.prototype.onLoad = function () {
        var _this = this;
        // 클릭 이벤트
        this.gameStartButton.node.on('click', this.onClickStartGame, this);
        // 마우스 진입 시 커서 및 hover 효과
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_ENTER, function () {
            cc.game.canvas.style.cursor = "pointer";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.1) // 약간 확대
            );
        });
        // 마우스 나감 시 커서 및 효과 복귀
        this.gameStartButton.node.on(cc.Node.EventType.MOUSE_LEAVE, function () {
            cc.game.canvas.style.cursor = "default";
            _this.gameStartButton.node.runAction(cc.scaleTo(0.1, 1.0) // 원래 크기로
            );
        });
    };
    GameTitleManager.prototype.onClickStartGame = function () {
        cc.log("게임 시작 버튼 클릭됨");
        cc.director.loadScene("MoleGameScene");
    };
    GameTitleManager.prototype.onClickBackSingleGameList = function () {
        cc.log("싱글게임리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "gameStartButton", void 0);
    __decorate([
        property(cc.Button)
    ], GameTitleManager.prototype, "BackToSingleGameListButton", void 0);
    GameTitleManager = __decorate([
        ccclass
    ], GameTitleManager);
    return GameTitleManager;
}(cc.Component));
exports.default = GameTitleManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NlbmVzXFxZdVxcTW9sZUdhbWVcXE1vbGVFeHBsYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQThDLG9DQUFZO0lBQTFEO1FBQUEscUVBcUNDO1FBbkNHLHFCQUFlLEdBQWMsSUFBSSxDQUFDO1FBR2xDLGdDQUEwQixHQUFjLElBQUksQ0FBQzs7SUFnQ2pELENBQUM7SUE5QkcsaUNBQU0sR0FBTjtRQUFBLGlCQW1CQztRQWxCRyxTQUFTO1FBQ1QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFbkUseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDeEQsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7WUFDeEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUMvQixFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRO2FBQ2hDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztRQUVILHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3hELEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDL0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsU0FBUzthQUNqQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsMkNBQWdCLEdBQWhCO1FBQ0ksRUFBRSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN2QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsb0RBQXlCLEdBQXpCO1FBQ0ksRUFBRSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN4QixFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFsQ0Q7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzs2REFDYztJQUdsQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3dFQUN5QjtJQUw1QixnQkFBZ0I7UUFEcEMsT0FBTztPQUNhLGdCQUFnQixDQXFDcEM7SUFBRCx1QkFBQztDQXJDRCxBQXFDQyxDQXJDNkMsRUFBRSxDQUFDLFNBQVMsR0FxQ3pEO2tCQXJDb0IsZ0JBQWdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVUaXRsZU1hbmFnZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KGNjLkJ1dHRvbilcclxuICAgIGdhbWVTdGFydEJ1dHRvbjogY2MuQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxyXG4gICAgQmFja1RvU2luZ2xlR2FtZUxpc3RCdXR0b246IGNjLkJ1dHRvbiA9IG51bGw7XHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIC8vIO2BtOumrSDsnbTrsqTtirhcclxuICAgICAgICB0aGlzLmdhbWVTdGFydEJ1dHRvbi5ub2RlLm9uKCdjbGljaycsIHRoaXMub25DbGlja1N0YXJ0R2FtZSwgdGhpcyk7XHJcblxyXG4gICAgICAgIC8vIOuniOyasOyKpCDsp4TsnoUg7IucIOy7pOyEnCDrsI8gaG92ZXIg7Zqo6rO8XHJcbiAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9FTlRFUiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBjYy5nYW1lLmNhbnZhcy5zdHlsZS5jdXJzb3IgPSBcInBvaW50ZXJcIjtcclxuICAgICAgICAgICAgdGhpcy5nYW1lU3RhcnRCdXR0b24ubm9kZS5ydW5BY3Rpb24oXHJcbiAgICAgICAgICAgICAgICBjYy5zY2FsZVRvKDAuMSwgMS4xKSAvLyDslb3qsIQg7ZmV64yAXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIOuniOyasOyKpCDrgpjqsJAg7IucIOy7pOyEnCDrsI8g7Zqo6rO8IOuzteq3gFxyXG4gICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfTEVBVkUsICgpID0+IHtcclxuICAgICAgICAgICAgY2MuZ2FtZS5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJkZWZhdWx0XCI7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZVN0YXJ0QnV0dG9uLm5vZGUucnVuQWN0aW9uKFxyXG4gICAgICAgICAgICAgICAgY2Muc2NhbGVUbygwLjEsIDEuMCkgLy8g7JuQ656YIO2BrOq4sOuhnFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xpY2tTdGFydEdhbWUoKSB7XHJcbiAgICAgICAgY2MubG9nKFwi6rKM7J6EIOyLnOyekSDrsoTtirwg7YG066at65CoXCIpO1xyXG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIk1vbGVHYW1lU2NlbmVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja0JhY2tTaW5nbGVHYW1lTGlzdCgpIHtcclxuICAgICAgICBjYy5sb2coXCLsi7HquIDqsozsnoTrpqzsiqTtirjroZwg64+M7JWE6rCA6riwXCIpO1xyXG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIlNpbmdsZUdhbWVMaXN0XCIpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scenes/Yu/3Match/3MatchManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b50cdZeRIBML5xf5ovOKREW', '3MatchManager');
// scenes/Yu/3Match/3MatchManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameState_1 = require("../../Controller/CommonUI/GameState");
var ThreeMatchManager = /** @class */ (function (_super) {
    __extends(ThreeMatchManager, _super);
    function ThreeMatchManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timerDisplayPrefab = null;
        _this.scoreDisplayPrefab = null;
        _this.boardNode = null;
        _this.comboGauge = null;
        _this.feverSprite = null;
        _this.exitButton = null;
        _this.gameOverUIPrefab = null;
        _this.gameStartOverlayPrefab = null;
        _this.totalTime = 30;
        _this.currentTime = 30;
        _this.score = 0;
        _this.timerNode = null;
        _this.scoreNode = null;
        _this.timerLabel = null;
        _this.scoreLabel = null;
        _this.comboValue = 0;
        _this.comboMax = 300;
        _this.isFeverTime = false;
        return _this;
    }
    ThreeMatchManager.prototype.start = function () {
        var _this = this;
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        if (this.feverSprite && this.feverSprite.isValid) {
            this.feverSprite.active = false;
        }
        if (this.gameStartOverlayPrefab) {
            var startOverlay = cc.instantiate(this.gameStartOverlayPrefab);
            this.node.addChild(startOverlay);
            startOverlay.setPosition(0, 0);
            // 애니메이션 시간 후에 시작 (2초 권장)
            this.scheduleOnce(function () {
                _this.startGameLogic();
            }, 2);
        }
        else {
            this.startGameLogic();
        }
    };
    ThreeMatchManager.prototype.startGameLogic = function () {
        // 타이머 UI
        this.timerNode = cc.instantiate(this.timerDisplayPrefab);
        this.node.addChild(this.timerNode);
        this.timerLabel = this.timerNode.getChildByName("TimerLabel").getComponent(cc.Label);
        this.updateTimer();
        // 점수 UI
        this.scoreNode = cc.instantiate(this.scoreDisplayPrefab);
        this.node.addChild(this.scoreNode);
        this.scoreLabel = this.scoreNode.getChildByName("ScoreLabel").getComponent(cc.Label);
        this.updateScore(0);
        // 피버 관련 초기화
        this.comboValue = 0;
        this.comboMax = 300;
        this.comboGauge.progress = 0;
        this.isFeverTime = false;
        if (this.feverSprite)
            this.feverSprite.active = false;
        // 타이머 시작
        this.schedule(this.updateTimer, 1);
    };
    ThreeMatchManager.prototype.updateTimer = function () {
        this.currentTime--;
        if (this.currentTime <= 0) {
            this.currentTime = 0;
            this.unschedule(this.updateTimer);
            this.onGameOver();
        }
        this.timerLabel.string = "" + this.currentTime;
    };
    ThreeMatchManager.prototype.updateScore = function (amount) {
        this.score += amount;
        this.scoreLabel.string = "" + this.score;
        this.increaseComboGauge(amount);
    };
    ThreeMatchManager.prototype.increaseComboGauge = function (amount) {
        if (this.isFeverTime)
            return;
        this.comboValue += amount;
        if (this.comboValue >= this.comboMax) {
            this.comboValue = this.comboMax;
            this.startFeverTime();
        }
        this.comboGauge.progress = this.comboValue / this.comboMax;
    };
    ThreeMatchManager.prototype.startFeverTime = function () {
        var _this = this;
        this.isFeverTime = true;
        this.feverSprite.active = true;
        this.scheduleOnce(function () {
            _this.endFeverTime();
        }, 10);
    };
    ThreeMatchManager.prototype.endFeverTime = function () {
        this.isFeverTime = false;
        this.comboValue = 0;
        this.comboGauge.progress = 0;
        this.feverSprite.active = false;
    };
    ThreeMatchManager.prototype.addMatchScore = function (matchCount) {
        var scoreToAdd = matchCount * 10;
        var finalScore = this.isFeverTime ? scoreToAdd * 2 : scoreToAdd;
        this.updateScore(finalScore);
    };
    ThreeMatchManager.prototype.onGameOver = function () {
        cc.log("게임 종료!");
        GameState_1.default.lastGameScene = cc.director.getScene().name;
        GameState_1.default.score = this.score;
        GameState_1.default.gameId = "FruitPuzzle";
        var gameOverUI = cc.instantiate(this.gameOverUIPrefab);
        this.node.addChild(gameOverUI);
        gameOverUI.setPosition(0, 0);
    };
    ThreeMatchManager.prototype.loadList = function () {
        console.log("싱글 게임 리스트로 돌아가기");
        cc.director.loadScene("SingleGameList");
    };
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "timerDisplayPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "scoreDisplayPrefab", void 0);
    __decorate([
        property(cc.Node)
    ], ThreeMatchManager.prototype, "boardNode", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], ThreeMatchManager.prototype, "comboGauge", void 0);
    __decorate([
        property(cc.Node)
    ], ThreeMatchManager.prototype, "feverSprite", void 0);
    __decorate([
        property(cc.Button)
    ], ThreeMatchManager.prototype, "exitButton", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "gameOverUIPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], ThreeMatchManager.prototype, "gameStartOverlayPrefab", void 0);
    ThreeMatchManager = __decorate([
        ccclass
    ], ThreeMatchManager);
    return ThreeMatchManager;
}(cc.Component));
exports.default = ThreeMatchManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/lib/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module dependencies.
 */

var url = require('./url');
var parser = require('socket.io-parser');
var Manager = require('./manager');
var debug = require('debug')('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup (uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = require('./manager');
exports.Socket = require('./socket');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/lib/url.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module dependencies.
 */

var parseuri = require('parseuri');
var debug = require('debug')('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url (uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || (typeof location !== 'undefined' && location);
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));

  return obj;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/lib/socket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module dependencies.
 */

var parser = require('socket.io-parser');
var Emitter = require('component-emitter');
var toArray = require('to-array');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:socket');
var parseqs = require('parseqs');
var hasBin = require('has-binary2');

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket (io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  this.flags = {};
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  if (!this.io.reconnecting) this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = {
    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
    data: args
  };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  this.flags = {};

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({type: parser.CONNECT, query: query});
    } else {
      this.packet({type: parser.CONNECT});
    }
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function (packet) {
  var sameNamespace = packet.nsp === this.nsp;
  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

  if (!sameNamespace && !rootNamespaceError) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emitBuffered();
  this.emit('connect');
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function (compress) {
  this.flags.compress = compress;
  return this;
};

/**
 * Sets the binary flag
 *
 * @param {Boolean} whether the emitted data contains binary
 * @return {Socket} self
 * @api public
 */

Socket.prototype.binary = function (binary) {
  this.flags.binary = binary;
  return this;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/lib/manager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module dependencies.
 */

var eio = require('engine.io-client');
var Socket = require('./socket');
var Emitter = require('component-emitter');
var parser = require('socket.io-parser');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:manager');
var indexOf = require('indexof');
var Backoff = require('backo2');

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager (uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' === typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
 * generate `socket.id` for the given `nsp`
 *
 * @param {String} nsp
 * @return {String}
 * @api private
 */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    if (timeout === 0) {
      openSub.destroy(); // prevents a race condition with the 'open' event
    }

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting () {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/socket.io-parser/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module dependencies.
 */

var debug = require('debug')('socket.io-parser');
var Emitter = require('component-emitter');
var binary = require('./binary');
var isArray = require('isarray');
var isBuf = require('./is-buffer');

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = 4;

/**
 * Packet types.
 *
 * @api public
 */

exports.types = [
  'CONNECT',
  'DISCONNECT',
  'EVENT',
  'ACK',
  'ERROR',
  'BINARY_EVENT',
  'BINARY_ACK'
];

/**
 * Packet type `connect`.
 *
 * @api public
 */

exports.CONNECT = 0;

/**
 * Packet type `disconnect`.
 *
 * @api public
 */

exports.DISCONNECT = 1;

/**
 * Packet type `event`.
 *
 * @api public
 */

exports.EVENT = 2;

/**
 * Packet type `ack`.
 *
 * @api public
 */

exports.ACK = 3;

/**
 * Packet type `error`.
 *
 * @api public
 */

exports.ERROR = 4;

/**
 * Packet type 'binary event'
 *
 * @api public
 */

exports.BINARY_EVENT = 5;

/**
 * Packet type `binary ack`. For acks with binary arguments.
 *
 * @api public
 */

exports.BINARY_ACK = 6;

/**
 * Encoder constructor.
 *
 * @api public
 */

exports.Encoder = Encoder;

/**
 * Decoder constructor.
 *
 * @api public
 */

exports.Decoder = Decoder;

/**
 * A socket.io Encoder instance
 *
 * @api public
 */

function Encoder() {}

var ERROR_PACKET = exports.ERROR + '"encode error"';

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function(obj, callback){
  debug('encoding packet %j', obj);

  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    encodeAsBinary(obj, callback);
  } else {
    var encoding = encodeAsString(obj);
    callback([encoding]);
  }
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {

  // first is type
  var str = '' + obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    str += obj.attachments + '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' !== obj.nsp) {
    str += obj.nsp + ',';
  }

  // immediately followed by the id
  if (null != obj.id) {
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    var payload = tryStringify(obj.data);
    if (payload !== false) {
      str += payload;
    } else {
      return ERROR_PACKET;
    }
  }

  debug('encoded %j as %s', obj, str);
  return str;
}

function tryStringify(str) {
  try {
    return JSON.stringify(str);
  } catch(e){
    return false;
  }
}

/**
 * Encode packet as 'buffer sequence' by removing blobs, and
 * deconstructing packet into object with placeholders and
 * a list of buffers.
 *
 * @param {Object} packet
 * @return {Buffer} encoded
 * @api private
 */

function encodeAsBinary(obj, callback) {

  function writeEncoding(bloblessData) {
    var deconstruction = binary.deconstructPacket(bloblessData);
    var pack = encodeAsString(deconstruction.packet);
    var buffers = deconstruction.buffers;

    buffers.unshift(pack); // add packet info to beginning of data list
    callback(buffers); // write all the buffers
  }

  binary.removeBlobs(obj, writeEncoding);
}

/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 * @api public
 */

function Decoder() {
  this.reconstructor = null;
}

/**
 * Mix in `Emitter` with Decoder.
 */

Emitter(Decoder.prototype);

/**
 * Decodes an encoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function(obj) {
  var packet;
  if (typeof obj === 'string') {
    packet = decodeString(obj);
    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json
      this.reconstructor = new BinaryReconstructor(packet);

      // no attachments, labeled binary but no binary data to follow
      if (this.reconstructor.reconPack.attachments === 0) {
        this.emit('decoded', packet);
      }
    } else { // non-binary full packet
      this.emit('decoded', packet);
    }
  } else if (isBuf(obj) || obj.base64) { // raw binary data
    if (!this.reconstructor) {
      throw new Error('got binary data when not reconstructing a packet');
    } else {
      packet = this.reconstructor.takeBinaryData(obj);
      if (packet) { // received final buffer
        this.reconstructor = null;
        this.emit('decoded', packet);
      }
    }
  } else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var i = 0;
  // look up type
  var p = {
    type: Number(str.charAt(0))
  };

  if (null == exports.types[p.type]) {
    return error('unknown packet type ' + p.type);
  }

  // look up attachments if type binary
  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
    var start = i + 1;
    while (str.charAt(++i) !== '-' && i != str.length) {}
    var buf = str.substring(start, i);
    if (buf != Number(buf) || str.charAt(i) !== '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' === str.charAt(i + 1)) {
    var start = i + 1;
    while (++i) {
      var c = str.charAt(i);
      if (',' === c) break;
      if (i === str.length) break;
    }
    p.nsp = str.substring(start, i);
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    var start = i + 1;
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      if (i === str.length) break;
    }
    p.id = Number(str.substring(start, i + 1));
  }

  // look up json data
  if (str.charAt(++i)) {
    var payload = tryParse(str.substr(i));
    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
    if (isPayloadValid) {
      p.data = payload;
    } else {
      return error('invalid payload');
    }
  }

  debug('decoded %s as %j', str, p);
  return p;
}

function tryParse(str) {
  try {
    return JSON.parse(str);
  } catch(e){
    return false;
  }
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function() {
  if (this.reconstructor) {
    this.reconstructor.finishedReconstruction();
  }
};

/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 * @api private
 */

function BinaryReconstructor(packet) {
  this.reconPack = packet;
  this.buffers = [];
}

/**
 * Method to be called when binary data received from connection
 * after a BINARY_EVENT packet.
 *
 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
 * @return {null | Object} returns null if more binary data is expected or
 *   a reconstructed packet object if all buffers have been received.
 * @api private
 */

BinaryReconstructor.prototype.takeBinaryData = function(binData) {
  this.buffers.push(binData);
  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list
    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
    this.finishedReconstruction();
    return packet;
  }
  return null;
};

/**
 * Cleans up binary packet reconstruction variables.
 *
 * @api private
 */

BinaryReconstructor.prototype.finishedReconstruction = function() {
  this.reconPack = null;
  this.buffers = [];
};

function error(msg) {
  return {
    type: exports.ERROR,
    data: 'parser error: ' + msg
  };
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/debug/src/browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (process){
/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

}).call(this,require("../../../../process/browser.js"))
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/parseuri/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    uri.pathNames = pathNames(uri, uri['path']);
    uri.queryKey = queryKey(uri, uri['query']);

    return uri;
};

function pathNames(obj, path) {
    var regx = /\/{2,9}/g,
        names = path.replace(regx, "/").split("/");

    if (path.substr(0, 1) == '/' || path.length === 0) {
        names.splice(0, 1);
    }
    if (path.substr(path.length - 1, 1) == '/') {
        names.splice(names.length - 1, 1);
    }

    return names;
}

function queryKey(uri, query) {
    var data = {};

    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
        if ($1) {
            data[$1] = $2;
        }
    });

    return data;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/component-emitter/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Expose `Emitter`.
 */

if (typeof module !== 'undefined') {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  // Remove event specific arrays for event types that no
  // one is subscribed for to avoid memory leak.
  if (callbacks.length === 0) {
    delete this._callbacks['$' + event];
  }

  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};

  var args = new Array(arguments.length - 1)
    , callbacks = this._callbacks['$' + event];

  for (var i = 1; i < arguments.length; i++) {
    args[i - 1] = arguments[i];
  }

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/to-array/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/parseqs/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/component-bind/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/lib/on.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on (obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function () {
      obj.removeListener(ev, fn);
    }
  };
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/has-binary2/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (Buffer){
/* global Blob File */

/*
 * Module requirements.
 */

var isArray = require('isarray');

var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' ||
                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
var withNativeFile = typeof File === 'function' ||
                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Supports Buffer, ArrayBuffer, Blob and File.
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary (obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      if (hasBinary(obj[i])) {
        return true;
      }
    }
    return false;
  }

  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||
    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||
    (withNativeBlob && obj instanceof Blob) ||
    (withNativeFile && obj instanceof File)
  ) {
    return true;
  }

  // see: https://github.com/Automattic/has-binary/pull/4
  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }

  return false;
}

}).call(this,require("buffer").Buffer)
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/indexof/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/backo2/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};


                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/isarray/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/socket.io-parser/binary.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/*global Blob,File*/

/**
 * Module requirements
 */

var isArray = require('isarray');
var isBuf = require('./is-buffer');
var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');
var withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');

/**
 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
 * Anything with blobs or files should be fed through removeBlobs before coming
 * here.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @api public
 */

exports.deconstructPacket = function(packet) {
  var buffers = [];
  var packetData = packet.data;
  var pack = packet;
  pack.data = _deconstructPacket(packetData, buffers);
  pack.attachments = buffers.length; // number of binary 'attachments'
  return {packet: pack, buffers: buffers};
};

function _deconstructPacket(data, buffers) {
  if (!data) return data;

  if (isBuf(data)) {
    var placeholder = { _placeholder: true, num: buffers.length };
    buffers.push(data);
    return placeholder;
  } else if (isArray(data)) {
    var newData = new Array(data.length);
    for (var i = 0; i < data.length; i++) {
      newData[i] = _deconstructPacket(data[i], buffers);
    }
    return newData;
  } else if (typeof data === 'object' && !(data instanceof Date)) {
    var newData = {};
    for (var key in data) {
      newData[key] = _deconstructPacket(data[key], buffers);
    }
    return newData;
  }
  return data;
}

/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @api public
 */

exports.reconstructPacket = function(packet, buffers) {
  packet.data = _reconstructPacket(packet.data, buffers);
  packet.attachments = undefined; // no longer useful
  return packet;
};

function _reconstructPacket(data, buffers) {
  if (!data) return data;

  if (data && data._placeholder) {
    return buffers[data.num]; // appropriate buffer (should be natural order anyway)
  } else if (isArray(data)) {
    for (var i = 0; i < data.length; i++) {
      data[i] = _reconstructPacket(data[i], buffers);
    }
  } else if (typeof data === 'object') {
    for (var key in data) {
      data[key] = _reconstructPacket(data[key], buffers);
    }
  }

  return data;
}

/**
 * Asynchronously removes Blobs or Files from data via
 * FileReader's readAsArrayBuffer method. Used before encoding
 * data as msgpack. Calls callback with the blobless data.
 *
 * @param {Object} data
 * @param {Function} callback
 * @api private
 */

exports.removeBlobs = function(data, callback) {
  function _removeBlobs(obj, curKey, containingObject) {
    if (!obj) return obj;

    // convert any blob
    if ((withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File)) {
      pendingBlobs++;

      // async filereader
      var fileReader = new FileReader();
      fileReader.onload = function() { // this.result == arraybuffer
        if (containingObject) {
          containingObject[curKey] = this.result;
        }
        else {
          bloblessData = this.result;
        }

        // if nothing pending its callback time
        if(! --pendingBlobs) {
          callback(bloblessData);
        }
      };

      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
    } else if (isArray(obj)) { // handle array
      for (var i = 0; i < obj.length; i++) {
        _removeBlobs(obj[i], i, obj);
      }
    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object
      for (var key in obj) {
        _removeBlobs(obj[key], key, obj);
      }
    }
  }

  var pendingBlobs = 0;
  var bloblessData = data;
  _removeBlobs(bloblessData);
  if (!pendingBlobs) {
    callback(bloblessData);
  }
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (Buffer){

module.exports = isBuf;

var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

var isView = function (obj) {
  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);
};

/**
 * Returns true if obj is a buffer or an arraybuffer.
 *
 * @api private
 */

function isBuf(obj) {
  return (withNativeBuffer && Buffer.isBuffer(obj)) ||
          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));
}

}).call(this,require("buffer").Buffer)
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/process/browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/debug/src/debug.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
module.exports = require('./socket');

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = require('engine.io-parser');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/buffer/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/has-binary2/node_modules/isarray/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io-client/node_modules/ms/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/socket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module dependencies.
 */

var transports = require('./transports/index');
var Emitter = require('component-emitter');
var debug = require('debug')('engine.io-client:socket');
var index = require('indexof');
var parser = require('engine.io-parser');
var parseuri = require('parseuri');
var parseqs = require('parseqs');

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket (uri, opts) {
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure
    : (typeof location !== 'undefined' && 'https:' === location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (typeof location !== 'undefined' ? location.hostname : 'localhost');
  this.port = opts.port || (typeof location !== 'undefined' && location.port
      ? location.port
      : (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.withCredentials = false !== opts.withCredentials;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.transportOptions = opts.transportOptions || {};
  this.readyState = '';
  this.writeBuffer = [];
  this.prevBufferLen = 0;
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || undefined;
  this.key = opts.key || undefined;
  this.passphrase = opts.passphrase || undefined;
  this.cert = opts.cert || undefined;
  this.ca = opts.ca || undefined;
  this.ciphers = opts.ciphers || undefined;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
  this.forceNode = !!opts.forceNode;

  // detect ReactNative environment
  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');

  // other options for Node.js or ReactNative client
  if (typeof self === 'undefined' || this.isReactNative) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }

    if (opts.localAddress) {
      this.localAddress = opts.localAddress;
    }
  }

  // set on handshake
  this.id = null;
  this.upgrades = null;
  this.pingInterval = null;
  this.pingTimeout = null;

  // set on heartbeat
  this.pingIntervalTimer = null;
  this.pingTimeoutTimer = null;

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = require('./transport');
Socket.transports = require('./transports/index');
Socket.parser = require('engine.io-parser');

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // per-transport options
  var options = this.transportOptions[name] || {};

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    query: query,
    socket: this,
    agent: options.agent || this.agent,
    hostname: options.hostname || this.hostname,
    port: options.port || this.port,
    secure: options.secure || this.secure,
    path: options.path || this.path,
    forceJSONP: options.forceJSONP || this.forceJSONP,
    jsonp: options.jsonp || this.jsonp,
    forceBase64: options.forceBase64 || this.forceBase64,
    enablesXDR: options.enablesXDR || this.enablesXDR,
    withCredentials: options.withCredentials || this.withCredentials,
    timestampRequests: options.timestampRequests || this.timestampRequests,
    timestampParam: options.timestampParam || this.timestampParam,
    policyPort: options.policyPort || this.policyPort,
    pfx: options.pfx || this.pfx,
    key: options.key || this.key,
    passphrase: options.passphrase || this.passphrase,
    cert: options.cert || this.cert,
    ca: options.ca || this.ca,
    ciphers: options.ciphers || this.ciphers,
    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
    extraHeaders: options.extraHeaders || this.extraHeaders,
    forceNode: options.forceNode || this.forceNode,
    localAddress: options.localAddress || this.localAddress,
    requestTimeout: options.requestTimeout || this.requestTimeout,
    protocols: options.protocols || void (0),
    isReactNative: this.isReactNative
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function () {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function (transport) {
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function () {
    self.onDrain();
  })
  .on('packet', function (packet) {
    self.onPacket(packet);
  })
  .on('error', function (e) {
    self.onError(e);
  })
  .on('close', function () {
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 });
  var failed = false;
  var self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen () {
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' === msg.type && 'probe' === msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' === transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' === self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport () {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  // Handle any error that happens while probing
  function onerror (err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose () {
    onerror('transport closed');
  }

  // When the socket is closed while we're probing
  function onclose () {
    onerror('socket closed');
  }

  // When the socket is upgraded while we're probing
  function onupgrade (to) {
    if (transport && to.name !== transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  // Remove all listeners on the transport and on self
  function cleanup () {
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();
};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' === this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' === this.readyState || 'open' === this.readyState ||
      'closing' === this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(JSON.parse(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if ('closed' === this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' === self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function () {
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function () {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' !== this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if ('function' === typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' === typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' === this.readyState || 'closed' === this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function () {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close () {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose () {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade () {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i < j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-parser/lib/browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module dependencies.
 */

var keys = require('./keys');
var hasBinary = require('has-binary2');
var sliceBuffer = require('arraybuffer.slice');
var after = require('after');
var utf8 = require('./utf8');

var base64encoder;
if (typeof ArrayBuffer !== 'undefined') {
  base64encoder = require('base64-arraybuffer');
}

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = require('blob');

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if (typeof utf8encode === 'function') {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  if (data === undefined) {
    return err;
  }
  // String data
  if (typeof data === 'string') {
    if (data.charAt(0) === 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      data = tryDecode(data);
      if (data === false) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

function tryDecode(data) {
  try {
    data = utf8.decode(data, { strict: false });
  } catch (e) {
    return false;
  }
  return data;
}

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!base64encoder) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data !== 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data === '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = '', n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (chr !== ':') {
      length += chr;
      continue;
    }

    if (length === '' || (length != (n = Number(length)))) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    msg = data.substr(i + 1, n);

    if (length != msg.length) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    if (msg.length) {
      packet = exports.decodePacket(msg, binaryType, false);

      if (err.type === packet.type && err.data === packet.data) {
        // parser error in individual packet - ignoring payload
        return callback(err, 0, 1);
      }

      var ret = callback(packet, i + n, l);
      if (false === ret) return;
    }

    // advance cursor
    i += n;
    length = '';
  }

  if (length !== '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] === 255) break;

      // 310 = char length of Number.MAX_VALUE
      if (msgLength.length > 310) {
        return callback(err, 0, 1);
      }

      msgLength += tailArray[i];
    }

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/base64-js/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/ieee754/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/buffer/node_modules/isarray/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transports/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module dependencies
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var XHR = require('./polling-xhr');
var JSONP = require('./polling-jsonp');
var websocket = require('./websocket');

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling (opts) {
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transport.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module dependencies.
 */

var parser = require('engine.io-parser');
var Emitter = require('component-emitter');

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;
  this.withCredentials = opts.withCredentials;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;
  this.forceNode = opts.forceNode;

  // results of ReactNative environment detection
  this.isReactNative = opts.isReactNative;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
  this.localAddress = opts.localAddress;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' === this.readyState || '' === this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function (packets) {
  if ('open' === this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function (data) {
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/arraybuffer.slice/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/after/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/blob/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : 
  false;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  return ary.map(function(chunk) {
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      return buf;
    }

    return chunk;
  });
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary).forEach(function(part) {
    bb.append(part);
  });

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  return new Blob(mapArrayBufferViews(ary), options || {});
};

if (typeof Blob !== 'undefined') {
  BlobBuilderConstructor.prototype = Blob.prototype;
  BlobConstructor.prototype = Blob.prototype;
}

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-parser/lib/utf8.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/*! https://mths.be/utf8js v2.1.2 by @mathias */

var stringFromCharCode = String.fromCharCode;

// Taken from https://mths.be/punycode
function ucs2decode(string) {
	var output = [];
	var counter = 0;
	var length = string.length;
	var value;
	var extra;
	while (counter < length) {
		value = string.charCodeAt(counter++);
		if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
			// high surrogate, and there is a next character
			extra = string.charCodeAt(counter++);
			if ((extra & 0xFC00) == 0xDC00) { // low surrogate
				output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
			} else {
				// unmatched surrogate; only append this code unit, in case the next
				// code unit is the high surrogate of a surrogate pair
				output.push(value);
				counter--;
			}
		} else {
			output.push(value);
		}
	}
	return output;
}

// Taken from https://mths.be/punycode
function ucs2encode(array) {
	var length = array.length;
	var index = -1;
	var value;
	var output = '';
	while (++index < length) {
		value = array[index];
		if (value > 0xFFFF) {
			value -= 0x10000;
			output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
			value = 0xDC00 | value & 0x3FF;
		}
		output += stringFromCharCode(value);
	}
	return output;
}

function checkScalarValue(codePoint, strict) {
	if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
		if (strict) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
		return false;
	}
	return true;
}
/*--------------------------------------------------------------------------*/

function createByte(codePoint, shift) {
	return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
}

function encodeCodePoint(codePoint, strict) {
	if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
		return stringFromCharCode(codePoint);
	}
	var symbol = '';
	if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
		symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
	}
	else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
		if (!checkScalarValue(codePoint, strict)) {
			codePoint = 0xFFFD;
		}
		symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
		symbol += createByte(codePoint, 6);
	}
	else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
		symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
		symbol += createByte(codePoint, 12);
		symbol += createByte(codePoint, 6);
	}
	symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
	return symbol;
}

function utf8encode(string, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	var codePoints = ucs2decode(string);
	var length = codePoints.length;
	var index = -1;
	var codePoint;
	var byteString = '';
	while (++index < length) {
		codePoint = codePoints[index];
		byteString += encodeCodePoint(codePoint, strict);
	}
	return byteString;
}

/*--------------------------------------------------------------------------*/

function readContinuationByte() {
	if (byteIndex >= byteCount) {
		throw Error('Invalid byte index');
	}

	var continuationByte = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	if ((continuationByte & 0xC0) == 0x80) {
		return continuationByte & 0x3F;
	}

	// If we end up here, it’s not a continuation byte
	throw Error('Invalid continuation byte');
}

function decodeSymbol(strict) {
	var byte1;
	var byte2;
	var byte3;
	var byte4;
	var codePoint;

	if (byteIndex > byteCount) {
		throw Error('Invalid byte index');
	}

	if (byteIndex == byteCount) {
		return false;
	}

	// Read first byte
	byte1 = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	// 1-byte sequence (no continuation bytes)
	if ((byte1 & 0x80) == 0) {
		return byte1;
	}

	// 2-byte sequence
	if ((byte1 & 0xE0) == 0xC0) {
		byte2 = readContinuationByte();
		codePoint = ((byte1 & 0x1F) << 6) | byte2;
		if (codePoint >= 0x80) {
			return codePoint;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 3-byte sequence (may include unpaired surrogates)
	if ((byte1 & 0xF0) == 0xE0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
		if (codePoint >= 0x0800) {
			return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 4-byte sequence
	if ((byte1 & 0xF8) == 0xF0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		byte4 = readContinuationByte();
		codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
			(byte3 << 0x06) | byte4;
		if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
			return codePoint;
		}
	}

	throw Error('Invalid UTF-8 detected');
}

var byteArray;
var byteCount;
var byteIndex;
function utf8decode(byteString, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	byteArray = ucs2decode(byteString);
	byteCount = byteArray.length;
	byteIndex = 0;
	var codePoints = [];
	var tmp;
	while ((tmp = decodeSymbol(strict)) !== false) {
		codePoints.push(tmp);
	}
	return ucs2encode(codePoints);
}

module.exports = {
	version: '2.1.2',
	encode: utf8encode,
	decode: utf8decode
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-parser/lib/keys.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/node_modules/debug/src/browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (process){
/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

}).call(this,require("../../../../process/browser.js"))
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/base64-arraybuffer/lib/base64-arraybuffer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(chars){
  "use strict";

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = chars.indexOf(base64[i]);
      encoded2 = chars.indexOf(base64[i+1]);
      encoded3 = chars.indexOf(base64[i+2]);
      encoded4 = chars.indexOf(base64[i+3]);

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/xmlhttprequest.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}// browser shim for xmlhttprequest module

var hasCORS = require('has-cors');
var globalThis = require('./globalThis');

module.exports = function (opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
    } catch (e) { }
  }
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transports/polling-xhr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/* global attachEvent */

/**
 * Module requirements.
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var Polling = require('./polling');
var Emitter = require('component-emitter');
var inherit = require('component-inherit');
var debug = require('debug')('engine.io-client:polling-xhr');
var globalThis = require('../globalThis');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty () {}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR (opts) {
  Polling.call(this, opts);
  this.requestTimeout = opts.requestTimeout;
  this.extraHeaders = opts.extraHeaders;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||
      port !== opts.port;
    this.xs = opts.secure !== isSSL;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function (opts) {
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;
  opts.withCredentials = this.withCredentials;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  opts.requestTimeout = this.requestTimeout;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function (data, fn) {
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function (err) {
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function () {
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function (data) {
    self.onData(data);
  });
  req.on('error', function (err) {
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request (opts) {
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined !== opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;
  this.withCredentials = opts.withCredentials;
  this.requestTimeout = opts.requestTimeout;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function () {
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}

    if ('POST' === this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    try {
      xhr.setRequestHeader('Accept', '*/*');
    } catch (e) {}

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = this.withCredentials;
    }

    if (this.requestTimeout) {
      xhr.timeout = this.requestTimeout;
    }

    if (this.hasXDR()) {
      xhr.onload = function () {
        self.onLoad();
      };
      xhr.onerror = function () {
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 2) {
          try {
            var contentType = xhr.getResponseHeader('Content-Type');
            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {
              xhr.responseType = 'arraybuffer';
            }
          } catch (e) {}
        }
        if (4 !== xhr.readyState) return;
        if (200 === xhr.status || 1223 === xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function () {
            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function () {
      self.onError(e);
    }, 0);
    return;
  }

  if (typeof document !== 'undefined') {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function () {
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function (data) {
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function (err) {
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function (fromError) {
  if ('undefined' === typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch (e) {}
  }

  if (typeof document !== 'undefined') {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function () {
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type');
    } catch (e) {}
    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {
      data = this.xhr.response || this.xhr.responseText;
    } else {
      data = this.xhr.responseText;
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function () {
  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function () {
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (typeof document !== 'undefined') {
  if (typeof attachEvent === 'function') {
    attachEvent('onunload', unloadHandler);
  } else if (typeof addEventListener === 'function') {
    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';
    addEventListener(terminationEvent, unloadHandler, false);
  }
}

function unloadHandler () {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transports/polling-jsonp.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module requirements.
 */

var Polling = require('./polling');
var inherit = require('component-inherit');
var globalThis = require('../globalThis');

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Noop.
 */

function empty () { }

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    callbacks = globalThis.___eio = (globalThis.___eio || []);
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (typeof addEventListener === 'function') {
    addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function (e) {
    self.onError('jsonp poll error', e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  } else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch (e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function () {
      if (self.iframe.readyState === 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transports/websocket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (Buffer){
/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parser = require('engine.io-parser');
var parseqs = require('parseqs');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:websocket');

var BrowserWebSocket, NodeWebSocket;

if (typeof WebSocket !== 'undefined') {
  BrowserWebSocket = WebSocket;
} else if (typeof self !== 'undefined') {
  BrowserWebSocket = self.WebSocket || self.MozWebSocket;
}

if (typeof window === 'undefined') {
  try {
    NodeWebSocket = require('ws');
  } catch (e) { }
}

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocketImpl = BrowserWebSocket || NodeWebSocket;

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
  this.protocols = opts.protocols;
  if (!this.usingBrowserWebSocket) {
    WebSocketImpl = NodeWebSocket;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function () {
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var uri = this.uri();
  var protocols = this.protocols;

  var opts = {};

  if (!this.isReactNative) {
    opts.agent = this.agent;
    opts.perMessageDeflate = this.perMessageDeflate;

    // SSL options for Node.js client
    opts.pfx = this.pfx;
    opts.key = this.key;
    opts.passphrase = this.passphrase;
    opts.cert = this.cert;
    opts.ca = this.ca;
    opts.ciphers = this.ciphers;
    opts.rejectUnauthorized = this.rejectUnauthorized;
  }

  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }
  if (this.localAddress) {
    opts.localAddress = this.localAddress;
  }

  try {
    this.ws =
      this.usingBrowserWebSocket && !this.isReactNative
        ? protocols
          ? new WebSocketImpl(uri, protocols)
          : new WebSocketImpl(uri)
        : new WebSocketImpl(uri, protocols, opts);
  } catch (err) {
    return this.emit('error', err);
  }

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'nodebuffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function () {
  var self = this;

  this.ws.onopen = function () {
    self.onOpen();
  };
  this.ws.onclose = function () {
    self.onClose();
  };
  this.ws.onmessage = function (ev) {
    self.onData(ev.data);
  };
  this.ws.onerror = function (e) {
    self.onError('websocket error', e);
  };
};

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function (packets) {
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function (packet) {
      parser.encodePacket(packet, self.supportsBinary, function (data) {
        if (!self.usingBrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (self.usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e) {
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done () {
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function () {
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function () {
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function () {
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||
    ('ws' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function () {
  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);
};

}).call(this,require("buffer").Buffer)
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/node_modules/debug/src/debug.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/has-cors/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/globalThis.browser.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}module.exports = (function () {
  if (typeof self !== 'undefined') {
    return self;
  } else if (typeof window !== 'undefined') {
    return window;
  } else {
    return Function('return this')(); // eslint-disable-line no-new-func
  }
})();

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/lib/transports/polling.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parseqs = require('parseqs');
var parser = require('engine.io-parser');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function () {
  var XMLHttpRequest = require('xmlhttprequest-ssl');
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function () {
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function (onPause) {
  var self = this;

  this.readyState = 'pausing';

  function pause () {
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function () {
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function () {
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function () {
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function (data) {
  var self = this;
  debug('polling got data %s', data);
  var callback = function (packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' === self.readyState && packet.type === 'open') {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' === packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' !== this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' === this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function () {
  var self = this;

  function close () {
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' === this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function (packets) {
  var self = this;
  this.writable = false;
  var callbackfn = function () {
    self.writable = true;
    self.emit('drain');
  };

  parser.encodePayload(packets, this.supportsBinary, function (data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' === schema && Number(this.port) !== 443) ||
     ('http' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/component-inherit/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/browser-resolve/empty.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/yeast/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}'use strict';

var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/engine.io-client/node_modules/ms/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------
